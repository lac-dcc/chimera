-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity minus_vector30_mafYi_rom is 
    generic(
             DWIDTH     : integer := 1; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 784
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of minus_vector30_mafYi_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 to 1=> "0", 2 to 8=> "1", 9 to 46=> "0", 47 to 51=> "1", 52 to 72=> "0", 73 to 80=> "1", 81 to 99=> "0", 
    100 to 108=> "1", 109 to 126=> "0", 127 to 136=> "1", 137 to 153=> "0", 154 to 164=> "1", 165 to 179=> "0", 180 to 192=> "1", 
    193 to 206=> "0", 207 to 220=> "1", 221 to 233=> "0", 234 to 249=> "1", 250 to 260=> "0", 261 to 277=> "1", 278 to 287=> "0", 
    288 to 305=> "1", 306 to 314=> "0", 315 to 324=> "1", 325 => "0", 326 to 332=> "1", 333 to 341=> "0", 342 to 351=> "1", 
    352 to 353=> "0", 354 to 360=> "1", 361 to 368=> "0", 369 to 378=> "1", 379 to 381=> "0", 382 to 389=> "1", 390 to 394=> "0", 
    395 to 404=> "1", 405 to 409=> "0", 410 to 416=> "1", 417 to 421=> "0", 422 to 431=> "1", 432 to 437=> "0", 438 to 444=> "1", 
    445 to 449=> "0", 450 to 458=> "1", 459 to 464=> "0", 465 to 472=> "1", 473 to 475=> "0", 476 to 485=> "1", 486 to 492=> "0", 
    493 to 500=> "1", 501 to 503=> "0", 504 to 512=> "1", 513 to 519=> "0", 520 to 529=> "1", 530 to 531=> "0", 532 to 558=> "1", 
    559 => "0", 560 to 615=> "1", 616 => "0", 617 to 643=> "1", 644 to 659=> "0", 660 to 668=> "1", 669 to 688=> "0", 
    689 to 696=> "1", 697 to 716=> "0", 717 to 724=> "1", 725 to 744=> "0", 745 to 751=> "1", 752 to 783=> "0" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "block_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "block";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity minus_vector30_mafYi is
    generic (
        DataWidth : INTEGER := 1;
        AddressRange : INTEGER := 784;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of minus_vector30_mafYi is
    component minus_vector30_mafYi_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    minus_vector30_mafYi_rom_U :  component minus_vector30_mafYi_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


