-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity find_boundary_shrink is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    Hdist_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    Hdist_rows_V_empty_n : IN STD_LOGIC;
    Hdist_rows_V_read : OUT STD_LOGIC;
    Hdist_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    Hdist_data_stream_0_V_empty_n : IN STD_LOGIC;
    Hdist_data_stream_0_V_read : OUT STD_LOGIC;
    threshold_height_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    threshold_height_empty_n : IN STD_LOGIC;
    threshold_height_read : OUT STD_LOGIC;
    shrink_y_min_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    shrink_y_min_empty_n : IN STD_LOGIC;
    shrink_y_min_read : OUT STD_LOGIC;
    shrink_y_max_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    shrink_y_max_empty_n : IN STD_LOGIC;
    shrink_y_max_read : OUT STD_LOGIC;
    range_min_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    range_min_empty_n : IN STD_LOGIC;
    range_min_read : OUT STD_LOGIC;
    bound_y_min : OUT STD_LOGIC_VECTOR (15 downto 0);
    bound_y_min_ap_vld : OUT STD_LOGIC;
    bound_y_max : OUT STD_LOGIC_VECTOR (15 downto 0);
    bound_y_max_ap_vld : OUT STD_LOGIC );
end;


architecture behav of find_boundary_shrink is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv31_7FFFFFFF : STD_LOGIC_VECTOR (30 downto 0) := "1111111111111111111111111111111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal Hdist_rows_V_blk_n : STD_LOGIC;
    signal Hdist_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_reg_772 : STD_LOGIC_VECTOR (0 downto 0);
    signal threshold_height_blk_n : STD_LOGIC;
    signal shrink_y_min_blk_n : STD_LOGIC;
    signal shrink_y_max_blk_n : STD_LOGIC;
    signal range_min_blk_n : STD_LOGIC;
    signal inBlock_i_i_reg_208 : STD_LOGIC_VECTOR (0 downto 0);
    signal bound_min_r_1_i_i_reg_220 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_max_r_1_i_i_reg_232 : STD_LOGIC_VECTOR (15 downto 0);
    signal character_num_i_i_reg_244 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_i_i_reg_256 : STD_LOGIC_VECTOR (30 downto 0);
    signal shrink_y_min_read_reg_699 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal shrink_y_max_read_reg_705 : STD_LOGIC_VECTOR (7 downto 0);
    signal range_min_read_reg_711 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_threshold_fu_267_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_threshold_reg_716 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_271_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_11_reg_721 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_fu_285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_726 : STD_LOGIC_VECTOR (0 downto 0);
    signal length_fu_291_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal length_reg_731 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_cast_i_i_fu_297_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_cast_i_i_reg_737 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_5_i_i_fu_300_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_5_i_i_reg_742 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_6_cast_i_i_fu_306_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_6_cast_i_i_reg_747 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_7_cast_i_i_fu_309_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_7_cast_i_i_reg_752 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_8_i_i_fu_312_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_i_i_reg_757 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_i_i_fu_315_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_i_i_reg_762 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_318_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_reg_767 : STD_LOGIC_VECTOR (15 downto 0);
    signal exitcond_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_reg_772_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_772_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_327_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_13_i_i_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_i_reg_781 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_i_reg_781_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal bound_min_temp_fu_339_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_min_temp_reg_791 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_min_temp_reg_791_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_i_i_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_i_i_reg_798 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_i_i_reg_798_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_i_i_reg_798_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_i_i_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_i_i_reg_802 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBlock_3_i_i_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBlock_3_i_i_reg_810 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal bound_min_r_1_5_i_i_fu_528_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_min_r_1_5_i_i_reg_815 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_max_r_1_4_i_i_fu_559_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_max_r_1_4_i_i_reg_822 : STD_LOGIC_VECTOR (15 downto 0);
    signal character_num_4_i_i_fu_622_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal character_num_4_i_i_reg_829 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_phi_mux_inBlock_i_i_phi_fu_212_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_bound_min_r_1_i_i_phi_fu_224_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_bound_max_r_1_i_i_phi_fu_236_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_character_num_i_i_phi_fu_248_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_min_temp_i_i_fu_154 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_min_temp_2_i_i_fu_590_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_12_fu_275_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal not_i_i_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_inBlock_i_i_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bound_min_r_1_fu_381_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_cast_i_i_fu_400_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_16_cast_i_i_fu_403_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_17_i_i_fu_407_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_character_num_i_i_fu_388_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_i_i_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_bound_min_r_1_i_i_fu_367_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_cond_i_i_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBlock_i_i_not_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_449_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_i_i_fu_413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_fu_481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_473_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_bound_min_temp_0_b_fu_424_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp2_fu_504_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp5_fu_512_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp9_fu_520_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_bound_max_r_1_i_i_fu_374_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp10_fu_536_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp11_fu_543_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp12_fu_551_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp13_fu_567_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp14_fu_574_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp15_fu_582_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal character_num_fu_432_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp16_fu_598_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp17_fu_606_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp18_fu_614_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_cast_i_i_fu_635_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_22_i_i_fu_638_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_22_cast_i_i_cast_fu_643_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_23_i_i_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_i_i_fu_652_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_cast_i_i_fu_664_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_29_i_i_fu_667_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_15_fu_672_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_i_i_fu_680_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    bound_max_r_1_i_i_reg_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_772_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                bound_max_r_1_i_i_reg_232 <= bound_max_r_1_4_i_i_reg_822;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                bound_max_r_1_i_i_reg_232 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    bound_min_r_1_i_i_reg_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_772_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                bound_min_r_1_i_i_reg_220 <= bound_min_r_1_5_i_i_reg_815;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                bound_min_r_1_i_i_reg_220 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    character_num_i_i_reg_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_772_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                character_num_i_i_reg_244 <= character_num_4_i_i_reg_829;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                character_num_i_i_reg_244 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    i_i_i_reg_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_322_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_i_i_reg_256 <= i_fu_327_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                i_i_i_reg_256 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    inBlock_i_i_reg_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_772_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                inBlock_i_i_reg_208 <= inBlock_3_i_i_reg_810;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                inBlock_i_i_reg_208 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_772_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                bound_max_r_1_4_i_i_reg_822 <= bound_max_r_1_4_i_i_fu_559_p3;
                bound_min_r_1_5_i_i_reg_815 <= bound_min_r_1_5_i_i_fu_528_p3;
                bound_min_temp_i_i_fu_154 <= bound_min_temp_2_i_i_fu_590_p3;
                character_num_4_i_i_reg_829 <= character_num_4_i_i_fu_622_p3;
                inBlock_3_i_i_reg_810 <= inBlock_3_i_i_fu_498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_322_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                bound_min_temp_reg_791 <= bound_min_temp_fu_339_p1;
                tmp_13_i_i_reg_781 <= tmp_13_i_i_fu_333_p2;
                tmp_20_i_i_reg_798 <= tmp_20_i_i_fu_343_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                bound_min_temp_reg_791_pp0_iter1_reg <= bound_min_temp_reg_791;
                exitcond_reg_772 <= exitcond_fu_322_p2;
                exitcond_reg_772_pp0_iter1_reg <= exitcond_reg_772;
                tmp_13_i_i_reg_781_pp0_iter1_reg <= tmp_13_i_i_reg_781;
                tmp_20_i_i_reg_798_pp0_iter1_reg <= tmp_20_i_i_reg_798;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond_reg_772_pp0_iter2_reg <= exitcond_reg_772_pp0_iter1_reg;
                tmp_20_i_i_reg_798_pp0_iter2_reg <= tmp_20_i_i_reg_798_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (range_min_empty_n = ap_const_logic_0) or (shrink_y_max_empty_n = ap_const_logic_0) or (shrink_y_min_empty_n = ap_const_logic_0) or (threshold_height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = Hdist_rows_V_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                icmp_reg_726 <= icmp_fu_285_p2;
                p_threshold_reg_716 <= p_threshold_fu_267_p1;
                range_min_read_reg_711 <= range_min_dout;
                shrink_y_max_read_reg_705 <= shrink_y_max_dout;
                shrink_y_min_read_reg_699 <= shrink_y_min_dout;
                tmp_11_reg_721 <= tmp_11_fu_271_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                length_reg_731 <= length_fu_291_p3;
                tmp_5_i_i_reg_742 <= tmp_5_i_i_fu_300_p2;
                    tmp_6_cast_i_i_reg_747(7 downto 0) <= tmp_6_cast_i_i_fu_306_p1(7 downto 0);
                    tmp_7_cast_i_i_reg_752(7 downto 0) <= tmp_7_cast_i_i_fu_309_p1(7 downto 0);
                    tmp_8_i_i_reg_757(7 downto 0) <= tmp_8_i_i_fu_312_p1(7 downto 0);
                    tmp_9_i_i_reg_762(7 downto 0) <= tmp_9_i_i_fu_315_p1(7 downto 0);
                    tmp_cast_i_i_reg_737(15 downto 0) <= tmp_cast_i_i_fu_297_p1(15 downto 0);
                tmp_reg_767 <= tmp_fu_318_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_772 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_14_i_i_reg_802 <= tmp_14_i_i_fu_348_p2;
            end if;
        end if;
    end process;
    tmp_cast_i_i_reg_737(16) <= '0';
    tmp_6_cast_i_i_reg_747(16 downto 8) <= "000000000";
    tmp_7_cast_i_i_reg_752(16 downto 8) <= "000000000";
    tmp_8_i_i_reg_757(15 downto 8) <= "00000000";
    tmp_9_i_i_reg_762(15 downto 8) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, Hdist_rows_V_empty_n, threshold_height_empty_n, shrink_y_min_empty_n, shrink_y_max_empty_n, range_min_empty_n, ap_enable_reg_pp0_iter1, exitcond_fu_322_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (range_min_empty_n = ap_const_logic_0) or (shrink_y_max_empty_n = ap_const_logic_0) or (shrink_y_min_empty_n = ap_const_logic_0) or (threshold_height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = Hdist_rows_V_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_fu_322_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_fu_322_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    Hdist_data_stream_0_V_blk_n_assign_proc : process(Hdist_data_stream_0_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_772)
    begin
        if (((exitcond_reg_772 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Hdist_data_stream_0_V_blk_n <= Hdist_data_stream_0_V_empty_n;
        else 
            Hdist_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    Hdist_data_stream_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_772, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_reg_772 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            Hdist_data_stream_0_V_read <= ap_const_logic_1;
        else 
            Hdist_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    Hdist_rows_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, Hdist_rows_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            Hdist_rows_V_blk_n <= Hdist_rows_V_empty_n;
        else 
            Hdist_rows_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    Hdist_rows_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, Hdist_rows_V_empty_n, threshold_height_empty_n, shrink_y_min_empty_n, shrink_y_max_empty_n, range_min_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (range_min_empty_n = ap_const_logic_0) or (shrink_y_max_empty_n = ap_const_logic_0) or (shrink_y_min_empty_n = ap_const_logic_0) or (threshold_height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = Hdist_rows_V_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            Hdist_rows_V_read <= ap_const_logic_1;
        else 
            Hdist_rows_V_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state7 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(Hdist_data_stream_0_V_empty_n, ap_enable_reg_pp0_iter1, exitcond_reg_772)
    begin
                ap_block_pp0_stage0_01001 <= ((exitcond_reg_772 = ap_const_lv1_0) and (ap_const_logic_0 = Hdist_data_stream_0_V_empty_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(Hdist_data_stream_0_V_empty_n, ap_enable_reg_pp0_iter1, exitcond_reg_772)
    begin
                ap_block_pp0_stage0_11001 <= ((exitcond_reg_772 = ap_const_lv1_0) and (ap_const_logic_0 = Hdist_data_stream_0_V_empty_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(Hdist_data_stream_0_V_empty_n, ap_enable_reg_pp0_iter1, exitcond_reg_772)
    begin
                ap_block_pp0_stage0_subdone <= ((exitcond_reg_772 = ap_const_lv1_0) and (ap_const_logic_0 = Hdist_data_stream_0_V_empty_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, Hdist_rows_V_empty_n, threshold_height_empty_n, shrink_y_min_empty_n, shrink_y_max_empty_n, range_min_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (range_min_empty_n = ap_const_logic_0) or (shrink_y_max_empty_n = ap_const_logic_0) or (shrink_y_min_empty_n = ap_const_logic_0) or (threshold_height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = Hdist_rows_V_empty_n) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(Hdist_data_stream_0_V_empty_n, exitcond_reg_772)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((exitcond_reg_772 = ap_const_lv1_0) and (ap_const_logic_0 = Hdist_data_stream_0_V_empty_n));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_fu_322_p2)
    begin
        if ((exitcond_fu_322_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_bound_max_r_1_i_i_phi_fu_236_p4_assign_proc : process(ap_block_pp0_stage0, bound_max_r_1_i_i_reg_232, exitcond_reg_772_pp0_iter2_reg, bound_max_r_1_4_i_i_reg_822, ap_enable_reg_pp0_iter3)
    begin
        if (((exitcond_reg_772_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_bound_max_r_1_i_i_phi_fu_236_p4 <= bound_max_r_1_4_i_i_reg_822;
        else 
            ap_phi_mux_bound_max_r_1_i_i_phi_fu_236_p4 <= bound_max_r_1_i_i_reg_232;
        end if; 
    end process;


    ap_phi_mux_bound_min_r_1_i_i_phi_fu_224_p4_assign_proc : process(ap_block_pp0_stage0, bound_min_r_1_i_i_reg_220, exitcond_reg_772_pp0_iter2_reg, bound_min_r_1_5_i_i_reg_815, ap_enable_reg_pp0_iter3)
    begin
        if (((exitcond_reg_772_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_bound_min_r_1_i_i_phi_fu_224_p4 <= bound_min_r_1_5_i_i_reg_815;
        else 
            ap_phi_mux_bound_min_r_1_i_i_phi_fu_224_p4 <= bound_min_r_1_i_i_reg_220;
        end if; 
    end process;


    ap_phi_mux_character_num_i_i_phi_fu_248_p4_assign_proc : process(ap_block_pp0_stage0, character_num_i_i_reg_244, exitcond_reg_772_pp0_iter2_reg, character_num_4_i_i_reg_829, ap_enable_reg_pp0_iter3)
    begin
        if (((exitcond_reg_772_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_character_num_i_i_phi_fu_248_p4 <= character_num_4_i_i_reg_829;
        else 
            ap_phi_mux_character_num_i_i_phi_fu_248_p4 <= character_num_i_i_reg_244;
        end if; 
    end process;


    ap_phi_mux_inBlock_i_i_phi_fu_212_p4_assign_proc : process(ap_block_pp0_stage0, inBlock_i_i_reg_208, exitcond_reg_772_pp0_iter2_reg, inBlock_3_i_i_reg_810, ap_enable_reg_pp0_iter3)
    begin
        if (((exitcond_reg_772_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_inBlock_i_i_phi_fu_212_p4 <= inBlock_3_i_i_reg_810;
        else 
            ap_phi_mux_inBlock_i_i_phi_fu_212_p4 <= inBlock_i_i_reg_208;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bound_max_r_1_4_i_i_fu_559_p3 <= 
        p_bound_max_r_1_i_i_fu_374_p3 when (sel_tmp1_fu_487_p2(0) = '1') else 
        sel_tmp12_fu_551_p3;
    bound_min_r_1_5_i_i_fu_528_p3 <= 
        p_bound_min_r_1_i_i_fu_367_p3 when (sel_tmp1_fu_487_p2(0) = '1') else 
        sel_tmp9_fu_520_p3;
    bound_min_r_1_fu_381_p3 <= 
        ap_const_lv16_0 when (tmp_13_i_i_reg_781_pp0_iter1_reg(0) = '1') else 
        bound_min_temp_i_i_fu_154;
    bound_min_temp_2_i_i_fu_590_p3 <= 
        bound_min_r_1_fu_381_p3 when (sel_tmp1_fu_487_p2(0) = '1') else 
        sel_tmp15_fu_582_p3;
    bound_min_temp_fu_339_p1 <= i_i_i_reg_256(16 - 1 downto 0);
    bound_y_max <= 
        ap_const_lv16_0 when (tmp_15_fu_672_p3(0) = '1') else 
        tmp_31_i_i_fu_680_p2;

    bound_y_max_ap_vld_assign_proc : process(tmp_20_i_i_reg_798_pp0_iter2_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_20_i_i_reg_798_pp0_iter2_reg = ap_const_lv1_1))) then 
            bound_y_max_ap_vld <= ap_const_logic_1;
        else 
            bound_y_max_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    bound_y_min <= 
        tmp_reg_767 when (tmp_23_i_i_fu_647_p2(0) = '1') else 
        tmp_24_i_i_fu_652_p2;

    bound_y_min_ap_vld_assign_proc : process(tmp_20_i_i_reg_798_pp0_iter2_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_20_i_i_reg_798_pp0_iter2_reg = ap_const_lv1_1))) then 
            bound_y_min_ap_vld <= ap_const_logic_1;
        else 
            bound_y_min_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    character_num_4_i_i_fu_622_p3 <= 
        p_character_num_i_i_fu_388_p3 when (sel_tmp1_fu_487_p2(0) = '1') else 
        sel_tmp18_fu_614_p3;
    character_num_fu_432_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(p_character_num_i_i_fu_388_p3));
    exitcond_fu_322_p2 <= "1" when (i_i_i_reg_256 = length_reg_731) else "0";
    i_fu_327_p2 <= std_logic_vector(unsigned(i_i_i_reg_256) + unsigned(ap_const_lv31_1));
    icmp_fu_285_p2 <= "1" when (signed(tmp_12_fu_275_p4) > signed(ap_const_lv31_0)) else "0";
    inBlock_3_i_i_fu_498_p2 <= (sel_tmp8_fu_473_p3 and not_sel_tmp_fu_492_p2);
    inBlock_i_i_not_fu_457_p2 <= (ap_phi_mux_inBlock_i_i_phi_fu_212_p4 xor ap_const_lv1_1);
    length_fu_291_p3 <= 
        tmp_11_reg_721 when (icmp_reg_726(0) = '1') else 
        ap_const_lv31_1;
    not_i_i_fu_356_p2 <= (tmp_13_i_i_reg_781_pp0_iter1_reg xor ap_const_lv1_1);
    not_sel_tmp_fu_492_p2 <= (sel_tmp1_fu_487_p2 xor ap_const_lv1_1);
    or_cond_i_i_fu_395_p2 <= (tmp_14_i_i_reg_802 or p_inBlock_i_i_fu_361_p2);
    p_bound_max_r_1_i_i_fu_374_p3 <= 
        ap_const_lv16_0 when (tmp_13_i_i_reg_781_pp0_iter1_reg(0) = '1') else 
        ap_phi_mux_bound_max_r_1_i_i_phi_fu_236_p4;
    p_bound_min_r_1_i_i_fu_367_p3 <= 
        ap_const_lv16_0 when (tmp_13_i_i_reg_781_pp0_iter1_reg(0) = '1') else 
        ap_phi_mux_bound_min_r_1_i_i_phi_fu_224_p4;
    p_bound_min_temp_0_b_fu_424_p3 <= 
        bound_min_r_1_fu_381_p3 when (tmp_19_i_i_fu_418_p2(0) = '1') else 
        p_bound_min_r_1_i_i_fu_367_p3;
    p_character_num_i_i_fu_388_p3 <= 
        ap_const_lv16_0 when (tmp_13_i_i_reg_781_pp0_iter1_reg(0) = '1') else 
        ap_phi_mux_character_num_i_i_phi_fu_248_p4;
    p_inBlock_i_i_fu_361_p2 <= (not_i_i_fu_356_p2 and ap_phi_mux_inBlock_i_i_phi_fu_212_p4);
    p_threshold_fu_267_p1 <= threshold_height_dout(16 - 1 downto 0);

    range_min_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, range_min_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            range_min_blk_n <= range_min_empty_n;
        else 
            range_min_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    range_min_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, Hdist_rows_V_empty_n, threshold_height_empty_n, shrink_y_min_empty_n, shrink_y_max_empty_n, range_min_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (range_min_empty_n = ap_const_logic_0) or (shrink_y_max_empty_n = ap_const_logic_0) or (shrink_y_min_empty_n = ap_const_logic_0) or (threshold_height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = Hdist_rows_V_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            range_min_read <= ap_const_logic_1;
        else 
            range_min_read <= ap_const_logic_0;
        end if; 
    end process;

    sel_tmp10_fu_536_p3 <= 
        bound_min_temp_reg_791_pp0_iter1_reg when (or_cond_i_i_fu_395_p2(0) = '1') else 
        p_bound_max_r_1_i_i_fu_374_p3;
    sel_tmp11_fu_543_p3 <= 
        p_bound_max_r_1_i_i_fu_374_p3 when (sel_tmp3_fu_444_p2(0) = '1') else 
        sel_tmp10_fu_536_p3;
    sel_tmp12_fu_551_p3 <= 
        p_bound_max_r_1_i_i_fu_374_p3 when (sel_tmp7_fu_468_p2(0) = '1') else 
        sel_tmp11_fu_543_p3;
    sel_tmp13_fu_567_p3 <= 
        bound_min_r_1_fu_381_p3 when (or_cond_i_i_fu_395_p2(0) = '1') else 
        bound_min_temp_reg_791_pp0_iter1_reg;
    sel_tmp14_fu_574_p3 <= 
        bound_min_r_1_fu_381_p3 when (sel_tmp3_fu_444_p2(0) = '1') else 
        sel_tmp13_fu_567_p3;
    sel_tmp15_fu_582_p3 <= 
        bound_min_r_1_fu_381_p3 when (sel_tmp7_fu_468_p2(0) = '1') else 
        sel_tmp14_fu_574_p3;
    sel_tmp16_fu_598_p3 <= 
        character_num_fu_432_p2 when (or_cond_i_i_fu_395_p2(0) = '1') else 
        p_character_num_i_i_fu_388_p3;
    sel_tmp17_fu_606_p3 <= 
        p_character_num_i_i_fu_388_p3 when (sel_tmp3_fu_444_p2(0) = '1') else 
        sel_tmp16_fu_598_p3;
    sel_tmp18_fu_614_p3 <= 
        p_character_num_i_i_fu_388_p3 when (sel_tmp7_fu_468_p2(0) = '1') else 
        sel_tmp17_fu_606_p3;
    sel_tmp1_fu_487_p2 <= (tmp_14_i_i_reg_802 and tmp6_fu_481_p2);
    sel_tmp2_fu_504_p3 <= 
        p_bound_min_temp_0_b_fu_424_p3 when (or_cond_i_i_fu_395_p2(0) = '1') else 
        p_bound_min_r_1_i_i_fu_367_p3;
    sel_tmp3_fu_444_p2 <= (tmp_14_i_i_reg_802 xor or_cond_i_i_fu_395_p2);
    sel_tmp4_fu_449_p3 <= 
        p_inBlock_i_i_fu_361_p2 when (sel_tmp3_fu_444_p2(0) = '1') else 
        sel_tmp_fu_438_p2;
    sel_tmp5_fu_512_p3 <= 
        p_bound_min_r_1_i_i_fu_367_p3 when (sel_tmp3_fu_444_p2(0) = '1') else 
        sel_tmp2_fu_504_p3;
    sel_tmp6_fu_463_p2 <= (tmp_13_i_i_reg_781_pp0_iter1_reg or inBlock_i_i_not_fu_457_p2);
    sel_tmp7_fu_468_p2 <= (tmp_14_i_i_reg_802 and sel_tmp6_fu_463_p2);
    sel_tmp8_fu_473_p3 <= 
        p_inBlock_i_i_fu_361_p2 when (sel_tmp7_fu_468_p2(0) = '1') else 
        sel_tmp4_fu_449_p3;
    sel_tmp9_fu_520_p3 <= 
        p_bound_min_r_1_i_i_fu_367_p3 when (sel_tmp7_fu_468_p2(0) = '1') else 
        sel_tmp5_fu_512_p3;
    sel_tmp_fu_438_p2 <= (or_cond_i_i_fu_395_p2 xor ap_const_lv1_1);

    shrink_y_max_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, shrink_y_max_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            shrink_y_max_blk_n <= shrink_y_max_empty_n;
        else 
            shrink_y_max_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    shrink_y_max_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, Hdist_rows_V_empty_n, threshold_height_empty_n, shrink_y_min_empty_n, shrink_y_max_empty_n, range_min_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (range_min_empty_n = ap_const_logic_0) or (shrink_y_max_empty_n = ap_const_logic_0) or (shrink_y_min_empty_n = ap_const_logic_0) or (threshold_height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = Hdist_rows_V_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            shrink_y_max_read <= ap_const_logic_1;
        else 
            shrink_y_max_read <= ap_const_logic_0;
        end if; 
    end process;


    shrink_y_min_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, shrink_y_min_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            shrink_y_min_blk_n <= shrink_y_min_empty_n;
        else 
            shrink_y_min_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    shrink_y_min_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, Hdist_rows_V_empty_n, threshold_height_empty_n, shrink_y_min_empty_n, shrink_y_max_empty_n, range_min_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (range_min_empty_n = ap_const_logic_0) or (shrink_y_max_empty_n = ap_const_logic_0) or (shrink_y_min_empty_n = ap_const_logic_0) or (threshold_height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = Hdist_rows_V_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            shrink_y_min_read <= ap_const_logic_1;
        else 
            shrink_y_min_read <= ap_const_logic_0;
        end if; 
    end process;


    threshold_height_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, threshold_height_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            threshold_height_blk_n <= threshold_height_empty_n;
        else 
            threshold_height_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    threshold_height_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, Hdist_rows_V_empty_n, threshold_height_empty_n, shrink_y_min_empty_n, shrink_y_max_empty_n, range_min_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (range_min_empty_n = ap_const_logic_0) or (shrink_y_max_empty_n = ap_const_logic_0) or (shrink_y_min_empty_n = ap_const_logic_0) or (threshold_height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = Hdist_rows_V_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            threshold_height_read <= ap_const_logic_1;
        else 
            threshold_height_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp6_fu_481_p2 <= (tmp_18_i_i_fu_413_p2 and p_inBlock_i_i_fu_361_p2);
    tmp_11_fu_271_p1 <= Hdist_rows_V_dout(31 - 1 downto 0);
    tmp_12_fu_275_p4 <= Hdist_rows_V_dout(31 downto 1);
    tmp_13_i_i_fu_333_p2 <= "1" when (i_i_i_reg_256 = ap_const_lv31_0) else "0";
    tmp_14_i_i_fu_348_p2 <= "1" when (unsigned(Hdist_data_stream_0_V_dout) < unsigned(p_threshold_reg_716)) else "0";
    tmp_15_cast_i_i_fu_400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound_min_temp_reg_791_pp0_iter1_reg),17));
    tmp_15_fu_672_p3 <= tmp_29_i_i_fu_667_p2(16 downto 16);
    tmp_16_cast_i_i_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound_min_r_1_fu_381_p3),17));
    tmp_17_i_i_fu_407_p2 <= std_logic_vector(unsigned(tmp_15_cast_i_i_fu_400_p1) - unsigned(tmp_16_cast_i_i_fu_403_p1));
    tmp_18_i_i_fu_413_p2 <= "1" when (signed(tmp_17_i_i_fu_407_p2) < signed(tmp_cast_i_i_reg_737)) else "0";
    tmp_19_i_i_fu_418_p2 <= "1" when (p_character_num_i_i_fu_388_p3 = ap_const_lv16_0) else "0";
    tmp_20_i_i_fu_343_p2 <= "1" when (i_i_i_reg_256 = tmp_5_i_i_reg_742) else "0";
    tmp_21_cast_i_i_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound_min_r_1_5_i_i_reg_815),17));
    tmp_22_cast_i_i_cast_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_i_i_fu_638_p2),31));
    tmp_22_i_i_fu_638_p2 <= std_logic_vector(unsigned(tmp_21_cast_i_i_fu_635_p1) + unsigned(tmp_6_cast_i_i_reg_747));
    tmp_23_i_i_fu_647_p2 <= "1" when (unsigned(tmp_22_cast_i_i_cast_fu_643_p1) > unsigned(length_reg_731)) else "0";
    tmp_24_i_i_fu_652_p2 <= std_logic_vector(unsigned(bound_min_r_1_5_i_i_reg_815) + unsigned(tmp_9_i_i_reg_762));
    tmp_28_cast_i_i_fu_664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound_max_r_1_4_i_i_reg_822),17));
    tmp_29_i_i_fu_667_p2 <= std_logic_vector(unsigned(tmp_28_cast_i_i_fu_664_p1) - unsigned(tmp_7_cast_i_i_reg_752));
    tmp_31_i_i_fu_680_p2 <= std_logic_vector(unsigned(bound_max_r_1_4_i_i_reg_822) - unsigned(tmp_8_i_i_reg_757));
    tmp_5_i_i_fu_300_p2 <= std_logic_vector(signed(ap_const_lv31_7FFFFFFF) + signed(length_fu_291_p3));
    tmp_6_cast_i_i_fu_306_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shrink_y_min_read_reg_699),17));
    tmp_7_cast_i_i_fu_309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shrink_y_max_read_reg_705),17));
    tmp_8_i_i_fu_312_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shrink_y_max_read_reg_705),16));
    tmp_9_i_i_fu_315_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shrink_y_min_read_reg_699),16));
    tmp_cast_i_i_fu_297_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(range_min_read_reg_711),17));
    tmp_fu_318_p1 <= length_fu_291_p3(16 - 1 downto 0);
end behav;
