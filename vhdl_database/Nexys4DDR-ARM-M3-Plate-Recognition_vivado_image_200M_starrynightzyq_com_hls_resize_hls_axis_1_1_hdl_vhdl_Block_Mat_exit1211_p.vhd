-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Block_Mat_exit1211_p is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    bound_y_min : IN STD_LOGIC_VECTOR (15 downto 0);
    bound_y_min_ap_vld : IN STD_LOGIC;
    bound_y_max : IN STD_LOGIC_VECTOR (15 downto 0);
    bound_y_max_ap_vld : IN STD_LOGIC;
    bound_x_min : IN STD_LOGIC_VECTOR (15 downto 0);
    bound_x_min_ap_vld : IN STD_LOGIC;
    bound_x_max : IN STD_LOGIC_VECTOR (15 downto 0);
    bound_x_max_ap_vld : IN STD_LOGIC;
    src_rows : IN STD_LOGIC_VECTOR (15 downto 0);
    src_cols : IN STD_LOGIC_VECTOR (15 downto 0);
    dst_rows : IN STD_LOGIC_VECTOR (15 downto 0);
    dst_cols : IN STD_LOGIC_VECTOR (15 downto 0);
    bound_y_min_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    bound_y_min_out_full_n : IN STD_LOGIC;
    bound_y_min_out_write : OUT STD_LOGIC;
    bound_y_max_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    bound_y_max_out_full_n : IN STD_LOGIC;
    bound_y_max_out_write : OUT STD_LOGIC;
    bound_x_min_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    bound_x_min_out_full_n : IN STD_LOGIC;
    bound_x_min_out_write : OUT STD_LOGIC;
    bound_x_max_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    bound_x_max_out_full_n : IN STD_LOGIC;
    bound_x_max_out_write : OUT STD_LOGIC;
    img_src_0_rows_V_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_src_0_rows_V_out_full_n : IN STD_LOGIC;
    img_src_0_rows_V_out_write : OUT STD_LOGIC;
    img_src_0_cols_V_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_src_0_cols_V_out_full_n : IN STD_LOGIC;
    img_src_0_cols_V_out_write : OUT STD_LOGIC;
    img_cut_0_rows_V_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_cut_0_rows_V_out_full_n : IN STD_LOGIC;
    img_cut_0_rows_V_out_write : OUT STD_LOGIC;
    img_cut_0_cols_V_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_cut_0_cols_V_out_full_n : IN STD_LOGIC;
    img_cut_0_cols_V_out_write : OUT STD_LOGIC;
    img_dst_0_rows_V_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_dst_0_rows_V_out_full_n : IN STD_LOGIC;
    img_dst_0_rows_V_out_write : OUT STD_LOGIC;
    img_dst_0_cols_V_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_dst_0_cols_V_out_full_n : IN STD_LOGIC;
    img_dst_0_cols_V_out_write : OUT STD_LOGIC;
    img_dst_1_rows_V_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_dst_1_rows_V_out_full_n : IN STD_LOGIC;
    img_dst_1_rows_V_out_write : OUT STD_LOGIC;
    img_dst_1_cols_V_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_dst_1_cols_V_out_full_n : IN STD_LOGIC;
    img_dst_1_cols_V_out_write : OUT STD_LOGIC );
end;


architecture behav of Block_Mat_exit1211_p is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal bound_y_min_blk_n : STD_LOGIC;
    signal bound_y_max_blk_n : STD_LOGIC;
    signal bound_x_min_blk_n : STD_LOGIC;
    signal bound_x_max_blk_n : STD_LOGIC;
    signal bound_y_min_out_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal bound_y_max_out_blk_n : STD_LOGIC;
    signal bound_x_min_out_blk_n : STD_LOGIC;
    signal bound_x_max_out_blk_n : STD_LOGIC;
    signal img_src_0_rows_V_out_blk_n : STD_LOGIC;
    signal img_src_0_cols_V_out_blk_n : STD_LOGIC;
    signal img_cut_0_rows_V_out_blk_n : STD_LOGIC;
    signal img_cut_0_cols_V_out_blk_n : STD_LOGIC;
    signal img_dst_0_rows_V_out_blk_n : STD_LOGIC;
    signal img_dst_0_cols_V_out_blk_n : STD_LOGIC;
    signal img_dst_1_rows_V_out_blk_n : STD_LOGIC;
    signal img_dst_1_cols_V_out_blk_n : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal cut_rows_fu_344_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal cut_rows_reg_382 : STD_LOGIC_VECTOR (15 downto 0);
    signal cut_cols_fu_356_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal cut_cols_reg_387 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal tmp_8_i_fu_338_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_fu_350_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((img_dst_1_cols_V_out_full_n = ap_const_logic_0) or (img_dst_1_rows_V_out_full_n = ap_const_logic_0) or (img_dst_0_cols_V_out_full_n = ap_const_logic_0) or (img_dst_0_rows_V_out_full_n = ap_const_logic_0) or (img_cut_0_cols_V_out_full_n = ap_const_logic_0) or (img_cut_0_rows_V_out_full_n = ap_const_logic_0) or (img_src_0_cols_V_out_full_n = ap_const_logic_0) or (img_src_0_rows_V_out_full_n = ap_const_logic_0) or (bound_x_max_out_full_n = ap_const_logic_0) or (bound_x_min_out_full_n = ap_const_logic_0) or (bound_y_max_out_full_n = ap_const_logic_0) or (bound_y_min_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (bound_x_max_ap_vld = ap_const_logic_0) or (bound_x_min_ap_vld = ap_const_logic_0) or (bound_y_max_ap_vld = ap_const_logic_0) or (bound_y_min_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                cut_cols_reg_387 <= cut_cols_fu_356_p2;
                cut_rows_reg_382 <= cut_rows_fu_344_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, bound_y_min_ap_vld, bound_y_max_ap_vld, bound_x_min_ap_vld, bound_x_max_ap_vld, bound_y_min_out_full_n, bound_y_max_out_full_n, bound_x_min_out_full_n, bound_x_max_out_full_n, img_src_0_rows_V_out_full_n, img_src_0_cols_V_out_full_n, img_cut_0_rows_V_out_full_n, img_cut_0_cols_V_out_full_n, img_dst_0_rows_V_out_full_n, img_dst_0_cols_V_out_full_n, img_dst_1_rows_V_out_full_n, img_dst_1_cols_V_out_full_n, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (bound_x_max_ap_vld = ap_const_logic_0) or (bound_x_min_ap_vld = ap_const_logic_0) or (bound_y_max_ap_vld = ap_const_logic_0) or (bound_y_min_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((img_dst_1_cols_V_out_full_n = ap_const_logic_0) or (img_dst_1_rows_V_out_full_n = ap_const_logic_0) or (img_dst_0_cols_V_out_full_n = ap_const_logic_0) or (img_dst_0_rows_V_out_full_n = ap_const_logic_0) or (img_cut_0_cols_V_out_full_n = ap_const_logic_0) or (img_cut_0_rows_V_out_full_n = ap_const_logic_0) or (img_src_0_cols_V_out_full_n = ap_const_logic_0) or (img_src_0_rows_V_out_full_n = ap_const_logic_0) or (bound_x_max_out_full_n = ap_const_logic_0) or (bound_x_min_out_full_n = ap_const_logic_0) or (bound_y_max_out_full_n = ap_const_logic_0) or (bound_y_min_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg, bound_y_min_ap_vld, bound_y_max_ap_vld, bound_x_min_ap_vld, bound_x_max_ap_vld)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (bound_x_max_ap_vld = ap_const_logic_0) or (bound_x_min_ap_vld = ap_const_logic_0) or (bound_y_max_ap_vld = ap_const_logic_0) or (bound_y_min_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_assign_proc : process(bound_y_min_out_full_n, bound_y_max_out_full_n, bound_x_min_out_full_n, bound_x_max_out_full_n, img_src_0_rows_V_out_full_n, img_src_0_cols_V_out_full_n, img_cut_0_rows_V_out_full_n, img_cut_0_cols_V_out_full_n, img_dst_0_rows_V_out_full_n, img_dst_0_cols_V_out_full_n, img_dst_1_rows_V_out_full_n, img_dst_1_cols_V_out_full_n)
    begin
                ap_block_state2 <= ((img_dst_1_cols_V_out_full_n = ap_const_logic_0) or (img_dst_1_rows_V_out_full_n = ap_const_logic_0) or (img_dst_0_cols_V_out_full_n = ap_const_logic_0) or (img_dst_0_rows_V_out_full_n = ap_const_logic_0) or (img_cut_0_cols_V_out_full_n = ap_const_logic_0) or (img_cut_0_rows_V_out_full_n = ap_const_logic_0) or (img_src_0_cols_V_out_full_n = ap_const_logic_0) or (img_src_0_rows_V_out_full_n = ap_const_logic_0) or (bound_x_max_out_full_n = ap_const_logic_0) or (bound_x_min_out_full_n = ap_const_logic_0) or (bound_y_max_out_full_n = ap_const_logic_0) or (bound_y_min_out_full_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, bound_y_min_out_full_n, bound_y_max_out_full_n, bound_x_min_out_full_n, bound_x_max_out_full_n, img_src_0_rows_V_out_full_n, img_src_0_cols_V_out_full_n, img_cut_0_rows_V_out_full_n, img_cut_0_cols_V_out_full_n, img_dst_0_rows_V_out_full_n, img_dst_0_cols_V_out_full_n, img_dst_1_rows_V_out_full_n, img_dst_1_cols_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((not(((img_dst_1_cols_V_out_full_n = ap_const_logic_0) or (img_dst_1_rows_V_out_full_n = ap_const_logic_0) or (img_dst_0_cols_V_out_full_n = ap_const_logic_0) or (img_dst_0_rows_V_out_full_n = ap_const_logic_0) or (img_cut_0_cols_V_out_full_n = ap_const_logic_0) or (img_cut_0_rows_V_out_full_n = ap_const_logic_0) or (img_src_0_cols_V_out_full_n = ap_const_logic_0) or (img_src_0_rows_V_out_full_n = ap_const_logic_0) or (bound_x_max_out_full_n = ap_const_logic_0) or (bound_x_min_out_full_n = ap_const_logic_0) or (bound_y_max_out_full_n = ap_const_logic_0) or (bound_y_min_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    bound_x_max_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, bound_x_max_ap_vld)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            bound_x_max_blk_n <= bound_x_max_ap_vld;
        else 
            bound_x_max_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    bound_x_max_out_blk_n_assign_proc : process(bound_x_max_out_full_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bound_x_max_out_blk_n <= bound_x_max_out_full_n;
        else 
            bound_x_max_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    bound_x_max_out_din <= bound_x_max;

    bound_x_max_out_write_assign_proc : process(bound_y_min_out_full_n, bound_y_max_out_full_n, bound_x_min_out_full_n, bound_x_max_out_full_n, img_src_0_rows_V_out_full_n, img_src_0_cols_V_out_full_n, img_cut_0_rows_V_out_full_n, img_cut_0_cols_V_out_full_n, img_dst_0_rows_V_out_full_n, img_dst_0_cols_V_out_full_n, img_dst_1_rows_V_out_full_n, img_dst_1_cols_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((not(((img_dst_1_cols_V_out_full_n = ap_const_logic_0) or (img_dst_1_rows_V_out_full_n = ap_const_logic_0) or (img_dst_0_cols_V_out_full_n = ap_const_logic_0) or (img_dst_0_rows_V_out_full_n = ap_const_logic_0) or (img_cut_0_cols_V_out_full_n = ap_const_logic_0) or (img_cut_0_rows_V_out_full_n = ap_const_logic_0) or (img_src_0_cols_V_out_full_n = ap_const_logic_0) or (img_src_0_rows_V_out_full_n = ap_const_logic_0) or (bound_x_max_out_full_n = ap_const_logic_0) or (bound_x_min_out_full_n = ap_const_logic_0) or (bound_y_max_out_full_n = ap_const_logic_0) or (bound_y_min_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            bound_x_max_out_write <= ap_const_logic_1;
        else 
            bound_x_max_out_write <= ap_const_logic_0;
        end if; 
    end process;


    bound_x_min_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, bound_x_min_ap_vld)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            bound_x_min_blk_n <= bound_x_min_ap_vld;
        else 
            bound_x_min_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    bound_x_min_out_blk_n_assign_proc : process(bound_x_min_out_full_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bound_x_min_out_blk_n <= bound_x_min_out_full_n;
        else 
            bound_x_min_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    bound_x_min_out_din <= bound_x_min;

    bound_x_min_out_write_assign_proc : process(bound_y_min_out_full_n, bound_y_max_out_full_n, bound_x_min_out_full_n, bound_x_max_out_full_n, img_src_0_rows_V_out_full_n, img_src_0_cols_V_out_full_n, img_cut_0_rows_V_out_full_n, img_cut_0_cols_V_out_full_n, img_dst_0_rows_V_out_full_n, img_dst_0_cols_V_out_full_n, img_dst_1_rows_V_out_full_n, img_dst_1_cols_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((not(((img_dst_1_cols_V_out_full_n = ap_const_logic_0) or (img_dst_1_rows_V_out_full_n = ap_const_logic_0) or (img_dst_0_cols_V_out_full_n = ap_const_logic_0) or (img_dst_0_rows_V_out_full_n = ap_const_logic_0) or (img_cut_0_cols_V_out_full_n = ap_const_logic_0) or (img_cut_0_rows_V_out_full_n = ap_const_logic_0) or (img_src_0_cols_V_out_full_n = ap_const_logic_0) or (img_src_0_rows_V_out_full_n = ap_const_logic_0) or (bound_x_max_out_full_n = ap_const_logic_0) or (bound_x_min_out_full_n = ap_const_logic_0) or (bound_y_max_out_full_n = ap_const_logic_0) or (bound_y_min_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            bound_x_min_out_write <= ap_const_logic_1;
        else 
            bound_x_min_out_write <= ap_const_logic_0;
        end if; 
    end process;


    bound_y_max_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, bound_y_max_ap_vld)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            bound_y_max_blk_n <= bound_y_max_ap_vld;
        else 
            bound_y_max_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    bound_y_max_out_blk_n_assign_proc : process(bound_y_max_out_full_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bound_y_max_out_blk_n <= bound_y_max_out_full_n;
        else 
            bound_y_max_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    bound_y_max_out_din <= bound_y_max;

    bound_y_max_out_write_assign_proc : process(bound_y_min_out_full_n, bound_y_max_out_full_n, bound_x_min_out_full_n, bound_x_max_out_full_n, img_src_0_rows_V_out_full_n, img_src_0_cols_V_out_full_n, img_cut_0_rows_V_out_full_n, img_cut_0_cols_V_out_full_n, img_dst_0_rows_V_out_full_n, img_dst_0_cols_V_out_full_n, img_dst_1_rows_V_out_full_n, img_dst_1_cols_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((not(((img_dst_1_cols_V_out_full_n = ap_const_logic_0) or (img_dst_1_rows_V_out_full_n = ap_const_logic_0) or (img_dst_0_cols_V_out_full_n = ap_const_logic_0) or (img_dst_0_rows_V_out_full_n = ap_const_logic_0) or (img_cut_0_cols_V_out_full_n = ap_const_logic_0) or (img_cut_0_rows_V_out_full_n = ap_const_logic_0) or (img_src_0_cols_V_out_full_n = ap_const_logic_0) or (img_src_0_rows_V_out_full_n = ap_const_logic_0) or (bound_x_max_out_full_n = ap_const_logic_0) or (bound_x_min_out_full_n = ap_const_logic_0) or (bound_y_max_out_full_n = ap_const_logic_0) or (bound_y_min_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            bound_y_max_out_write <= ap_const_logic_1;
        else 
            bound_y_max_out_write <= ap_const_logic_0;
        end if; 
    end process;


    bound_y_min_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, bound_y_min_ap_vld)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            bound_y_min_blk_n <= bound_y_min_ap_vld;
        else 
            bound_y_min_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    bound_y_min_out_blk_n_assign_proc : process(bound_y_min_out_full_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bound_y_min_out_blk_n <= bound_y_min_out_full_n;
        else 
            bound_y_min_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    bound_y_min_out_din <= bound_y_min;

    bound_y_min_out_write_assign_proc : process(bound_y_min_out_full_n, bound_y_max_out_full_n, bound_x_min_out_full_n, bound_x_max_out_full_n, img_src_0_rows_V_out_full_n, img_src_0_cols_V_out_full_n, img_cut_0_rows_V_out_full_n, img_cut_0_cols_V_out_full_n, img_dst_0_rows_V_out_full_n, img_dst_0_cols_V_out_full_n, img_dst_1_rows_V_out_full_n, img_dst_1_cols_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((not(((img_dst_1_cols_V_out_full_n = ap_const_logic_0) or (img_dst_1_rows_V_out_full_n = ap_const_logic_0) or (img_dst_0_cols_V_out_full_n = ap_const_logic_0) or (img_dst_0_rows_V_out_full_n = ap_const_logic_0) or (img_cut_0_cols_V_out_full_n = ap_const_logic_0) or (img_cut_0_rows_V_out_full_n = ap_const_logic_0) or (img_src_0_cols_V_out_full_n = ap_const_logic_0) or (img_src_0_rows_V_out_full_n = ap_const_logic_0) or (bound_x_max_out_full_n = ap_const_logic_0) or (bound_x_min_out_full_n = ap_const_logic_0) or (bound_y_max_out_full_n = ap_const_logic_0) or (bound_y_min_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            bound_y_min_out_write <= ap_const_logic_1;
        else 
            bound_y_min_out_write <= ap_const_logic_0;
        end if; 
    end process;

    cut_cols_fu_356_p2 <= std_logic_vector(unsigned(tmp_i_fu_350_p2) + unsigned(bound_x_max));
    cut_rows_fu_344_p2 <= std_logic_vector(unsigned(tmp_8_i_fu_338_p2) + unsigned(bound_y_max));

    img_cut_0_cols_V_out_blk_n_assign_proc : process(img_cut_0_cols_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_cut_0_cols_V_out_blk_n <= img_cut_0_cols_V_out_full_n;
        else 
            img_cut_0_cols_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_cut_0_cols_V_out_din <= cut_cols_reg_387;

    img_cut_0_cols_V_out_write_assign_proc : process(bound_y_min_out_full_n, bound_y_max_out_full_n, bound_x_min_out_full_n, bound_x_max_out_full_n, img_src_0_rows_V_out_full_n, img_src_0_cols_V_out_full_n, img_cut_0_rows_V_out_full_n, img_cut_0_cols_V_out_full_n, img_dst_0_rows_V_out_full_n, img_dst_0_cols_V_out_full_n, img_dst_1_rows_V_out_full_n, img_dst_1_cols_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((not(((img_dst_1_cols_V_out_full_n = ap_const_logic_0) or (img_dst_1_rows_V_out_full_n = ap_const_logic_0) or (img_dst_0_cols_V_out_full_n = ap_const_logic_0) or (img_dst_0_rows_V_out_full_n = ap_const_logic_0) or (img_cut_0_cols_V_out_full_n = ap_const_logic_0) or (img_cut_0_rows_V_out_full_n = ap_const_logic_0) or (img_src_0_cols_V_out_full_n = ap_const_logic_0) or (img_src_0_rows_V_out_full_n = ap_const_logic_0) or (bound_x_max_out_full_n = ap_const_logic_0) or (bound_x_min_out_full_n = ap_const_logic_0) or (bound_y_max_out_full_n = ap_const_logic_0) or (bound_y_min_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            img_cut_0_cols_V_out_write <= ap_const_logic_1;
        else 
            img_cut_0_cols_V_out_write <= ap_const_logic_0;
        end if; 
    end process;


    img_cut_0_rows_V_out_blk_n_assign_proc : process(img_cut_0_rows_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_cut_0_rows_V_out_blk_n <= img_cut_0_rows_V_out_full_n;
        else 
            img_cut_0_rows_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_cut_0_rows_V_out_din <= cut_rows_reg_382;

    img_cut_0_rows_V_out_write_assign_proc : process(bound_y_min_out_full_n, bound_y_max_out_full_n, bound_x_min_out_full_n, bound_x_max_out_full_n, img_src_0_rows_V_out_full_n, img_src_0_cols_V_out_full_n, img_cut_0_rows_V_out_full_n, img_cut_0_cols_V_out_full_n, img_dst_0_rows_V_out_full_n, img_dst_0_cols_V_out_full_n, img_dst_1_rows_V_out_full_n, img_dst_1_cols_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((not(((img_dst_1_cols_V_out_full_n = ap_const_logic_0) or (img_dst_1_rows_V_out_full_n = ap_const_logic_0) or (img_dst_0_cols_V_out_full_n = ap_const_logic_0) or (img_dst_0_rows_V_out_full_n = ap_const_logic_0) or (img_cut_0_cols_V_out_full_n = ap_const_logic_0) or (img_cut_0_rows_V_out_full_n = ap_const_logic_0) or (img_src_0_cols_V_out_full_n = ap_const_logic_0) or (img_src_0_rows_V_out_full_n = ap_const_logic_0) or (bound_x_max_out_full_n = ap_const_logic_0) or (bound_x_min_out_full_n = ap_const_logic_0) or (bound_y_max_out_full_n = ap_const_logic_0) or (bound_y_min_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            img_cut_0_rows_V_out_write <= ap_const_logic_1;
        else 
            img_cut_0_rows_V_out_write <= ap_const_logic_0;
        end if; 
    end process;


    img_dst_0_cols_V_out_blk_n_assign_proc : process(img_dst_0_cols_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_dst_0_cols_V_out_blk_n <= img_dst_0_cols_V_out_full_n;
        else 
            img_dst_0_cols_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_dst_0_cols_V_out_din <= dst_cols;

    img_dst_0_cols_V_out_write_assign_proc : process(bound_y_min_out_full_n, bound_y_max_out_full_n, bound_x_min_out_full_n, bound_x_max_out_full_n, img_src_0_rows_V_out_full_n, img_src_0_cols_V_out_full_n, img_cut_0_rows_V_out_full_n, img_cut_0_cols_V_out_full_n, img_dst_0_rows_V_out_full_n, img_dst_0_cols_V_out_full_n, img_dst_1_rows_V_out_full_n, img_dst_1_cols_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((not(((img_dst_1_cols_V_out_full_n = ap_const_logic_0) or (img_dst_1_rows_V_out_full_n = ap_const_logic_0) or (img_dst_0_cols_V_out_full_n = ap_const_logic_0) or (img_dst_0_rows_V_out_full_n = ap_const_logic_0) or (img_cut_0_cols_V_out_full_n = ap_const_logic_0) or (img_cut_0_rows_V_out_full_n = ap_const_logic_0) or (img_src_0_cols_V_out_full_n = ap_const_logic_0) or (img_src_0_rows_V_out_full_n = ap_const_logic_0) or (bound_x_max_out_full_n = ap_const_logic_0) or (bound_x_min_out_full_n = ap_const_logic_0) or (bound_y_max_out_full_n = ap_const_logic_0) or (bound_y_min_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            img_dst_0_cols_V_out_write <= ap_const_logic_1;
        else 
            img_dst_0_cols_V_out_write <= ap_const_logic_0;
        end if; 
    end process;


    img_dst_0_rows_V_out_blk_n_assign_proc : process(img_dst_0_rows_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_dst_0_rows_V_out_blk_n <= img_dst_0_rows_V_out_full_n;
        else 
            img_dst_0_rows_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_dst_0_rows_V_out_din <= dst_rows;

    img_dst_0_rows_V_out_write_assign_proc : process(bound_y_min_out_full_n, bound_y_max_out_full_n, bound_x_min_out_full_n, bound_x_max_out_full_n, img_src_0_rows_V_out_full_n, img_src_0_cols_V_out_full_n, img_cut_0_rows_V_out_full_n, img_cut_0_cols_V_out_full_n, img_dst_0_rows_V_out_full_n, img_dst_0_cols_V_out_full_n, img_dst_1_rows_V_out_full_n, img_dst_1_cols_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((not(((img_dst_1_cols_V_out_full_n = ap_const_logic_0) or (img_dst_1_rows_V_out_full_n = ap_const_logic_0) or (img_dst_0_cols_V_out_full_n = ap_const_logic_0) or (img_dst_0_rows_V_out_full_n = ap_const_logic_0) or (img_cut_0_cols_V_out_full_n = ap_const_logic_0) or (img_cut_0_rows_V_out_full_n = ap_const_logic_0) or (img_src_0_cols_V_out_full_n = ap_const_logic_0) or (img_src_0_rows_V_out_full_n = ap_const_logic_0) or (bound_x_max_out_full_n = ap_const_logic_0) or (bound_x_min_out_full_n = ap_const_logic_0) or (bound_y_max_out_full_n = ap_const_logic_0) or (bound_y_min_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            img_dst_0_rows_V_out_write <= ap_const_logic_1;
        else 
            img_dst_0_rows_V_out_write <= ap_const_logic_0;
        end if; 
    end process;


    img_dst_1_cols_V_out_blk_n_assign_proc : process(img_dst_1_cols_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_dst_1_cols_V_out_blk_n <= img_dst_1_cols_V_out_full_n;
        else 
            img_dst_1_cols_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_dst_1_cols_V_out_din <= dst_cols;

    img_dst_1_cols_V_out_write_assign_proc : process(bound_y_min_out_full_n, bound_y_max_out_full_n, bound_x_min_out_full_n, bound_x_max_out_full_n, img_src_0_rows_V_out_full_n, img_src_0_cols_V_out_full_n, img_cut_0_rows_V_out_full_n, img_cut_0_cols_V_out_full_n, img_dst_0_rows_V_out_full_n, img_dst_0_cols_V_out_full_n, img_dst_1_rows_V_out_full_n, img_dst_1_cols_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((not(((img_dst_1_cols_V_out_full_n = ap_const_logic_0) or (img_dst_1_rows_V_out_full_n = ap_const_logic_0) or (img_dst_0_cols_V_out_full_n = ap_const_logic_0) or (img_dst_0_rows_V_out_full_n = ap_const_logic_0) or (img_cut_0_cols_V_out_full_n = ap_const_logic_0) or (img_cut_0_rows_V_out_full_n = ap_const_logic_0) or (img_src_0_cols_V_out_full_n = ap_const_logic_0) or (img_src_0_rows_V_out_full_n = ap_const_logic_0) or (bound_x_max_out_full_n = ap_const_logic_0) or (bound_x_min_out_full_n = ap_const_logic_0) or (bound_y_max_out_full_n = ap_const_logic_0) or (bound_y_min_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            img_dst_1_cols_V_out_write <= ap_const_logic_1;
        else 
            img_dst_1_cols_V_out_write <= ap_const_logic_0;
        end if; 
    end process;


    img_dst_1_rows_V_out_blk_n_assign_proc : process(img_dst_1_rows_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_dst_1_rows_V_out_blk_n <= img_dst_1_rows_V_out_full_n;
        else 
            img_dst_1_rows_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_dst_1_rows_V_out_din <= dst_rows;

    img_dst_1_rows_V_out_write_assign_proc : process(bound_y_min_out_full_n, bound_y_max_out_full_n, bound_x_min_out_full_n, bound_x_max_out_full_n, img_src_0_rows_V_out_full_n, img_src_0_cols_V_out_full_n, img_cut_0_rows_V_out_full_n, img_cut_0_cols_V_out_full_n, img_dst_0_rows_V_out_full_n, img_dst_0_cols_V_out_full_n, img_dst_1_rows_V_out_full_n, img_dst_1_cols_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((not(((img_dst_1_cols_V_out_full_n = ap_const_logic_0) or (img_dst_1_rows_V_out_full_n = ap_const_logic_0) or (img_dst_0_cols_V_out_full_n = ap_const_logic_0) or (img_dst_0_rows_V_out_full_n = ap_const_logic_0) or (img_cut_0_cols_V_out_full_n = ap_const_logic_0) or (img_cut_0_rows_V_out_full_n = ap_const_logic_0) or (img_src_0_cols_V_out_full_n = ap_const_logic_0) or (img_src_0_rows_V_out_full_n = ap_const_logic_0) or (bound_x_max_out_full_n = ap_const_logic_0) or (bound_x_min_out_full_n = ap_const_logic_0) or (bound_y_max_out_full_n = ap_const_logic_0) or (bound_y_min_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            img_dst_1_rows_V_out_write <= ap_const_logic_1;
        else 
            img_dst_1_rows_V_out_write <= ap_const_logic_0;
        end if; 
    end process;


    img_src_0_cols_V_out_blk_n_assign_proc : process(img_src_0_cols_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_src_0_cols_V_out_blk_n <= img_src_0_cols_V_out_full_n;
        else 
            img_src_0_cols_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_src_0_cols_V_out_din <= src_cols;

    img_src_0_cols_V_out_write_assign_proc : process(bound_y_min_out_full_n, bound_y_max_out_full_n, bound_x_min_out_full_n, bound_x_max_out_full_n, img_src_0_rows_V_out_full_n, img_src_0_cols_V_out_full_n, img_cut_0_rows_V_out_full_n, img_cut_0_cols_V_out_full_n, img_dst_0_rows_V_out_full_n, img_dst_0_cols_V_out_full_n, img_dst_1_rows_V_out_full_n, img_dst_1_cols_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((not(((img_dst_1_cols_V_out_full_n = ap_const_logic_0) or (img_dst_1_rows_V_out_full_n = ap_const_logic_0) or (img_dst_0_cols_V_out_full_n = ap_const_logic_0) or (img_dst_0_rows_V_out_full_n = ap_const_logic_0) or (img_cut_0_cols_V_out_full_n = ap_const_logic_0) or (img_cut_0_rows_V_out_full_n = ap_const_logic_0) or (img_src_0_cols_V_out_full_n = ap_const_logic_0) or (img_src_0_rows_V_out_full_n = ap_const_logic_0) or (bound_x_max_out_full_n = ap_const_logic_0) or (bound_x_min_out_full_n = ap_const_logic_0) or (bound_y_max_out_full_n = ap_const_logic_0) or (bound_y_min_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            img_src_0_cols_V_out_write <= ap_const_logic_1;
        else 
            img_src_0_cols_V_out_write <= ap_const_logic_0;
        end if; 
    end process;


    img_src_0_rows_V_out_blk_n_assign_proc : process(img_src_0_rows_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_src_0_rows_V_out_blk_n <= img_src_0_rows_V_out_full_n;
        else 
            img_src_0_rows_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_src_0_rows_V_out_din <= src_rows;

    img_src_0_rows_V_out_write_assign_proc : process(bound_y_min_out_full_n, bound_y_max_out_full_n, bound_x_min_out_full_n, bound_x_max_out_full_n, img_src_0_rows_V_out_full_n, img_src_0_cols_V_out_full_n, img_cut_0_rows_V_out_full_n, img_cut_0_cols_V_out_full_n, img_dst_0_rows_V_out_full_n, img_dst_0_cols_V_out_full_n, img_dst_1_rows_V_out_full_n, img_dst_1_cols_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((not(((img_dst_1_cols_V_out_full_n = ap_const_logic_0) or (img_dst_1_rows_V_out_full_n = ap_const_logic_0) or (img_dst_0_cols_V_out_full_n = ap_const_logic_0) or (img_dst_0_rows_V_out_full_n = ap_const_logic_0) or (img_cut_0_cols_V_out_full_n = ap_const_logic_0) or (img_cut_0_rows_V_out_full_n = ap_const_logic_0) or (img_src_0_cols_V_out_full_n = ap_const_logic_0) or (img_src_0_rows_V_out_full_n = ap_const_logic_0) or (bound_x_max_out_full_n = ap_const_logic_0) or (bound_x_min_out_full_n = ap_const_logic_0) or (bound_y_max_out_full_n = ap_const_logic_0) or (bound_y_min_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            img_src_0_rows_V_out_write <= ap_const_logic_1;
        else 
            img_src_0_rows_V_out_write <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(bound_y_min_out_full_n, bound_y_max_out_full_n, bound_x_min_out_full_n, bound_x_max_out_full_n, img_src_0_rows_V_out_full_n, img_src_0_cols_V_out_full_n, img_cut_0_rows_V_out_full_n, img_cut_0_cols_V_out_full_n, img_dst_0_rows_V_out_full_n, img_dst_0_cols_V_out_full_n, img_dst_1_rows_V_out_full_n, img_dst_1_cols_V_out_full_n, ap_CS_fsm_state2)
    begin
        if ((not(((img_dst_1_cols_V_out_full_n = ap_const_logic_0) or (img_dst_1_rows_V_out_full_n = ap_const_logic_0) or (img_dst_0_cols_V_out_full_n = ap_const_logic_0) or (img_dst_0_rows_V_out_full_n = ap_const_logic_0) or (img_cut_0_cols_V_out_full_n = ap_const_logic_0) or (img_cut_0_rows_V_out_full_n = ap_const_logic_0) or (img_src_0_cols_V_out_full_n = ap_const_logic_0) or (img_src_0_rows_V_out_full_n = ap_const_logic_0) or (bound_x_max_out_full_n = ap_const_logic_0) or (bound_x_min_out_full_n = ap_const_logic_0) or (bound_y_max_out_full_n = ap_const_logic_0) or (bound_y_min_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_8_i_fu_338_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) - unsigned(bound_y_min));
    tmp_i_fu_350_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) - unsigned(bound_x_min));
end behav;
