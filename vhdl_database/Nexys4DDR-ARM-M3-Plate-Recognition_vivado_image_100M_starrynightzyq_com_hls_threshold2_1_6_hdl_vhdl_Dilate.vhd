-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Dilate is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    p_src_rows_V_empty_n : IN STD_LOGIC;
    p_src_rows_V_read : OUT STD_LOGIC;
    p_src_cols_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    p_src_cols_V_empty_n : IN STD_LOGIC;
    p_src_cols_V_read : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of Dilate is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv17_2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv17_1FFFE : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111110";
    constant ap_const_lv17_1FFFD : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111101";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_rows_V_blk_n : STD_LOGIC;
    signal p_src_cols_V_blk_n : STD_LOGIC;
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal or_cond_i425_i_i_i_reg_1140 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1096 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_i_reg_1087 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal or_cond_i_i_i_reg_1157 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_reg_1157_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_9_reg_275 : STD_LOGIC_VECTOR (16 downto 0);
    signal extLd_cast31_i_fu_286_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal extLd_cast31_i_reg_1034 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal extLd20_cast30_i_fu_290_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal extLd20_cast30_i_reg_1043 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_i_fu_294_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_i_reg_1048 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_65_i_fu_300_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_65_i_reg_1053 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_66_i_fu_306_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_66_i_reg_1058 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_neg393_i_i_i_fu_316_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_neg393_i_i_i_reg_1064 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_fu_322_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_reg_1070 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond389_i_i_i_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_333_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_V_reg_1082 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_67_i_fu_339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_589_not_i_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_589_not_i_reg_1091 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_619_i_fu_366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_619_i_reg_1101 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_619_2_i_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_619_2_i_reg_1105 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_641_i_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_641_i_reg_1109 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_151_fu_524_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_151_reg_1116 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_18_1_t_i_fu_549_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_18_1_t_i_reg_1121 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_18_2_t_i_fu_575_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_18_2_t_i_reg_1126 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond388_i_i_i_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond388_i_i_i_reg_1131 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op132_read_state5 : BOOLEAN;
    signal ap_predicate_op140_read_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond388_i_i_i_reg_1131_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond388_i_i_i_reg_1131_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond388_i_i_i_reg_1131_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_585_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal or_cond_i425_i_i_i_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_653_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal x_reg_1144 : STD_LOGIC_VECTOR (16 downto 0);
    signal brmerge_i_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_reg_1150 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_reg_1150_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_reg_1157_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_reg_1157_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_reg_1157_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1161 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_155_fu_685_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_155_reg_1167 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_4_addr_reg_1174 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_addr_reg_1180 : STD_LOGIC_VECTOR (9 downto 0);
    signal src_kernel_win_0_va_57_fu_778_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_57_reg_1186 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_57_reg_1186_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_57_reg_1186_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_58_fu_796_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_58_reg_1193 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_58_reg_1193_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_59_fu_814_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_59_reg_1200 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_059_i_s_fu_833_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_059_i_s_reg_1206 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_059_i_4_fu_890_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_059_i_4_reg_1212 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_059_i_7_fu_946_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_059_i_7_reg_1218 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_264 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_604_i_fu_678_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_138 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_52_fu_142 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_53_fu_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_54_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_55_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_56_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_709_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_25_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_745_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_26_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_727_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_142_fu_312_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_143_fu_350_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_644_i_fu_383_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_144_fu_389_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_646_i_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_fu_414_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_17_1_i_fu_433_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_147_fu_439_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_646_1_i_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev10_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_17_2_i_fu_472_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_149_fu_478_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_646_2_i_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev11_fu_486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_i_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_18_i_fu_422_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal y_3_i_fu_511_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal row_assign_18_i_fu_519_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_146_fu_429_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_148_fu_464_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_1_i_fu_458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_528_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_102_fu_534_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_103_fu_541_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_150_fu_503_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_2_i_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_104_fu_554_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_105_fu_560_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_106_fu_567_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_152_fu_591_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ImagLoc_x_fu_607_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_153_fu_613_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_i_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev12_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_154_fu_638_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_3_fu_646_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp4_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_assign_cast_i_fu_671_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_assign_3_fu_674_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_107_fu_698_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_108_fu_716_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_109_fu_734_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_110_fu_767_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_111_fu_785_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_112_fu_803_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_665_0_1_i_fu_827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_0_2_i_fu_860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_059_i_8_fu_864_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_665_1_i_fu_870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_059_i_3_fu_876_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_665_1_1_i_fu_884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_1_2_i_fu_916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_059_i_5_fu_920_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_665_2_i_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_059_i_6_fu_932_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_665_2_1_i_fu_940_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_665_2_2_i_fu_966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_358 : BOOLEAN;

    component threshold2_mux_32kbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Filter2D_k_buf_0_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 800,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_addr_reg_1161,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 800,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_addr_reg_1174,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 800,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_addr_reg_1180,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    threshold2_mux_32kbM_U176 : component threshold2_mux_32kbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_162,
        din1 => ap_const_lv8_0,
        din2 => ap_const_lv8_0,
        din3 => tmp_155_reg_1167,
        dout => tmp_107_fu_698_p5);

    threshold2_mux_32kbM_U177 : component threshold2_mux_32kbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_26_fu_170,
        din1 => ap_const_lv8_0,
        din2 => ap_const_lv8_0,
        din3 => tmp_155_reg_1167,
        dout => tmp_108_fu_716_p5);

    threshold2_mux_32kbM_U178 : component threshold2_mux_32kbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_25_fu_166,
        din1 => ap_const_lv8_0,
        din2 => ap_const_lv8_0,
        din3 => tmp_155_reg_1167,
        dout => tmp_109_fu_734_p5);

    threshold2_mux_32kbM_U179 : component threshold2_mux_32kbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_709_p3,
        din1 => col_buf_0_val_1_0_fu_727_p3,
        din2 => col_buf_0_val_2_0_fu_745_p3,
        din3 => tmp_151_reg_1116,
        dout => tmp_110_fu_767_p5);

    threshold2_mux_32kbM_U180 : component threshold2_mux_32kbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_709_p3,
        din1 => col_buf_0_val_1_0_fu_727_p3,
        din2 => col_buf_0_val_2_0_fu_745_p3,
        din3 => row_assign_18_1_t_i_reg_1121,
        dout => tmp_111_fu_785_p5);

    threshold2_mux_32kbM_U181 : component threshold2_mux_32kbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_709_p3,
        din1 => col_buf_0_val_1_0_fu_727_p3,
        din2 => col_buf_0_val_2_0_fu_745_p3,
        din3 => row_assign_18_2_t_i_reg_1126,
        dout => tmp_112_fu_803_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond389_i_i_i_fu_328_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond389_i_i_i_fu_328_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((exitcond389_i_i_i_fu_328_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_9_reg_275_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_i_i_fu_580_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_9_reg_275 <= j_V_fu_585_p2;
            elsif (((exitcond389_i_i_i_fu_328_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_9_reg_275 <= ap_const_lv17_0;
            end if; 
        end if;
    end process;

    t_V_reg_264_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                t_V_reg_264 <= i_V_reg_1082;
            elsif ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_264 <= ap_const_lv17_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_i_i_fu_580_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_i_reg_1150 <= brmerge_i_fu_661_p2;
                or_cond_i425_i_i_i_reg_1140 <= or_cond_i425_i_i_i_fu_632_p2;
                or_cond_i_i_i_reg_1157 <= or_cond_i_i_i_fu_666_p2;
                x_reg_1144 <= x_fu_653_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_i_reg_1150_pp0_iter1_reg <= brmerge_i_reg_1150;
                exitcond388_i_i_i_reg_1131 <= exitcond388_i_i_i_fu_580_p2;
                exitcond388_i_i_i_reg_1131_pp0_iter1_reg <= exitcond388_i_i_i_reg_1131;
                k_buf_0_val_3_addr_reg_1161 <= tmp_604_i_fu_678_p1(10 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1174 <= tmp_604_i_fu_678_p1(10 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1180 <= tmp_604_i_fu_678_p1(10 - 1 downto 0);
                or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg <= or_cond_i425_i_i_i_reg_1140;
                or_cond_i_i_i_reg_1157_pp0_iter1_reg <= or_cond_i_i_i_reg_1157;
                tmp_155_reg_1167 <= tmp_155_fu_685_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond388_i_i_i_reg_1131_pp0_iter2_reg <= exitcond388_i_i_i_reg_1131_pp0_iter1_reg;
                exitcond388_i_i_i_reg_1131_pp0_iter3_reg <= exitcond388_i_i_i_reg_1131_pp0_iter2_reg;
                or_cond_i_i_i_reg_1157_pp0_iter2_reg <= or_cond_i_i_i_reg_1157_pp0_iter1_reg;
                or_cond_i_i_i_reg_1157_pp0_iter3_reg <= or_cond_i_i_i_reg_1157_pp0_iter2_reg;
                or_cond_i_i_i_reg_1157_pp0_iter4_reg <= or_cond_i_i_i_reg_1157_pp0_iter3_reg;
                src_kernel_win_0_va_57_reg_1186 <= src_kernel_win_0_va_57_fu_778_p3;
                src_kernel_win_0_va_57_reg_1186_pp0_iter3_reg <= src_kernel_win_0_va_57_reg_1186;
                src_kernel_win_0_va_57_reg_1186_pp0_iter4_reg <= src_kernel_win_0_va_57_reg_1186_pp0_iter3_reg;
                src_kernel_win_0_va_58_reg_1193 <= src_kernel_win_0_va_58_fu_796_p3;
                src_kernel_win_0_va_58_reg_1193_pp0_iter3_reg <= src_kernel_win_0_va_58_reg_1193;
                src_kernel_win_0_va_59_reg_1200 <= src_kernel_win_0_va_59_fu_814_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    extLd20_cast30_i_reg_1043(15 downto 0) <= extLd20_cast30_i_fu_290_p1(15 downto 0);
                    extLd_cast31_i_reg_1034(15 downto 0) <= extLd_cast31_i_fu_286_p1(15 downto 0);
                p_neg393_i_i_i_reg_1064 <= p_neg393_i_i_i_fu_316_p2;
                tmp_65_i_reg_1053 <= tmp_65_i_fu_300_p2;
                tmp_66_i_reg_1058 <= tmp_66_i_fu_306_p2;
                tmp_i_reg_1048 <= tmp_i_fu_294_p2;
                tmp_reg_1070 <= tmp_fu_322_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1082 <= i_V_fu_333_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond389_i_i_i_fu_328_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_1096 <= icmp_fu_360_p2;
                row_assign_18_1_t_i_reg_1121 <= row_assign_18_1_t_i_fu_549_p2;
                row_assign_18_2_t_i_reg_1126 <= row_assign_18_2_t_i_fu_575_p2;
                tmp_151_reg_1116 <= tmp_151_fu_524_p1;
                tmp_589_not_i_reg_1091 <= tmp_589_not_i_fu_344_p2;
                tmp_619_2_i_reg_1105 <= tmp_619_2_i_fu_372_p2;
                tmp_619_i_reg_1101 <= tmp_619_i_fu_366_p2;
                tmp_641_i_reg_1109 <= tmp_641_i_fu_378_p2;
                tmp_67_i_reg_1087 <= tmp_67_i_fu_339_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_op140_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_25_fu_166 <= col_buf_0_val_2_0_fu_745_p3;
                right_border_buf_0_26_fu_170 <= col_buf_0_val_1_0_fu_727_p3;
                right_border_buf_0_s_fu_162 <= col_buf_0_val_0_0_fu_709_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_i_i_reg_1131_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_52_fu_142 <= src_kernel_win_0_va_fu_138;
                src_kernel_win_0_va_fu_138 <= src_kernel_win_0_va_57_reg_1186_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_i_i_reg_1131_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_53_fu_146 <= src_kernel_win_0_va_58_reg_1193;
                src_kernel_win_0_va_54_fu_150 <= src_kernel_win_0_va_53_fu_146;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_i_i_reg_1131_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_55_fu_154 <= src_kernel_win_0_va_59_fu_814_p3;
                src_kernel_win_0_va_56_fu_158 <= src_kernel_win_0_va_55_fu_154;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_i_i_reg_1157_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                temp_0_i_i_i_059_i_4_reg_1212 <= temp_0_i_i_i_059_i_4_fu_890_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_i_i_reg_1157_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                temp_0_i_i_i_059_i_7_reg_1218 <= temp_0_i_i_i_059_i_7_fu_946_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_i_i_reg_1157_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                temp_0_i_i_i_059_i_s_reg_1206 <= temp_0_i_i_i_059_i_s_fu_833_p3;
            end if;
        end if;
    end process;
    extLd_cast31_i_reg_1034(16) <= '0';
    extLd20_cast30_i_reg_1043(16) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n, ap_enable_reg_pp0_iter5, exitcond389_i_i_i_fu_328_p2, ap_CS_fsm_state2, exitcond388_i_i_i_fu_580_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond389_i_i_i_fu_328_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond388_i_i_i_fu_580_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((exitcond388_i_i_i_fu_580_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ImagLoc_x_fu_607_p2 <= std_logic_vector(signed(ap_const_lv17_1FFFF) + signed(t_V_9_reg_275));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state9 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, or_cond_i_i_i_reg_1157_pp0_iter4_reg, ap_predicate_op132_read_state5, ap_predicate_op140_read_state5)
    begin
                ap_block_pp0_stage0_01001 <= (((or_cond_i_i_i_reg_1157_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op140_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op132_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, or_cond_i_i_i_reg_1157_pp0_iter4_reg, ap_predicate_op132_read_state5, ap_predicate_op140_read_state5)
    begin
                ap_block_pp0_stage0_11001 <= (((or_cond_i_i_i_reg_1157_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op140_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op132_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, or_cond_i_i_i_reg_1157_pp0_iter4_reg, ap_predicate_op132_read_state5, ap_predicate_op140_read_state5)
    begin
                ap_block_pp0_stage0_subdone <= (((or_cond_i_i_i_reg_1157_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op140_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op132_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter2_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op132_read_state5, ap_predicate_op140_read_state5)
    begin
                ap_block_state5_pp0_stage0_iter2 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op140_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op132_read_state5 = ap_const_boolean_1)));
    end process;

        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter5_assign_proc : process(p_dst_data_stream_V_full_n, or_cond_i_i_i_reg_1157_pp0_iter4_reg)
    begin
                ap_block_state8_pp0_stage0_iter5 <= ((or_cond_i_i_i_reg_1157_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_358_assign_proc : process(or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg, icmp_reg_1096, tmp_619_i_reg_1101)
    begin
                ap_condition_358 <= ((icmp_reg_1096 = ap_const_lv1_0) and (tmp_619_i_reg_1101 = ap_const_lv1_1) and (or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond388_i_i_i_fu_580_p2)
    begin
        if ((exitcond388_i_i_i_fu_580_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond389_i_i_i_fu_328_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond389_i_i_i_fu_328_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op132_read_state5_assign_proc : process(or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg, icmp_reg_1096)
    begin
                ap_predicate_op132_read_state5 <= ((icmp_reg_1096 = ap_const_lv1_0) and (or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op140_read_state5_assign_proc : process(or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg, icmp_reg_1096, tmp_67_i_reg_1087)
    begin
                ap_predicate_op140_read_state5 <= ((tmp_67_i_reg_1087 = ap_const_lv1_1) and (icmp_reg_1096 = ap_const_lv1_1) and (or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(exitcond389_i_i_i_fu_328_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond389_i_i_i_fu_328_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_i_fu_661_p2 <= (tmp_70_i_fu_627_p2 or tmp_589_not_i_reg_1091);
    col_assign_3_fu_674_p2 <= std_logic_vector(unsigned(tmp_66_i_reg_1058) - unsigned(x_reg_1144));
        col_assign_cast_i_fu_671_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_reg_1144),32));

    col_buf_0_val_0_0_fu_709_p3 <= 
        k_buf_0_val_3_q0 when (brmerge_i_reg_1150_pp0_iter1_reg(0) = '1') else 
        tmp_107_fu_698_p5;
    col_buf_0_val_1_0_fu_727_p3 <= 
        k_buf_0_val_4_q0 when (brmerge_i_reg_1150_pp0_iter1_reg(0) = '1') else 
        tmp_108_fu_716_p5;
    col_buf_0_val_2_0_fu_745_p3 <= 
        k_buf_0_val_5_q0 when (brmerge_i_reg_1150_pp0_iter1_reg(0) = '1') else 
        tmp_109_fu_734_p5;
    exitcond388_i_i_i_fu_580_p2 <= "1" when (t_V_9_reg_275 = tmp_i_reg_1048) else "0";
    exitcond389_i_i_i_fu_328_p2 <= "1" when (t_V_reg_264 = tmp_65_i_reg_1053) else "0";
    extLd20_cast30_i_fu_290_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_src_cols_V_dout),17));
    extLd_cast31_i_fu_286_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_src_rows_V_dout),17));
    i_V_fu_333_p2 <= std_logic_vector(unsigned(t_V_reg_264) + unsigned(ap_const_lv17_1));
    icmp4_fu_601_p2 <= "0" when (tmp_152_fu_591_p4 = ap_const_lv16_0) else "1";
    icmp_fu_360_p2 <= "0" when (tmp_143_fu_350_p4 = ap_const_lv16_0) else "1";
    j_V_fu_585_p2 <= std_logic_vector(unsigned(t_V_9_reg_275) + unsigned(ap_const_lv17_1));
    k_buf_0_val_3_address0 <= tmp_604_i_fu_678_p1(10 - 1 downto 0);

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg, icmp_reg_1096, tmp_619_2_i_reg_1105, ap_predicate_op140_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_reg_1096 = ap_const_lv1_0) and (tmp_619_2_i_reg_1105 = ap_const_lv1_1) and (or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op140_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_enable_reg_pp0_iter2, or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg, icmp_reg_1096, tmp_619_2_i_reg_1105, ap_predicate_op140_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_reg_1096 = ap_const_lv1_0) and (tmp_619_2_i_reg_1105 = ap_const_lv1_1) and (or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op140_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_604_i_fu_678_p1(10 - 1 downto 0);

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg, icmp_reg_1096, tmp_619_i_reg_1101, ap_predicate_op140_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_reg_1096 = ap_const_lv1_0) and (tmp_619_i_reg_1101 = ap_const_lv1_1) and (or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op140_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(p_src_data_stream_V_dout, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_predicate_op140_read_state5, k_buf_0_val_3_q0, ap_condition_358)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op140_read_state5 = ap_const_boolean_1)) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_q0;
            elsif ((ap_const_boolean_1 = ap_condition_358)) then 
                k_buf_0_val_4_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(ap_enable_reg_pp0_iter2, or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg, icmp_reg_1096, tmp_619_i_reg_1101, ap_predicate_op140_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_reg_1096 = ap_const_lv1_0) and (tmp_619_i_reg_1101 = ap_const_lv1_1) and (or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op140_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_604_i_fu_678_p1(10 - 1 downto 0);

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg, icmp_reg_1096, tmp_619_i_reg_1101, ap_predicate_op140_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_reg_1096 = ap_const_lv1_0) and (tmp_619_i_reg_1101 = ap_const_lv1_1) and (or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op140_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(p_src_data_stream_V_dout, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_predicate_op140_read_state5, k_buf_0_val_4_q0, ap_condition_358)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op140_read_state5 = ap_const_boolean_1)) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_q0;
            elsif ((ap_const_boolean_1 = ap_condition_358)) then 
                k_buf_0_val_5_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(ap_enable_reg_pp0_iter2, or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg, icmp_reg_1096, tmp_619_i_reg_1101, ap_predicate_op140_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_reg_1096 = ap_const_lv1_0) and (tmp_619_i_reg_1101 = ap_const_lv1_1) and (or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op140_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond_i425_i_i_i_fu_632_p2 <= (tmp_70_i_fu_627_p2 and rev12_fu_621_p2);
    or_cond_i_i_i_1_i_fu_458_p2 <= (tmp_646_1_i_fu_453_p2 and rev10_fu_447_p2);
    or_cond_i_i_i_2_i_fu_497_p2 <= (tmp_646_2_i_fu_492_p2 and rev11_fu_486_p2);
    or_cond_i_i_i_fu_666_p2 <= (icmp_reg_1096 and icmp4_fu_601_p2);
    or_cond_i_i_i_i_fu_408_p2 <= (tmp_646_i_fu_403_p2 and rev_fu_397_p2);
    p_assign_17_1_i_fu_433_p2 <= std_logic_vector(signed(ap_const_lv17_1FFFE) + signed(t_V_reg_264));
    p_assign_17_2_i_fu_472_p2 <= std_logic_vector(signed(ap_const_lv17_1FFFD) + signed(t_V_reg_264));
    p_assign_18_i_fu_422_p3 <= 
        ap_const_lv17_0 when (tmp_145_fu_414_p3(0) = '1') else 
        p_neg393_i_i_i_reg_1064;
    p_assign_3_fu_646_p3 <= 
        ap_const_lv17_0 when (tmp_154_fu_638_p3(0) = '1') else 
        tmp_66_i_reg_1058;

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, or_cond_i_i_i_reg_1157_pp0_iter4_reg)
    begin
        if (((or_cond_i_i_i_reg_1157_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        src_kernel_win_0_va_57_reg_1186_pp0_iter4_reg when (tmp_665_2_2_i_fu_966_p2(0) = '1') else 
        temp_0_i_i_i_059_i_7_reg_1218;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, or_cond_i_i_i_reg_1157_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((or_cond_i_i_i_reg_1157_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_neg393_i_i_i_fu_316_p2 <= std_logic_vector(signed(ap_const_lv17_1FFFF) + signed(extLd_cast31_i_fu_286_p1));

    p_src_cols_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_cols_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_cols_V_blk_n <= p_src_cols_V_empty_n;
        else 
            p_src_cols_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_cols_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_cols_V_read <= ap_const_logic_1;
        else 
            p_src_cols_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg, icmp_reg_1096, tmp_67_i_reg_1087)
    begin
        if ((((tmp_67_i_reg_1087 = ap_const_lv1_1) and (icmp_reg_1096 = ap_const_lv1_1) and (or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((icmp_reg_1096 = ap_const_lv1_0) and (or_cond_i425_i_i_i_reg_1140_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op132_read_state5, ap_predicate_op140_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op140_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op132_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_rows_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_rows_V_blk_n <= p_src_rows_V_empty_n;
        else 
            p_src_rows_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_rows_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_rows_V_read <= ap_const_logic_1;
        else 
            p_src_rows_V_read <= ap_const_logic_0;
        end if; 
    end process;

    rev10_fu_447_p2 <= (tmp_147_fu_439_p3 xor ap_const_lv1_1);
    rev11_fu_486_p2 <= (tmp_149_fu_478_p3 xor ap_const_lv1_1);
    rev12_fu_621_p2 <= (tmp_153_fu_613_p3 xor ap_const_lv1_1);
    rev_fu_397_p2 <= (tmp_144_fu_389_p3 xor ap_const_lv1_1);
    row_assign_18_1_t_i_fu_549_p2 <= std_logic_vector(unsigned(tmp_reg_1070) - unsigned(tmp_103_fu_541_p3));
    row_assign_18_2_t_i_fu_575_p2 <= std_logic_vector(unsigned(tmp_reg_1070) - unsigned(tmp_106_fu_567_p3));
    row_assign_18_i_fu_519_p2 <= std_logic_vector(unsigned(p_neg393_i_i_i_reg_1064) - unsigned(y_3_i_fu_511_p3));
    src_kernel_win_0_va_57_fu_778_p3 <= 
        tmp_110_fu_767_p5 when (tmp_641_i_reg_1109(0) = '1') else 
        col_buf_0_val_0_0_fu_709_p3;
    src_kernel_win_0_va_58_fu_796_p3 <= 
        tmp_111_fu_785_p5 when (tmp_641_i_reg_1109(0) = '1') else 
        col_buf_0_val_1_0_fu_727_p3;
    src_kernel_win_0_va_59_fu_814_p3 <= 
        tmp_112_fu_803_p5 when (tmp_641_i_reg_1109(0) = '1') else 
        col_buf_0_val_2_0_fu_745_p3;
    temp_0_i_i_i_059_i_3_fu_876_p3 <= 
        src_kernel_win_0_va_54_fu_150 when (tmp_665_1_i_fu_870_p2(0) = '1') else 
        temp_0_i_i_i_059_i_8_fu_864_p3;
    temp_0_i_i_i_059_i_4_fu_890_p3 <= 
        src_kernel_win_0_va_53_fu_146 when (tmp_665_1_1_i_fu_884_p2(0) = '1') else 
        temp_0_i_i_i_059_i_3_fu_876_p3;
    temp_0_i_i_i_059_i_5_fu_920_p3 <= 
        src_kernel_win_0_va_58_reg_1193_pp0_iter3_reg when (tmp_665_1_2_i_fu_916_p2(0) = '1') else 
        temp_0_i_i_i_059_i_4_reg_1212;
    temp_0_i_i_i_059_i_6_fu_932_p3 <= 
        src_kernel_win_0_va_52_fu_142 when (tmp_665_2_i_fu_926_p2(0) = '1') else 
        temp_0_i_i_i_059_i_5_fu_920_p3;
    temp_0_i_i_i_059_i_7_fu_946_p3 <= 
        src_kernel_win_0_va_fu_138 when (tmp_665_2_1_i_fu_940_p2(0) = '1') else 
        temp_0_i_i_i_059_i_6_fu_932_p3;
    temp_0_i_i_i_059_i_8_fu_864_p3 <= 
        src_kernel_win_0_va_59_reg_1200 when (tmp_665_0_2_i_fu_860_p2(0) = '1') else 
        temp_0_i_i_i_059_i_s_reg_1206;
    temp_0_i_i_i_059_i_s_fu_833_p3 <= 
        src_kernel_win_0_va_55_fu_154 when (tmp_665_0_1_i_fu_827_p2(0) = '1') else 
        src_kernel_win_0_va_56_fu_158;
    tmp_102_fu_534_p3 <= 
        ap_const_lv2_0 when (tmp_148_fu_464_p3(0) = '1') else 
        tmp_reg_1070;
    tmp_103_fu_541_p3 <= 
        tmp_s_fu_528_p2 when (or_cond_i_i_i_1_i_fu_458_p2(0) = '1') else 
        tmp_102_fu_534_p3;
    tmp_104_fu_554_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(tmp_146_fu_429_p1));
    tmp_105_fu_560_p3 <= 
        ap_const_lv2_0 when (tmp_150_fu_503_p3(0) = '1') else 
        tmp_reg_1070;
    tmp_106_fu_567_p3 <= 
        tmp_104_fu_554_p2 when (or_cond_i_i_i_2_i_fu_497_p2(0) = '1') else 
        tmp_105_fu_560_p3;
    tmp_142_fu_312_p1 <= p_src_rows_V_dout(2 - 1 downto 0);
    tmp_143_fu_350_p4 <= t_V_reg_264(16 downto 1);
    tmp_144_fu_389_p3 <= tmp_644_i_fu_383_p2(16 downto 16);
    tmp_145_fu_414_p3 <= tmp_644_i_fu_383_p2(16 downto 16);
    tmp_146_fu_429_p1 <= t_V_reg_264(2 - 1 downto 0);
    tmp_147_fu_439_p3 <= p_assign_17_1_i_fu_433_p2(16 downto 16);
    tmp_148_fu_464_p3 <= p_assign_17_1_i_fu_433_p2(16 downto 16);
    tmp_149_fu_478_p3 <= p_assign_17_2_i_fu_472_p2(16 downto 16);
    tmp_150_fu_503_p3 <= p_assign_17_2_i_fu_472_p2(16 downto 16);
    tmp_151_fu_524_p1 <= row_assign_18_i_fu_519_p2(2 - 1 downto 0);
    tmp_152_fu_591_p4 <= t_V_9_reg_275(16 downto 1);
    tmp_153_fu_613_p3 <= ImagLoc_x_fu_607_p2(16 downto 16);
    tmp_154_fu_638_p3 <= ImagLoc_x_fu_607_p2(16 downto 16);
    tmp_155_fu_685_p1 <= col_assign_3_fu_674_p2(2 - 1 downto 0);
    tmp_589_not_i_fu_344_p2 <= (tmp_67_i_fu_339_p2 xor ap_const_lv1_1);
    tmp_604_i_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_cast_i_fu_671_p1),64));
    tmp_619_2_i_fu_372_p2 <= "1" when (t_V_reg_264 = ap_const_lv17_1) else "0";
    tmp_619_i_fu_366_p2 <= "1" when (t_V_reg_264 = ap_const_lv17_0) else "0";
    tmp_641_i_fu_378_p2 <= "1" when (unsigned(t_V_reg_264) > unsigned(extLd_cast31_i_reg_1034)) else "0";
    tmp_644_i_fu_383_p2 <= std_logic_vector(signed(ap_const_lv17_1FFFF) + signed(t_V_reg_264));
    tmp_646_1_i_fu_453_p2 <= "1" when (signed(p_assign_17_1_i_fu_433_p2) < signed(extLd_cast31_i_reg_1034)) else "0";
    tmp_646_2_i_fu_492_p2 <= "1" when (signed(p_assign_17_2_i_fu_472_p2) < signed(extLd_cast31_i_reg_1034)) else "0";
    tmp_646_i_fu_403_p2 <= "1" when (signed(tmp_644_i_fu_383_p2) < signed(extLd_cast31_i_reg_1034)) else "0";
    tmp_65_i_fu_300_p2 <= std_logic_vector(unsigned(ap_const_lv17_2) + unsigned(extLd_cast31_i_fu_286_p1));
    tmp_665_0_1_i_fu_827_p2 <= "1" when (unsigned(src_kernel_win_0_va_55_fu_154) > unsigned(src_kernel_win_0_va_56_fu_158)) else "0";
    tmp_665_0_2_i_fu_860_p2 <= "1" when (unsigned(src_kernel_win_0_va_59_reg_1200) > unsigned(temp_0_i_i_i_059_i_s_reg_1206)) else "0";
    tmp_665_1_1_i_fu_884_p2 <= "1" when (unsigned(src_kernel_win_0_va_53_fu_146) > unsigned(temp_0_i_i_i_059_i_3_fu_876_p3)) else "0";
    tmp_665_1_2_i_fu_916_p2 <= "1" when (unsigned(src_kernel_win_0_va_58_reg_1193_pp0_iter3_reg) > unsigned(temp_0_i_i_i_059_i_4_reg_1212)) else "0";
    tmp_665_1_i_fu_870_p2 <= "1" when (unsigned(src_kernel_win_0_va_54_fu_150) > unsigned(temp_0_i_i_i_059_i_8_fu_864_p3)) else "0";
    tmp_665_2_1_i_fu_940_p2 <= "1" when (unsigned(src_kernel_win_0_va_fu_138) > unsigned(temp_0_i_i_i_059_i_6_fu_932_p3)) else "0";
    tmp_665_2_2_i_fu_966_p2 <= "1" when (unsigned(src_kernel_win_0_va_57_reg_1186_pp0_iter4_reg) > unsigned(temp_0_i_i_i_059_i_7_reg_1218)) else "0";
    tmp_665_2_i_fu_926_p2 <= "1" when (unsigned(src_kernel_win_0_va_52_fu_142) > unsigned(temp_0_i_i_i_059_i_5_fu_920_p3)) else "0";
    tmp_66_i_fu_306_p2 <= std_logic_vector(signed(ap_const_lv17_1FFFF) + signed(extLd20_cast30_i_fu_290_p1));
    tmp_67_i_fu_339_p2 <= "1" when (unsigned(t_V_reg_264) < unsigned(extLd_cast31_i_reg_1034)) else "0";
    tmp_70_i_fu_627_p2 <= "1" when (signed(ImagLoc_x_fu_607_p2) < signed(extLd20_cast30_i_reg_1043)) else "0";
    tmp_fu_322_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_142_fu_312_p1));
    tmp_i_fu_294_p2 <= std_logic_vector(unsigned(ap_const_lv17_2) + unsigned(extLd20_cast30_i_fu_290_p1));
    tmp_s_fu_528_p2 <= (tmp_146_fu_429_p1 xor ap_const_lv2_2);
    x_fu_653_p3 <= 
        ImagLoc_x_fu_607_p2 when (or_cond_i425_i_i_i_fu_632_p2(0) = '1') else 
        p_assign_3_fu_646_p3;
    y_3_i_fu_511_p3 <= 
        tmp_644_i_fu_383_p2 when (or_cond_i_i_i_i_fu_408_p2(0) = '1') else 
        p_assign_18_i_fu_422_p3;
end behav;
