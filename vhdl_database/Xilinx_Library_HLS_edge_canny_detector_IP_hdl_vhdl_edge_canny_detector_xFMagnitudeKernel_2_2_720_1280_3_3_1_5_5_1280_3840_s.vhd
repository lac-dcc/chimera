-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity edge_canny_detector_xFMagnitudeKernel_2_2_720_1280_3_3_1_5_5_1280_3840_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    gradx1_mat_4211_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    gradx1_mat_4211_empty_n : IN STD_LOGIC;
    gradx1_mat_4211_read : OUT STD_LOGIC;
    grady1_mat_4214_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    grady1_mat_4214_empty_n : IN STD_LOGIC;
    grady1_mat_4214_read : OUT STD_LOGIC;
    magnitude_mat_4216_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    magnitude_mat_4216_full_n : IN STD_LOGIC;
    magnitude_mat_4216_write : OUT STD_LOGIC );
end;


architecture behav of edge_canny_detector_xFMagnitudeKernel_2_2_720_1280_3_3_1_5_5_1280_3840_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_2D0 : STD_LOGIC_VECTOR (9 downto 0) := "1011010000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_500 : STD_LOGIC_VECTOR (10 downto 0) := "10100000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv10_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000011";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv14_3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000011";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv15_3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000011";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000011";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv17_3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000011";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal gradx1_mat_4211_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln79_reg_1806 : STD_LOGIC_VECTOR (0 downto 0);
    signal grady1_mat_4214_blk_n : STD_LOGIC;
    signal magnitude_mat_4216_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal icmp_ln79_reg_1806_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_reg_280 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_2_fu_291_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_2_reg_1792 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln72_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_2_fu_303_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln79_fu_309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1806_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1806_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1806_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1806_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1806_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1806_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1806_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1806_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1806_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1806_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1806_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_1_fu_329_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_reg_1810 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_reg_1810_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal q_1_fu_351_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal q_1_reg_1815 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln106_fu_359_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln105_fu_362_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1761_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln67_fu_365_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln67_reg_1837 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln67_reg_1837_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln67_reg_1837_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln67_reg_1837_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln67_reg_1837_pp0_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln67_reg_1837_pp0_iter11_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln67_reg_1837_pp0_iter12_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln3471_fu_377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3471_reg_1842 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3471_reg_1842_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3471_reg_1842_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3471_reg_1842_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3471_reg_1842_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3471_reg_1842_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3471_reg_1842_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_489_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1860 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_reg_1865 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_reg_1865_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_reg_1865_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_reg_1865_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_reg_1865_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_reg_1865_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_reg_1865_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln3459_1_fu_544_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln3459_1_reg_1883 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln3469_1_fu_560_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln3469_1_reg_1888 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_cast_reg_1893 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_4_cast_reg_1898 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_cast_reg_1903 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_cast_reg_1903_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_cast_reg_1908 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_cast_reg_1908_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_cast_reg_1913 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_cast_reg_1913_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_cast_reg_1913_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_cast_reg_1918 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_cast_reg_1918_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_cast_reg_1918_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_cast_reg_1923 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_cast_reg_1923_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_cast_reg_1923_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_cast_reg_1923_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_cast_reg_1928 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_cast_reg_1928_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_cast_reg_1928_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_cast_reg_1928_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_cast_reg_1933 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_cast_reg_1933_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_cast_reg_1933_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_cast_reg_1933_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_cast_reg_1933_pp0_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_cast_reg_1938 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_cast_reg_1938_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_cast_reg_1938_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_cast_reg_1938_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_cast_reg_1938_pp0_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1313_cast_reg_1943 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1313_cast_reg_1943_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1313_cast_reg_1943_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1313_cast_reg_1943_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1313_cast_reg_1943_pp0_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1313_cast_reg_1943_pp0_iter11_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_cast_reg_1948 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_cast_reg_1948_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_cast_reg_1948_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_cast_reg_1948_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_cast_reg_1948_pp0_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_cast_reg_1948_pp0_iter11_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln3471_1_fu_687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_1_reg_1953 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_1_reg_1953_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_1_reg_1953_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_1_reg_1953_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_1_reg_1953_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_1_reg_1953_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_2_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_2_reg_1969 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_2_reg_1969_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_2_reg_1969_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_2_reg_1969_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_2_reg_1969_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_2_reg_1969_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln3450_3_fu_823_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln3450_3_reg_1985 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_8_reg_1990 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_3_fu_839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_3_reg_1996 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_3_reg_1996_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_3_reg_1996_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_3_reg_1996_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_3_reg_1996_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_4_fu_913_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_4_reg_2010 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_4_reg_2010_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_4_reg_2010_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_4_reg_2010_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_4_reg_2010_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln3450_5_fu_976_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln3450_5_reg_2024 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_10_reg_2029 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_5_fu_992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_5_reg_2035 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_5_reg_2035_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_5_reg_2035_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_5_reg_2035_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_6_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_6_reg_2047 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_6_reg_2047_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_6_reg_2047_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_6_reg_2047_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln3450_7_fu_1133_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal select_ln3450_7_reg_2059 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_12_reg_2064 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_7_fu_1149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_7_reg_2070 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_7_reg_2070_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_7_reg_2070_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_8_fu_1227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_8_reg_2080 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_8_reg_2080_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_8_reg_2080_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_2090 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_1306_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal empty_reg_2096 : STD_LOGIC_VECTOR (29 downto 0);
    signal xor_ln3471_9_fu_1310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_9_reg_2101 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_9_reg_2101_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_10_fu_1386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_10_reg_2109 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_10_reg_2109_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_2117 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_44_fu_1471_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal empty_44_reg_2123 : STD_LOGIC_VECTOR (29 downto 0);
    signal xor_ln3471_11_fu_1475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_11_reg_2128 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_12_fu_1553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_12_reg_2134 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_2140 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_46_fu_1640_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal empty_46_reg_2146 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal i_reg_269 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_1_fu_315_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln98_fu_323_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_337_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln99_fu_345_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1767_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_368_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_fu_392_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal R_2_fu_401_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal R_2_0_cast_fu_409_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmpR_1_fu_413_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_fu_419_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_13_cast_fu_383_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal R_1_1_fu_429_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmpQ_s_fu_441_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln3457_fu_449_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal R_1_1_cast_fu_437_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln3459_fu_455_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln3467_fu_465_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln3469_fu_471_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln3459_fu_459_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln3469_fu_475_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln3450_fu_481_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_cast_fu_503_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal R_1_2_fu_512_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmpQ_1_fu_524_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln3457_1_fu_534_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal R_1_2_cast_fu_520_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln3459_1_fu_540_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln3467_1_fu_550_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln3469_1_fu_556_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln3450_1_fu_674_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_6_fu_679_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal R_1_3_fu_693_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmpQ_3_fu_704_p5 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln3457_2_fu_714_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal R_1_3_cast_fu_700_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln3459_2_fu_720_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln3467_2_fu_730_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln3469_2_fu_736_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln3469_2_fu_740_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln3459_2_fu_724_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln3450_2_fu_746_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_fu_754_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal R_1_4_fu_768_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmpQ_4_fu_779_p6 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln3457_3_fu_791_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal R_1_4_cast_fu_775_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln3459_3_fu_797_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal or_ln3467_3_fu_807_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln3469_3_fu_813_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln3469_3_fu_817_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln3459_3_fu_801_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal R_1_5_fu_844_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmpQ_5_fu_854_p7 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln3457_4_fu_866_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal R_1_5_cast_fu_850_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln3459_4_fu_872_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal or_ln3467_4_fu_882_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln3469_4_fu_888_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln3469_4_fu_892_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln3459_4_fu_876_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln3450_4_fu_898_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_9_fu_905_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal R_1_6_fu_919_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmpQ_6_fu_930_p8 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln3457_5_fu_944_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal R_1_6_cast_fu_926_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln3459_5_fu_950_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal or_ln3467_5_fu_960_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln3469_5_fu_966_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln3469_5_fu_970_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln3459_5_fu_954_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal R_1_7_fu_997_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmpQ_7_fu_1007_p9 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln3457_6_fu_1021_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal R_1_7_cast_fu_1003_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln3459_6_fu_1027_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln3467_6_fu_1037_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln3469_6_fu_1043_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln3469_6_fu_1047_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln3459_6_fu_1031_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln3450_6_fu_1053_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_11_fu_1060_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal R_1_8_fu_1074_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmpQ_8_fu_1085_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln3457_7_fu_1101_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal R_1_8_cast_fu_1081_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal zext_ln3459_7_fu_1107_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal or_ln3467_7_fu_1117_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln3469_7_fu_1123_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln3469_7_fu_1127_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal sub_ln3459_7_fu_1111_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal R_1_9_fu_1154_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmpQ_9_fu_1164_p11 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln3457_8_fu_1180_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal R_1_9_cast_fu_1160_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln3459_8_fu_1186_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal or_ln3467_8_fu_1196_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln3469_8_fu_1202_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln3469_8_fu_1206_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal sub_ln3459_8_fu_1190_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal select_ln3450_8_fu_1212_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_13_fu_1219_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpQ_2_fu_1240_p12 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln3457_9_fu_1258_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal R_1_s_fu_1233_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln3459_9_fu_1264_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln3467_9_fu_1274_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln3469_9_fu_1280_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln3469_9_fu_1284_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln3459_9_fu_1268_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln3450_9_fu_1290_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmpQ_10_fu_1321_p13 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln3457_10_fu_1339_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal R_1_10_fu_1315_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln3459_10_fu_1345_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln3467_10_fu_1355_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln3469_10_fu_1361_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln3469_10_fu_1365_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln3459_10_fu_1349_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln3450_10_fu_1371_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1378_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_43_fu_1392_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmpQ_11_fu_1403_p14 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln3457_11_fu_1423_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal R_1_11_fu_1396_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln3459_11_fu_1429_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln3467_11_fu_1439_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln3469_11_fu_1445_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln3469_11_fu_1449_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln3459_11_fu_1433_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln3450_11_fu_1455_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmpQ_12_fu_1486_p15 : STD_LOGIC_VECTOR (14 downto 0);
    signal or_ln3457_12_fu_1506_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal R_1_12_fu_1480_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln3459_12_fu_1512_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln3467_12_fu_1522_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln3469_12_fu_1528_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln3469_12_fu_1532_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln3459_12_fu_1516_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln3450_12_fu_1538_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_1545_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_45_fu_1559_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmpQ_13_fu_1570_p16 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln3457_13_fu_1592_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal R_1_13_fu_1563_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln3459_13_fu_1598_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln3467_13_fu_1608_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln3469_13_fu_1614_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln3469_13_fu_1618_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln3459_13_fu_1602_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln3450_13_fu_1624_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln3471_13_fu_1644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpQ_14_fu_1655_p17 : STD_LOGIC_VECTOR (16 downto 0);
    signal or_ln3457_14_fu_1677_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal R_1_14_fu_1649_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln3459_14_fu_1683_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln3467_14_fu_1693_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln3469_14_fu_1699_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln3469_14_fu_1703_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln3459_14_fu_1687_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_1709_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_1717_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln3450_14_fu_1725_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_14_fu_1732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1761_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1761_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1767_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1767_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1761_ce : STD_LOGIC;
    signal grp_fu_1767_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component edge_canny_detector_mul_mul_16s_16s_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component edge_canny_detector_mac_muladd_16s_16s_32s_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mul_mul_16s_16s_32_4_1_U55 : component edge_canny_detector_mul_mul_16s_16s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1761_p0,
        din1 => grp_fu_1761_p1,
        ce => grp_fu_1761_ce,
        dout => grp_fu_1761_p2);

    mac_muladd_16s_16s_32s_32_4_1_U56 : component edge_canny_detector_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1767_p0,
        din1 => grp_fu_1767_p1,
        din2 => grp_fu_1761_p2,
        ce => grp_fu_1767_ce,
        dout => grp_fu_1767_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln72_fu_297_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln72_fu_297_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                elsif (((icmp_ln72_fu_297_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    i_reg_269_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                i_reg_269 <= i_2_reg_1792;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_269 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    j_reg_280_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln79_fu_309_p2 = ap_const_lv1_0))) then 
                j_reg_280 <= j_2_fu_303_p2;
            elsif (((icmp_ln72_fu_297_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_reg_280 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_1806_pp0_iter5_reg = ap_const_lv1_0))) then
                add_ln3469_1_reg_1888 <= add_ln3469_1_fu_560_p2;
                icmp_ln3471_reg_1842 <= icmp_ln3471_fu_377_p2;
                sub_ln3459_1_reg_1883 <= sub_ln3459_1_fu_544_p2;
                tmp_10_cast_reg_1928 <= grp_fu_1767_p3(11 downto 10);
                tmp_11_cast_reg_1933 <= grp_fu_1767_p3(9 downto 8);
                tmp_12_cast_reg_1938 <= grp_fu_1767_p3(7 downto 6);
                tmp_1313_cast_reg_1943 <= grp_fu_1767_p3(5 downto 4);
                tmp_14_cast_reg_1948 <= grp_fu_1767_p3(3 downto 2);
                tmp_3_cast_reg_1893 <= grp_fu_1767_p3(25 downto 24);
                tmp_4_cast_reg_1898 <= grp_fu_1767_p3(23 downto 22);
                tmp_5_cast_reg_1903 <= grp_fu_1767_p3(21 downto 20);
                tmp_5_reg_1860 <= select_ln3450_fu_481_p3(5 downto 5);
                tmp_6_cast_reg_1908 <= grp_fu_1767_p3(19 downto 18);
                tmp_7_cast_reg_1913 <= grp_fu_1767_p3(17 downto 16);
                tmp_8_cast_reg_1918 <= grp_fu_1767_p3(15 downto 14);
                tmp_9_cast_reg_1923 <= grp_fu_1767_p3(13 downto 12);
                trunc_ln67_reg_1837 <= trunc_ln67_fu_365_p1;
                xor_ln3471_reg_1865 <= xor_ln3471_fu_497_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_1806_pp0_iter10_reg = ap_const_lv1_0))) then
                empty_44_reg_2123 <= empty_44_fu_1471_p1;
                tmp_16_reg_2117 <= select_ln3450_11_fu_1455_p3(31 downto 31);
                xor_ln3471_10_reg_2109 <= xor_ln3471_10_fu_1386_p2;
                xor_ln3471_9_reg_2101 <= xor_ln3471_9_fu_1310_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_1806_pp0_iter11_reg = ap_const_lv1_0))) then
                empty_46_reg_2146 <= empty_46_fu_1640_p1;
                tmp_18_reg_2140 <= select_ln3450_13_fu_1624_p3(31 downto 31);
                xor_ln3471_11_reg_2128 <= xor_ln3471_11_fu_1475_p2;
                xor_ln3471_12_reg_2134 <= xor_ln3471_12_fu_1553_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_1806_pp0_iter9_reg = ap_const_lv1_0))) then
                empty_reg_2096 <= empty_fu_1306_p1;
                tmp_14_reg_2090 <= select_ln3450_9_fu_1290_p3(31 downto 31);
                xor_ln3471_7_reg_2070 <= xor_ln3471_7_fu_1149_p2;
                xor_ln3471_8_reg_2080 <= xor_ln3471_8_fu_1227_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_2_reg_1792 <= i_2_fu_291_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln3471_reg_1842_pp0_iter10_reg <= icmp_ln3471_reg_1842_pp0_iter9_reg;
                icmp_ln3471_reg_1842_pp0_iter11_reg <= icmp_ln3471_reg_1842_pp0_iter10_reg;
                icmp_ln3471_reg_1842_pp0_iter12_reg <= icmp_ln3471_reg_1842_pp0_iter11_reg;
                icmp_ln3471_reg_1842_pp0_iter7_reg <= icmp_ln3471_reg_1842;
                icmp_ln3471_reg_1842_pp0_iter8_reg <= icmp_ln3471_reg_1842_pp0_iter7_reg;
                icmp_ln3471_reg_1842_pp0_iter9_reg <= icmp_ln3471_reg_1842_pp0_iter8_reg;
                icmp_ln79_reg_1806_pp0_iter10_reg <= icmp_ln79_reg_1806_pp0_iter9_reg;
                icmp_ln79_reg_1806_pp0_iter11_reg <= icmp_ln79_reg_1806_pp0_iter10_reg;
                icmp_ln79_reg_1806_pp0_iter12_reg <= icmp_ln79_reg_1806_pp0_iter11_reg;
                icmp_ln79_reg_1806_pp0_iter2_reg <= icmp_ln79_reg_1806_pp0_iter1_reg;
                icmp_ln79_reg_1806_pp0_iter3_reg <= icmp_ln79_reg_1806_pp0_iter2_reg;
                icmp_ln79_reg_1806_pp0_iter4_reg <= icmp_ln79_reg_1806_pp0_iter3_reg;
                icmp_ln79_reg_1806_pp0_iter5_reg <= icmp_ln79_reg_1806_pp0_iter4_reg;
                icmp_ln79_reg_1806_pp0_iter6_reg <= icmp_ln79_reg_1806_pp0_iter5_reg;
                icmp_ln79_reg_1806_pp0_iter7_reg <= icmp_ln79_reg_1806_pp0_iter6_reg;
                icmp_ln79_reg_1806_pp0_iter8_reg <= icmp_ln79_reg_1806_pp0_iter7_reg;
                icmp_ln79_reg_1806_pp0_iter9_reg <= icmp_ln79_reg_1806_pp0_iter8_reg;
                p_1_reg_1810_pp0_iter2_reg <= p_1_reg_1810;
                tmp_10_cast_reg_1928_pp0_iter7_reg <= tmp_10_cast_reg_1928;
                tmp_10_cast_reg_1928_pp0_iter8_reg <= tmp_10_cast_reg_1928_pp0_iter7_reg;
                tmp_10_cast_reg_1928_pp0_iter9_reg <= tmp_10_cast_reg_1928_pp0_iter8_reg;
                tmp_11_cast_reg_1933_pp0_iter10_reg <= tmp_11_cast_reg_1933_pp0_iter9_reg;
                tmp_11_cast_reg_1933_pp0_iter7_reg <= tmp_11_cast_reg_1933;
                tmp_11_cast_reg_1933_pp0_iter8_reg <= tmp_11_cast_reg_1933_pp0_iter7_reg;
                tmp_11_cast_reg_1933_pp0_iter9_reg <= tmp_11_cast_reg_1933_pp0_iter8_reg;
                tmp_12_cast_reg_1938_pp0_iter10_reg <= tmp_12_cast_reg_1938_pp0_iter9_reg;
                tmp_12_cast_reg_1938_pp0_iter7_reg <= tmp_12_cast_reg_1938;
                tmp_12_cast_reg_1938_pp0_iter8_reg <= tmp_12_cast_reg_1938_pp0_iter7_reg;
                tmp_12_cast_reg_1938_pp0_iter9_reg <= tmp_12_cast_reg_1938_pp0_iter8_reg;
                tmp_1313_cast_reg_1943_pp0_iter10_reg <= tmp_1313_cast_reg_1943_pp0_iter9_reg;
                tmp_1313_cast_reg_1943_pp0_iter11_reg <= tmp_1313_cast_reg_1943_pp0_iter10_reg;
                tmp_1313_cast_reg_1943_pp0_iter7_reg <= tmp_1313_cast_reg_1943;
                tmp_1313_cast_reg_1943_pp0_iter8_reg <= tmp_1313_cast_reg_1943_pp0_iter7_reg;
                tmp_1313_cast_reg_1943_pp0_iter9_reg <= tmp_1313_cast_reg_1943_pp0_iter8_reg;
                tmp_14_cast_reg_1948_pp0_iter10_reg <= tmp_14_cast_reg_1948_pp0_iter9_reg;
                tmp_14_cast_reg_1948_pp0_iter11_reg <= tmp_14_cast_reg_1948_pp0_iter10_reg;
                tmp_14_cast_reg_1948_pp0_iter7_reg <= tmp_14_cast_reg_1948;
                tmp_14_cast_reg_1948_pp0_iter8_reg <= tmp_14_cast_reg_1948_pp0_iter7_reg;
                tmp_14_cast_reg_1948_pp0_iter9_reg <= tmp_14_cast_reg_1948_pp0_iter8_reg;
                tmp_5_cast_reg_1903_pp0_iter7_reg <= tmp_5_cast_reg_1903;
                tmp_6_cast_reg_1908_pp0_iter7_reg <= tmp_6_cast_reg_1908;
                tmp_7_cast_reg_1913_pp0_iter7_reg <= tmp_7_cast_reg_1913;
                tmp_7_cast_reg_1913_pp0_iter8_reg <= tmp_7_cast_reg_1913_pp0_iter7_reg;
                tmp_8_cast_reg_1918_pp0_iter7_reg <= tmp_8_cast_reg_1918;
                tmp_8_cast_reg_1918_pp0_iter8_reg <= tmp_8_cast_reg_1918_pp0_iter7_reg;
                tmp_9_cast_reg_1923_pp0_iter7_reg <= tmp_9_cast_reg_1923;
                tmp_9_cast_reg_1923_pp0_iter8_reg <= tmp_9_cast_reg_1923_pp0_iter7_reg;
                tmp_9_cast_reg_1923_pp0_iter9_reg <= tmp_9_cast_reg_1923_pp0_iter8_reg;
                trunc_ln67_reg_1837_pp0_iter10_reg <= trunc_ln67_reg_1837_pp0_iter9_reg;
                trunc_ln67_reg_1837_pp0_iter11_reg <= trunc_ln67_reg_1837_pp0_iter10_reg;
                trunc_ln67_reg_1837_pp0_iter12_reg <= trunc_ln67_reg_1837_pp0_iter11_reg;
                trunc_ln67_reg_1837_pp0_iter7_reg <= trunc_ln67_reg_1837;
                trunc_ln67_reg_1837_pp0_iter8_reg <= trunc_ln67_reg_1837_pp0_iter7_reg;
                trunc_ln67_reg_1837_pp0_iter9_reg <= trunc_ln67_reg_1837_pp0_iter8_reg;
                xor_ln3471_10_reg_2109_pp0_iter12_reg <= xor_ln3471_10_reg_2109;
                xor_ln3471_1_reg_1953_pp0_iter10_reg <= xor_ln3471_1_reg_1953_pp0_iter9_reg;
                xor_ln3471_1_reg_1953_pp0_iter11_reg <= xor_ln3471_1_reg_1953_pp0_iter10_reg;
                xor_ln3471_1_reg_1953_pp0_iter12_reg <= xor_ln3471_1_reg_1953_pp0_iter11_reg;
                xor_ln3471_1_reg_1953_pp0_iter8_reg <= xor_ln3471_1_reg_1953;
                xor_ln3471_1_reg_1953_pp0_iter9_reg <= xor_ln3471_1_reg_1953_pp0_iter8_reg;
                xor_ln3471_2_reg_1969_pp0_iter10_reg <= xor_ln3471_2_reg_1969_pp0_iter9_reg;
                xor_ln3471_2_reg_1969_pp0_iter11_reg <= xor_ln3471_2_reg_1969_pp0_iter10_reg;
                xor_ln3471_2_reg_1969_pp0_iter12_reg <= xor_ln3471_2_reg_1969_pp0_iter11_reg;
                xor_ln3471_2_reg_1969_pp0_iter8_reg <= xor_ln3471_2_reg_1969;
                xor_ln3471_2_reg_1969_pp0_iter9_reg <= xor_ln3471_2_reg_1969_pp0_iter8_reg;
                xor_ln3471_3_reg_1996_pp0_iter10_reg <= xor_ln3471_3_reg_1996_pp0_iter9_reg;
                xor_ln3471_3_reg_1996_pp0_iter11_reg <= xor_ln3471_3_reg_1996_pp0_iter10_reg;
                xor_ln3471_3_reg_1996_pp0_iter12_reg <= xor_ln3471_3_reg_1996_pp0_iter11_reg;
                xor_ln3471_3_reg_1996_pp0_iter9_reg <= xor_ln3471_3_reg_1996;
                xor_ln3471_4_reg_2010_pp0_iter10_reg <= xor_ln3471_4_reg_2010_pp0_iter9_reg;
                xor_ln3471_4_reg_2010_pp0_iter11_reg <= xor_ln3471_4_reg_2010_pp0_iter10_reg;
                xor_ln3471_4_reg_2010_pp0_iter12_reg <= xor_ln3471_4_reg_2010_pp0_iter11_reg;
                xor_ln3471_4_reg_2010_pp0_iter9_reg <= xor_ln3471_4_reg_2010;
                xor_ln3471_5_reg_2035_pp0_iter10_reg <= xor_ln3471_5_reg_2035;
                xor_ln3471_5_reg_2035_pp0_iter11_reg <= xor_ln3471_5_reg_2035_pp0_iter10_reg;
                xor_ln3471_5_reg_2035_pp0_iter12_reg <= xor_ln3471_5_reg_2035_pp0_iter11_reg;
                xor_ln3471_6_reg_2047_pp0_iter10_reg <= xor_ln3471_6_reg_2047;
                xor_ln3471_6_reg_2047_pp0_iter11_reg <= xor_ln3471_6_reg_2047_pp0_iter10_reg;
                xor_ln3471_6_reg_2047_pp0_iter12_reg <= xor_ln3471_6_reg_2047_pp0_iter11_reg;
                xor_ln3471_7_reg_2070_pp0_iter11_reg <= xor_ln3471_7_reg_2070;
                xor_ln3471_7_reg_2070_pp0_iter12_reg <= xor_ln3471_7_reg_2070_pp0_iter11_reg;
                xor_ln3471_8_reg_2080_pp0_iter11_reg <= xor_ln3471_8_reg_2080;
                xor_ln3471_8_reg_2080_pp0_iter12_reg <= xor_ln3471_8_reg_2080_pp0_iter11_reg;
                xor_ln3471_9_reg_2101_pp0_iter12_reg <= xor_ln3471_9_reg_2101;
                xor_ln3471_reg_1865_pp0_iter10_reg <= xor_ln3471_reg_1865_pp0_iter9_reg;
                xor_ln3471_reg_1865_pp0_iter11_reg <= xor_ln3471_reg_1865_pp0_iter10_reg;
                xor_ln3471_reg_1865_pp0_iter12_reg <= xor_ln3471_reg_1865_pp0_iter11_reg;
                xor_ln3471_reg_1865_pp0_iter7_reg <= xor_ln3471_reg_1865;
                xor_ln3471_reg_1865_pp0_iter8_reg <= xor_ln3471_reg_1865_pp0_iter7_reg;
                xor_ln3471_reg_1865_pp0_iter9_reg <= xor_ln3471_reg_1865_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln79_reg_1806 <= icmp_ln79_fu_309_p2;
                icmp_ln79_reg_1806_pp0_iter1_reg <= icmp_ln79_reg_1806;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_reg_1806 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_1_reg_1810 <= p_1_fu_329_p3;
                q_1_reg_1815 <= q_1_fu_351_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_1806_pp0_iter6_reg = ap_const_lv1_0))) then
                select_ln3450_3_reg_1985 <= select_ln3450_3_fu_823_p3;
                tmp_8_reg_1990 <= select_ln3450_3_fu_823_p3(14 downto 14);
                xor_ln3471_1_reg_1953 <= xor_ln3471_1_fu_687_p2;
                xor_ln3471_2_reg_1969 <= xor_ln3471_2_fu_762_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_1806_pp0_iter7_reg = ap_const_lv1_0))) then
                select_ln3450_5_reg_2024 <= select_ln3450_5_fu_976_p3;
                tmp_10_reg_2029 <= select_ln3450_5_fu_976_p3(20 downto 20);
                xor_ln3471_3_reg_1996 <= xor_ln3471_3_fu_839_p2;
                xor_ln3471_4_reg_2010 <= xor_ln3471_4_fu_913_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_1806_pp0_iter8_reg = ap_const_lv1_0))) then
                select_ln3450_7_reg_2059 <= select_ln3450_7_fu_1133_p3;
                tmp_12_reg_2064 <= select_ln3450_7_fu_1133_p3(26 downto 26);
                xor_ln3471_5_reg_2035 <= xor_ln3471_5_fu_992_p2;
                xor_ln3471_6_reg_2047 <= xor_ln3471_6_fu_1068_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter13, ap_CS_fsm_state2, icmp_ln72_fu_297_p2, ap_enable_reg_pp0_iter0, icmp_ln79_fu_309_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter12)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln72_fu_297_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln79_fu_309_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln79_fu_309_p2 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    R_1_10_fu_1315_p3 <= (empty_reg_2096 & tmp_11_cast_reg_1933_pp0_iter10_reg);
    R_1_11_fu_1396_p3 <= (empty_43_fu_1392_p1 & tmp_12_cast_reg_1938_pp0_iter10_reg);
    R_1_12_fu_1480_p3 <= (empty_44_reg_2123 & tmp_1313_cast_reg_1943_pp0_iter11_reg);
    R_1_13_fu_1563_p3 <= (empty_45_fu_1559_p1 & tmp_14_cast_reg_1948_pp0_iter11_reg);
    R_1_14_fu_1649_p3 <= (empty_46_reg_2146 & trunc_ln67_reg_1837_pp0_iter12_reg);
        R_1_1_cast_fu_437_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(R_1_1_fu_429_p3),6));

    R_1_1_fu_429_p3 <= (tmp_fu_419_p4 & tmp_13_cast_fu_383_p4);
        R_1_2_cast_fu_520_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(R_1_2_fu_512_p3),9));

    R_1_2_fu_512_p3 <= (select_ln3450_fu_481_p3 & tmp_2_cast_fu_503_p4);
        R_1_3_cast_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(R_1_3_fu_693_p3),12));

    R_1_3_fu_693_p3 <= (select_ln3450_1_fu_674_p3 & tmp_3_cast_reg_1893);
        R_1_4_cast_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(R_1_4_fu_768_p3),15));

    R_1_4_fu_768_p3 <= (select_ln3450_2_fu_746_p3 & tmp_4_cast_reg_1898);
        R_1_5_cast_fu_850_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(R_1_5_fu_844_p3),18));

    R_1_5_fu_844_p3 <= (select_ln3450_3_reg_1985 & tmp_5_cast_reg_1903_pp0_iter7_reg);
        R_1_6_cast_fu_926_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(R_1_6_fu_919_p3),21));

    R_1_6_fu_919_p3 <= (select_ln3450_4_fu_898_p3 & tmp_6_cast_reg_1908_pp0_iter7_reg);
        R_1_7_cast_fu_1003_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(R_1_7_fu_997_p3),24));

    R_1_7_fu_997_p3 <= (select_ln3450_5_reg_2024 & tmp_7_cast_reg_1913_pp0_iter8_reg);
        R_1_8_cast_fu_1081_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(R_1_8_fu_1074_p3),27));

    R_1_8_fu_1074_p3 <= (select_ln3450_6_fu_1053_p3 & tmp_8_cast_reg_1918_pp0_iter8_reg);
        R_1_9_cast_fu_1160_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(R_1_9_fu_1154_p3),30));

    R_1_9_fu_1154_p3 <= (select_ln3450_7_reg_2059 & tmp_9_cast_reg_1923_pp0_iter9_reg);
    R_1_s_fu_1233_p3 <= (select_ln3450_8_fu_1212_p3 & tmp_10_cast_reg_1928_pp0_iter9_reg);
    R_2_0_cast_fu_409_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(R_2_fu_401_p3),5));
    R_2_fu_401_p3 <= (tmp_2_fu_392_p4 & ap_const_lv2_0);
    add_ln3469_10_fu_1365_p2 <= std_logic_vector(unsigned(R_1_10_fu_1315_p3) + unsigned(zext_ln3469_10_fu_1361_p1));
    add_ln3469_11_fu_1449_p2 <= std_logic_vector(unsigned(R_1_11_fu_1396_p3) + unsigned(zext_ln3469_11_fu_1445_p1));
    add_ln3469_12_fu_1532_p2 <= std_logic_vector(unsigned(R_1_12_fu_1480_p3) + unsigned(zext_ln3469_12_fu_1528_p1));
    add_ln3469_13_fu_1618_p2 <= std_logic_vector(unsigned(R_1_13_fu_1563_p3) + unsigned(zext_ln3469_13_fu_1614_p1));
    add_ln3469_14_fu_1703_p2 <= std_logic_vector(unsigned(R_1_14_fu_1649_p3) + unsigned(zext_ln3469_14_fu_1699_p1));
    add_ln3469_1_fu_560_p2 <= std_logic_vector(signed(R_1_2_cast_fu_520_p1) + signed(zext_ln3469_1_fu_556_p1));
    add_ln3469_2_fu_740_p2 <= std_logic_vector(signed(R_1_3_cast_fu_700_p1) + signed(zext_ln3469_2_fu_736_p1));
    add_ln3469_3_fu_817_p2 <= std_logic_vector(signed(R_1_4_cast_fu_775_p1) + signed(zext_ln3469_3_fu_813_p1));
    add_ln3469_4_fu_892_p2 <= std_logic_vector(signed(R_1_5_cast_fu_850_p1) + signed(zext_ln3469_4_fu_888_p1));
    add_ln3469_5_fu_970_p2 <= std_logic_vector(signed(R_1_6_cast_fu_926_p1) + signed(zext_ln3469_5_fu_966_p1));
    add_ln3469_6_fu_1047_p2 <= std_logic_vector(signed(R_1_7_cast_fu_1003_p1) + signed(zext_ln3469_6_fu_1043_p1));
    add_ln3469_7_fu_1127_p2 <= std_logic_vector(signed(R_1_8_cast_fu_1081_p1) + signed(zext_ln3469_7_fu_1123_p1));
    add_ln3469_8_fu_1206_p2 <= std_logic_vector(signed(R_1_9_cast_fu_1160_p1) + signed(zext_ln3469_8_fu_1202_p1));
    add_ln3469_9_fu_1284_p2 <= std_logic_vector(unsigned(R_1_s_fu_1233_p3) + unsigned(zext_ln3469_9_fu_1280_p1));
    add_ln3469_fu_475_p2 <= std_logic_vector(signed(R_1_1_cast_fu_437_p1) + signed(zext_ln3469_fu_471_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state17 <= ap_CS_fsm(3);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(gradx1_mat_4211_empty_n, grady1_mat_4214_empty_n, magnitude_mat_4216_full_n, ap_enable_reg_pp0_iter1, icmp_ln79_reg_1806, ap_enable_reg_pp0_iter13, icmp_ln79_reg_1806_pp0_iter12_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln79_reg_1806_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (magnitude_mat_4216_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln79_reg_1806 = ap_const_lv1_0) and (grady1_mat_4214_empty_n = ap_const_logic_0)) or ((icmp_ln79_reg_1806 = ap_const_lv1_0) and (gradx1_mat_4211_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(gradx1_mat_4211_empty_n, grady1_mat_4214_empty_n, magnitude_mat_4216_full_n, ap_enable_reg_pp0_iter1, icmp_ln79_reg_1806, ap_enable_reg_pp0_iter13, icmp_ln79_reg_1806_pp0_iter12_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln79_reg_1806_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (magnitude_mat_4216_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln79_reg_1806 = ap_const_lv1_0) and (grady1_mat_4214_empty_n = ap_const_logic_0)) or ((icmp_ln79_reg_1806 = ap_const_lv1_0) and (gradx1_mat_4211_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(gradx1_mat_4211_empty_n, grady1_mat_4214_empty_n, magnitude_mat_4216_full_n, ap_enable_reg_pp0_iter1, icmp_ln79_reg_1806, ap_enable_reg_pp0_iter13, icmp_ln79_reg_1806_pp0_iter12_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln79_reg_1806_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (magnitude_mat_4216_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln79_reg_1806 = ap_const_lv1_0) and (grady1_mat_4214_empty_n = ap_const_logic_0)) or ((icmp_ln79_reg_1806 = ap_const_lv1_0) and (gradx1_mat_4211_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state16_pp0_stage0_iter13_assign_proc : process(magnitude_mat_4216_full_n, icmp_ln79_reg_1806_pp0_iter12_reg)
    begin
                ap_block_state16_pp0_stage0_iter13 <= ((icmp_ln79_reg_1806_pp0_iter12_reg = ap_const_lv1_0) and (magnitude_mat_4216_full_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(gradx1_mat_4211_empty_n, grady1_mat_4214_empty_n, icmp_ln79_reg_1806)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((icmp_ln79_reg_1806 = ap_const_lv1_0) and (grady1_mat_4214_empty_n = ap_const_logic_0)) or ((icmp_ln79_reg_1806 = ap_const_lv1_0) and (gradx1_mat_4211_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln79_fu_309_p2)
    begin
        if ((icmp_ln79_fu_309_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln72_fu_297_p2)
    begin
        if (((icmp_ln72_fu_297_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln72_fu_297_p2)
    begin
        if (((icmp_ln72_fu_297_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_43_fu_1392_p1 <= select_ln3450_10_fu_1371_p3(30 - 1 downto 0);
    empty_44_fu_1471_p1 <= select_ln3450_11_fu_1455_p3(30 - 1 downto 0);
    empty_45_fu_1559_p1 <= select_ln3450_12_fu_1538_p3(30 - 1 downto 0);
    empty_46_fu_1640_p1 <= select_ln3450_13_fu_1624_p3(30 - 1 downto 0);
    empty_fu_1306_p1 <= select_ln3450_9_fu_1290_p3(30 - 1 downto 0);

    gradx1_mat_4211_blk_n_assign_proc : process(gradx1_mat_4211_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln79_reg_1806)
    begin
        if (((icmp_ln79_reg_1806 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gradx1_mat_4211_blk_n <= gradx1_mat_4211_empty_n;
        else 
            gradx1_mat_4211_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gradx1_mat_4211_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln79_reg_1806, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln79_reg_1806 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gradx1_mat_4211_read <= ap_const_logic_1;
        else 
            gradx1_mat_4211_read <= ap_const_logic_0;
        end if; 
    end process;


    grady1_mat_4214_blk_n_assign_proc : process(grady1_mat_4214_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln79_reg_1806)
    begin
        if (((icmp_ln79_reg_1806 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grady1_mat_4214_blk_n <= grady1_mat_4214_empty_n;
        else 
            grady1_mat_4214_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    grady1_mat_4214_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln79_reg_1806, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln79_reg_1806 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grady1_mat_4214_read <= ap_const_logic_1;
        else 
            grady1_mat_4214_read <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1761_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1761_ce <= ap_const_logic_1;
        else 
            grp_fu_1761_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1761_p0 <= sext_ln106_fu_359_p1(16 - 1 downto 0);
    grp_fu_1761_p1 <= sext_ln106_fu_359_p1(16 - 1 downto 0);

    grp_fu_1767_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1767_ce <= ap_const_logic_1;
        else 
            grp_fu_1767_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1767_p0 <= sext_ln105_fu_362_p1(16 - 1 downto 0);
    grp_fu_1767_p1 <= sext_ln105_fu_362_p1(16 - 1 downto 0);
    i_2_fu_291_p2 <= std_logic_vector(unsigned(i_reg_269) + unsigned(ap_const_lv10_1));
    icmp_ln3471_fu_377_p2 <= "0" when (tmp_4_fu_368_p4 = ap_const_lv2_0) else "1";
    icmp_ln72_fu_297_p2 <= "1" when (i_reg_269 = ap_const_lv10_2D0) else "0";
    icmp_ln79_fu_309_p2 <= "1" when (j_reg_280 = ap_const_lv11_500) else "0";
    j_2_fu_303_p2 <= std_logic_vector(unsigned(j_reg_280) + unsigned(ap_const_lv11_1));

    magnitude_mat_4216_blk_n_assign_proc : process(magnitude_mat_4216_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter13, icmp_ln79_reg_1806_pp0_iter12_reg)
    begin
        if (((icmp_ln79_reg_1806_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            magnitude_mat_4216_blk_n <= magnitude_mat_4216_full_n;
        else 
            magnitude_mat_4216_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    magnitude_mat_4216_din <= (((((((((((((((icmp_ln3471_reg_1842_pp0_iter12_reg & xor_ln3471_reg_1865_pp0_iter12_reg) & xor_ln3471_1_reg_1953_pp0_iter12_reg) & xor_ln3471_2_reg_1969_pp0_iter12_reg) & xor_ln3471_3_reg_1996_pp0_iter12_reg) & xor_ln3471_4_reg_2010_pp0_iter12_reg) & xor_ln3471_5_reg_2035_pp0_iter12_reg) & xor_ln3471_6_reg_2047_pp0_iter12_reg) & xor_ln3471_7_reg_2070_pp0_iter12_reg) & xor_ln3471_8_reg_2080_pp0_iter12_reg) & xor_ln3471_9_reg_2101_pp0_iter12_reg) & xor_ln3471_10_reg_2109_pp0_iter12_reg) & xor_ln3471_11_reg_2128) & xor_ln3471_12_reg_2134) & xor_ln3471_13_fu_1644_p2) & xor_ln3471_14_fu_1732_p2);

    magnitude_mat_4216_write_assign_proc : process(ap_enable_reg_pp0_iter13, icmp_ln79_reg_1806_pp0_iter12_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln79_reg_1806_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            magnitude_mat_4216_write <= ap_const_logic_1;
        else 
            magnitude_mat_4216_write <= ap_const_logic_0;
        end if; 
    end process;

    or_ln3457_10_fu_1339_p2 <= (tmpQ_10_fu_1321_p13 or ap_const_lv13_1);
    or_ln3457_11_fu_1423_p2 <= (tmpQ_11_fu_1403_p14 or ap_const_lv14_1);
    or_ln3457_12_fu_1506_p2 <= (tmpQ_12_fu_1486_p15 or ap_const_lv15_1);
    or_ln3457_13_fu_1592_p2 <= (tmpQ_13_fu_1570_p16 or ap_const_lv16_1);
    or_ln3457_14_fu_1677_p2 <= (tmpQ_14_fu_1655_p17 or ap_const_lv17_1);
    or_ln3457_1_fu_534_p2 <= (tmpQ_1_fu_524_p4 or ap_const_lv4_1);
    or_ln3457_2_fu_714_p2 <= (tmpQ_3_fu_704_p5 or ap_const_lv5_1);
    or_ln3457_3_fu_791_p2 <= (tmpQ_4_fu_779_p6 or ap_const_lv6_1);
    or_ln3457_4_fu_866_p2 <= (tmpQ_5_fu_854_p7 or ap_const_lv7_1);
    or_ln3457_5_fu_944_p2 <= (tmpQ_6_fu_930_p8 or ap_const_lv8_1);
    or_ln3457_6_fu_1021_p2 <= (tmpQ_7_fu_1007_p9 or ap_const_lv9_1);
    or_ln3457_7_fu_1101_p2 <= (tmpQ_8_fu_1085_p10 or ap_const_lv10_1);
    or_ln3457_8_fu_1180_p2 <= (tmpQ_9_fu_1164_p11 or ap_const_lv11_1);
    or_ln3457_9_fu_1258_p2 <= (tmpQ_2_fu_1240_p12 or ap_const_lv12_1);
    or_ln3457_fu_449_p2 <= (tmpQ_s_fu_441_p3 or ap_const_lv3_1);
    or_ln3467_10_fu_1355_p2 <= (tmpQ_10_fu_1321_p13 or ap_const_lv13_3);
    or_ln3467_11_fu_1439_p2 <= (tmpQ_11_fu_1403_p14 or ap_const_lv14_3);
    or_ln3467_12_fu_1522_p2 <= (tmpQ_12_fu_1486_p15 or ap_const_lv15_3);
    or_ln3467_13_fu_1608_p2 <= (tmpQ_13_fu_1570_p16 or ap_const_lv16_3);
    or_ln3467_14_fu_1693_p2 <= (tmpQ_14_fu_1655_p17 or ap_const_lv17_3);
    or_ln3467_1_fu_550_p2 <= (tmpQ_1_fu_524_p4 or ap_const_lv4_3);
    or_ln3467_2_fu_730_p2 <= (tmpQ_3_fu_704_p5 or ap_const_lv5_3);
    or_ln3467_3_fu_807_p2 <= (tmpQ_4_fu_779_p6 or ap_const_lv6_3);
    or_ln3467_4_fu_882_p2 <= (tmpQ_5_fu_854_p7 or ap_const_lv7_3);
    or_ln3467_5_fu_960_p2 <= (tmpQ_6_fu_930_p8 or ap_const_lv8_3);
    or_ln3467_6_fu_1037_p2 <= (tmpQ_7_fu_1007_p9 or ap_const_lv9_3);
    or_ln3467_7_fu_1117_p2 <= (tmpQ_8_fu_1085_p10 or ap_const_lv10_3);
    or_ln3467_8_fu_1196_p2 <= (tmpQ_9_fu_1164_p11 or ap_const_lv11_3);
    or_ln3467_9_fu_1274_p2 <= (tmpQ_2_fu_1240_p12 or ap_const_lv12_3);
    or_ln3467_fu_465_p2 <= (tmpQ_s_fu_441_p3 or ap_const_lv3_3);
    p_1_fu_329_p3 <= 
        sub_ln98_fu_323_p2 when (tmp_1_fu_315_p3(0) = '1') else 
        gradx1_mat_4211_dout;
    q_1_fu_351_p3 <= 
        sub_ln99_fu_345_p2 when (tmp_3_fu_337_p3(0) = '1') else 
        grady1_mat_4214_dout;
    select_ln3450_10_fu_1371_p3 <= 
        add_ln3469_10_fu_1365_p2 when (tmp_14_reg_2090(0) = '1') else 
        sub_ln3459_10_fu_1349_p2;
    select_ln3450_11_fu_1455_p3 <= 
        add_ln3469_11_fu_1449_p2 when (tmp_15_fu_1378_p3(0) = '1') else 
        sub_ln3459_11_fu_1433_p2;
    select_ln3450_12_fu_1538_p3 <= 
        add_ln3469_12_fu_1532_p2 when (tmp_16_reg_2117(0) = '1') else 
        sub_ln3459_12_fu_1516_p2;
    select_ln3450_13_fu_1624_p3 <= 
        add_ln3469_13_fu_1618_p2 when (tmp_17_fu_1545_p3(0) = '1') else 
        sub_ln3459_13_fu_1602_p2;
    select_ln3450_14_fu_1725_p3 <= 
        tmp_19_fu_1709_p3 when (tmp_18_reg_2140(0) = '1') else 
        tmp_20_fu_1717_p3;
    select_ln3450_1_fu_674_p3 <= 
        add_ln3469_1_reg_1888 when (tmp_5_reg_1860(0) = '1') else 
        sub_ln3459_1_reg_1883;
    select_ln3450_2_fu_746_p3 <= 
        add_ln3469_2_fu_740_p2 when (tmp_6_fu_679_p3(0) = '1') else 
        sub_ln3459_2_fu_724_p2;
    select_ln3450_3_fu_823_p3 <= 
        add_ln3469_3_fu_817_p2 when (tmp_7_fu_754_p3(0) = '1') else 
        sub_ln3459_3_fu_801_p2;
    select_ln3450_4_fu_898_p3 <= 
        add_ln3469_4_fu_892_p2 when (tmp_8_reg_1990(0) = '1') else 
        sub_ln3459_4_fu_876_p2;
    select_ln3450_5_fu_976_p3 <= 
        add_ln3469_5_fu_970_p2 when (tmp_9_fu_905_p3(0) = '1') else 
        sub_ln3459_5_fu_954_p2;
    select_ln3450_6_fu_1053_p3 <= 
        add_ln3469_6_fu_1047_p2 when (tmp_10_reg_2029(0) = '1') else 
        sub_ln3459_6_fu_1031_p2;
    select_ln3450_7_fu_1133_p3 <= 
        add_ln3469_7_fu_1127_p2 when (tmp_11_fu_1060_p3(0) = '1') else 
        sub_ln3459_7_fu_1111_p2;
    select_ln3450_8_fu_1212_p3 <= 
        add_ln3469_8_fu_1206_p2 when (tmp_12_reg_2064(0) = '1') else 
        sub_ln3459_8_fu_1190_p2;
    select_ln3450_9_fu_1290_p3 <= 
        add_ln3469_9_fu_1284_p2 when (tmp_13_fu_1219_p3(0) = '1') else 
        sub_ln3459_9_fu_1268_p2;
    select_ln3450_fu_481_p3 <= 
        sub_ln3459_fu_459_p2 when (icmp_ln3471_fu_377_p2(0) = '1') else 
        add_ln3469_fu_475_p2;
        sext_ln105_fu_362_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_reg_1810_pp0_iter2_reg),32));

        sext_ln106_fu_359_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(q_1_reg_1815),32));

    sub_ln3459_10_fu_1349_p2 <= std_logic_vector(unsigned(R_1_10_fu_1315_p3) - unsigned(zext_ln3459_10_fu_1345_p1));
    sub_ln3459_11_fu_1433_p2 <= std_logic_vector(unsigned(R_1_11_fu_1396_p3) - unsigned(zext_ln3459_11_fu_1429_p1));
    sub_ln3459_12_fu_1516_p2 <= std_logic_vector(unsigned(R_1_12_fu_1480_p3) - unsigned(zext_ln3459_12_fu_1512_p1));
    sub_ln3459_13_fu_1602_p2 <= std_logic_vector(unsigned(R_1_13_fu_1563_p3) - unsigned(zext_ln3459_13_fu_1598_p1));
    sub_ln3459_14_fu_1687_p2 <= std_logic_vector(unsigned(R_1_14_fu_1649_p3) - unsigned(zext_ln3459_14_fu_1683_p1));
    sub_ln3459_1_fu_544_p2 <= std_logic_vector(signed(R_1_2_cast_fu_520_p1) - signed(zext_ln3459_1_fu_540_p1));
    sub_ln3459_2_fu_724_p2 <= std_logic_vector(signed(R_1_3_cast_fu_700_p1) - signed(zext_ln3459_2_fu_720_p1));
    sub_ln3459_3_fu_801_p2 <= std_logic_vector(signed(R_1_4_cast_fu_775_p1) - signed(zext_ln3459_3_fu_797_p1));
    sub_ln3459_4_fu_876_p2 <= std_logic_vector(signed(R_1_5_cast_fu_850_p1) - signed(zext_ln3459_4_fu_872_p1));
    sub_ln3459_5_fu_954_p2 <= std_logic_vector(signed(R_1_6_cast_fu_926_p1) - signed(zext_ln3459_5_fu_950_p1));
    sub_ln3459_6_fu_1031_p2 <= std_logic_vector(signed(R_1_7_cast_fu_1003_p1) - signed(zext_ln3459_6_fu_1027_p1));
    sub_ln3459_7_fu_1111_p2 <= std_logic_vector(signed(R_1_8_cast_fu_1081_p1) - signed(zext_ln3459_7_fu_1107_p1));
    sub_ln3459_8_fu_1190_p2 <= std_logic_vector(signed(R_1_9_cast_fu_1160_p1) - signed(zext_ln3459_8_fu_1186_p1));
    sub_ln3459_9_fu_1268_p2 <= std_logic_vector(unsigned(R_1_s_fu_1233_p3) - unsigned(zext_ln3459_9_fu_1264_p1));
    sub_ln3459_fu_459_p2 <= std_logic_vector(signed(R_1_1_cast_fu_437_p1) - signed(zext_ln3459_fu_455_p1));
    sub_ln98_fu_323_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(gradx1_mat_4211_dout));
    sub_ln99_fu_345_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(grady1_mat_4214_dout));
    tmpQ_10_fu_1321_p13 <= (((((((((((icmp_ln3471_reg_1842_pp0_iter10_reg & xor_ln3471_reg_1865_pp0_iter10_reg) & xor_ln3471_1_reg_1953_pp0_iter10_reg) & xor_ln3471_2_reg_1969_pp0_iter10_reg) & xor_ln3471_3_reg_1996_pp0_iter10_reg) & xor_ln3471_4_reg_2010_pp0_iter10_reg) & xor_ln3471_5_reg_2035_pp0_iter10_reg) & xor_ln3471_6_reg_2047_pp0_iter10_reg) & xor_ln3471_7_reg_2070) & xor_ln3471_8_reg_2080) & xor_ln3471_9_fu_1310_p2) & ap_const_lv2_0);
    tmpQ_11_fu_1403_p14 <= ((((((((((((icmp_ln3471_reg_1842_pp0_iter10_reg & xor_ln3471_reg_1865_pp0_iter10_reg) & xor_ln3471_1_reg_1953_pp0_iter10_reg) & xor_ln3471_2_reg_1969_pp0_iter10_reg) & xor_ln3471_3_reg_1996_pp0_iter10_reg) & xor_ln3471_4_reg_2010_pp0_iter10_reg) & xor_ln3471_5_reg_2035_pp0_iter10_reg) & xor_ln3471_6_reg_2047_pp0_iter10_reg) & xor_ln3471_7_reg_2070) & xor_ln3471_8_reg_2080) & xor_ln3471_9_fu_1310_p2) & xor_ln3471_10_fu_1386_p2) & ap_const_lv2_0);
    tmpQ_12_fu_1486_p15 <= (((((((((((((icmp_ln3471_reg_1842_pp0_iter11_reg & xor_ln3471_reg_1865_pp0_iter11_reg) & xor_ln3471_1_reg_1953_pp0_iter11_reg) & xor_ln3471_2_reg_1969_pp0_iter11_reg) & xor_ln3471_3_reg_1996_pp0_iter11_reg) & xor_ln3471_4_reg_2010_pp0_iter11_reg) & xor_ln3471_5_reg_2035_pp0_iter11_reg) & xor_ln3471_6_reg_2047_pp0_iter11_reg) & xor_ln3471_7_reg_2070_pp0_iter11_reg) & xor_ln3471_8_reg_2080_pp0_iter11_reg) & xor_ln3471_9_reg_2101) & xor_ln3471_10_reg_2109) & xor_ln3471_11_fu_1475_p2) & ap_const_lv2_0);
    tmpQ_13_fu_1570_p16 <= ((((((((((((((icmp_ln3471_reg_1842_pp0_iter11_reg & xor_ln3471_reg_1865_pp0_iter11_reg) & xor_ln3471_1_reg_1953_pp0_iter11_reg) & xor_ln3471_2_reg_1969_pp0_iter11_reg) & xor_ln3471_3_reg_1996_pp0_iter11_reg) & xor_ln3471_4_reg_2010_pp0_iter11_reg) & xor_ln3471_5_reg_2035_pp0_iter11_reg) & xor_ln3471_6_reg_2047_pp0_iter11_reg) & xor_ln3471_7_reg_2070_pp0_iter11_reg) & xor_ln3471_8_reg_2080_pp0_iter11_reg) & xor_ln3471_9_reg_2101) & xor_ln3471_10_reg_2109) & xor_ln3471_11_fu_1475_p2) & xor_ln3471_12_fu_1553_p2) & ap_const_lv2_0);
    tmpQ_14_fu_1655_p17 <= (((((((((((((((icmp_ln3471_reg_1842_pp0_iter12_reg & xor_ln3471_reg_1865_pp0_iter12_reg) & xor_ln3471_1_reg_1953_pp0_iter12_reg) & xor_ln3471_2_reg_1969_pp0_iter12_reg) & xor_ln3471_3_reg_1996_pp0_iter12_reg) & xor_ln3471_4_reg_2010_pp0_iter12_reg) & xor_ln3471_5_reg_2035_pp0_iter12_reg) & xor_ln3471_6_reg_2047_pp0_iter12_reg) & xor_ln3471_7_reg_2070_pp0_iter12_reg) & xor_ln3471_8_reg_2080_pp0_iter12_reg) & xor_ln3471_9_reg_2101_pp0_iter12_reg) & xor_ln3471_10_reg_2109_pp0_iter12_reg) & xor_ln3471_11_reg_2128) & xor_ln3471_12_reg_2134) & xor_ln3471_13_fu_1644_p2) & ap_const_lv2_0);
    tmpQ_1_fu_524_p4 <= ((icmp_ln3471_fu_377_p2 & xor_ln3471_fu_497_p2) & ap_const_lv2_0);
    tmpQ_2_fu_1240_p12 <= ((((((((((icmp_ln3471_reg_1842_pp0_iter9_reg & xor_ln3471_reg_1865_pp0_iter9_reg) & xor_ln3471_1_reg_1953_pp0_iter9_reg) & xor_ln3471_2_reg_1969_pp0_iter9_reg) & xor_ln3471_3_reg_1996_pp0_iter9_reg) & xor_ln3471_4_reg_2010_pp0_iter9_reg) & xor_ln3471_5_reg_2035) & xor_ln3471_6_reg_2047) & xor_ln3471_7_fu_1149_p2) & xor_ln3471_8_fu_1227_p2) & ap_const_lv2_0);
    tmpQ_3_fu_704_p5 <= (((icmp_ln3471_reg_1842 & xor_ln3471_reg_1865) & xor_ln3471_1_fu_687_p2) & ap_const_lv2_0);
    tmpQ_4_fu_779_p6 <= ((((icmp_ln3471_reg_1842 & xor_ln3471_reg_1865) & xor_ln3471_1_fu_687_p2) & xor_ln3471_2_fu_762_p2) & ap_const_lv2_0);
    tmpQ_5_fu_854_p7 <= (((((icmp_ln3471_reg_1842_pp0_iter7_reg & xor_ln3471_reg_1865_pp0_iter7_reg) & xor_ln3471_1_reg_1953) & xor_ln3471_2_reg_1969) & xor_ln3471_3_fu_839_p2) & ap_const_lv2_0);
    tmpQ_6_fu_930_p8 <= ((((((icmp_ln3471_reg_1842_pp0_iter7_reg & xor_ln3471_reg_1865_pp0_iter7_reg) & xor_ln3471_1_reg_1953) & xor_ln3471_2_reg_1969) & xor_ln3471_3_fu_839_p2) & xor_ln3471_4_fu_913_p2) & ap_const_lv2_0);
    tmpQ_7_fu_1007_p9 <= (((((((icmp_ln3471_reg_1842_pp0_iter8_reg & xor_ln3471_reg_1865_pp0_iter8_reg) & xor_ln3471_1_reg_1953_pp0_iter8_reg) & xor_ln3471_2_reg_1969_pp0_iter8_reg) & xor_ln3471_3_reg_1996) & xor_ln3471_4_reg_2010) & xor_ln3471_5_fu_992_p2) & ap_const_lv2_0);
    tmpQ_8_fu_1085_p10 <= ((((((((icmp_ln3471_reg_1842_pp0_iter8_reg & xor_ln3471_reg_1865_pp0_iter8_reg) & xor_ln3471_1_reg_1953_pp0_iter8_reg) & xor_ln3471_2_reg_1969_pp0_iter8_reg) & xor_ln3471_3_reg_1996) & xor_ln3471_4_reg_2010) & xor_ln3471_5_fu_992_p2) & xor_ln3471_6_fu_1068_p2) & ap_const_lv2_0);
    tmpQ_9_fu_1164_p11 <= (((((((((icmp_ln3471_reg_1842_pp0_iter9_reg & xor_ln3471_reg_1865_pp0_iter9_reg) & xor_ln3471_1_reg_1953_pp0_iter9_reg) & xor_ln3471_2_reg_1969_pp0_iter9_reg) & xor_ln3471_3_reg_1996_pp0_iter9_reg) & xor_ln3471_4_reg_2010_pp0_iter9_reg) & xor_ln3471_5_reg_2035) & xor_ln3471_6_reg_2047) & xor_ln3471_7_fu_1149_p2) & ap_const_lv2_0);
    tmpQ_s_fu_441_p3 <= (icmp_ln3471_fu_377_p2 & ap_const_lv2_0);
    tmpR_1_fu_413_p2 <= std_logic_vector(unsigned(R_2_0_cast_fu_409_p1) + unsigned(ap_const_lv5_1C));
    tmp_11_fu_1060_p3 <= select_ln3450_6_fu_1053_p3(23 downto 23);
    tmp_13_cast_fu_383_p4 <= grp_fu_1767_p3(29 downto 28);
    tmp_13_fu_1219_p3 <= select_ln3450_8_fu_1212_p3(29 downto 29);
    tmp_15_fu_1378_p3 <= select_ln3450_10_fu_1371_p3(31 downto 31);
    tmp_17_fu_1545_p3 <= select_ln3450_12_fu_1538_p3(31 downto 31);
    tmp_19_fu_1709_p3 <= add_ln3469_14_fu_1703_p2(31 downto 31);
    tmp_1_fu_315_p3 <= gradx1_mat_4211_dout(15 downto 15);
    tmp_20_fu_1717_p3 <= sub_ln3459_14_fu_1687_p2(31 downto 31);
    tmp_2_cast_fu_503_p4 <= grp_fu_1767_p3(27 downto 26);
    tmp_2_fu_392_p4 <= grp_fu_1767_p3(31 downto 30);
    tmp_3_fu_337_p3 <= grady1_mat_4214_dout(15 downto 15);
    tmp_4_fu_368_p4 <= grp_fu_1767_p3(31 downto 30);
    tmp_5_fu_489_p3 <= select_ln3450_fu_481_p3(5 downto 5);
    tmp_6_fu_679_p3 <= select_ln3450_1_fu_674_p3(8 downto 8);
    tmp_7_fu_754_p3 <= select_ln3450_2_fu_746_p3(11 downto 11);
    tmp_9_fu_905_p3 <= select_ln3450_4_fu_898_p3(17 downto 17);
    tmp_fu_419_p4 <= tmpR_1_fu_413_p2(4 downto 2);
    trunc_ln67_fu_365_p1 <= grp_fu_1767_p3(2 - 1 downto 0);
    xor_ln3471_10_fu_1386_p2 <= (tmp_15_fu_1378_p3 xor ap_const_lv1_1);
    xor_ln3471_11_fu_1475_p2 <= (tmp_16_reg_2117 xor ap_const_lv1_1);
    xor_ln3471_12_fu_1553_p2 <= (tmp_17_fu_1545_p3 xor ap_const_lv1_1);
    xor_ln3471_13_fu_1644_p2 <= (tmp_18_reg_2140 xor ap_const_lv1_1);
    xor_ln3471_14_fu_1732_p2 <= (select_ln3450_14_fu_1725_p3 xor ap_const_lv1_1);
    xor_ln3471_1_fu_687_p2 <= (tmp_6_fu_679_p3 xor ap_const_lv1_1);
    xor_ln3471_2_fu_762_p2 <= (tmp_7_fu_754_p3 xor ap_const_lv1_1);
    xor_ln3471_3_fu_839_p2 <= (tmp_8_reg_1990 xor ap_const_lv1_1);
    xor_ln3471_4_fu_913_p2 <= (tmp_9_fu_905_p3 xor ap_const_lv1_1);
    xor_ln3471_5_fu_992_p2 <= (tmp_10_reg_2029 xor ap_const_lv1_1);
    xor_ln3471_6_fu_1068_p2 <= (tmp_11_fu_1060_p3 xor ap_const_lv1_1);
    xor_ln3471_7_fu_1149_p2 <= (tmp_12_reg_2064 xor ap_const_lv1_1);
    xor_ln3471_8_fu_1227_p2 <= (tmp_13_fu_1219_p3 xor ap_const_lv1_1);
    xor_ln3471_9_fu_1310_p2 <= (tmp_14_reg_2090 xor ap_const_lv1_1);
    xor_ln3471_fu_497_p2 <= (tmp_5_fu_489_p3 xor ap_const_lv1_1);
    zext_ln3459_10_fu_1345_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_10_fu_1339_p2),32));
    zext_ln3459_11_fu_1429_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_11_fu_1423_p2),32));
    zext_ln3459_12_fu_1512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_12_fu_1506_p2),32));
    zext_ln3459_13_fu_1598_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_13_fu_1592_p2),32));
    zext_ln3459_14_fu_1683_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_14_fu_1677_p2),32));
    zext_ln3459_1_fu_540_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_1_fu_534_p2),9));
    zext_ln3459_2_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_2_fu_714_p2),12));
    zext_ln3459_3_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_3_fu_791_p2),15));
    zext_ln3459_4_fu_872_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_4_fu_866_p2),18));
    zext_ln3459_5_fu_950_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_5_fu_944_p2),21));
    zext_ln3459_6_fu_1027_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_6_fu_1021_p2),24));
    zext_ln3459_7_fu_1107_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_7_fu_1101_p2),27));
    zext_ln3459_8_fu_1186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_8_fu_1180_p2),30));
    zext_ln3459_9_fu_1264_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_9_fu_1258_p2),32));
    zext_ln3459_fu_455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_fu_449_p2),6));
    zext_ln3469_10_fu_1361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_10_fu_1355_p2),32));
    zext_ln3469_11_fu_1445_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_11_fu_1439_p2),32));
    zext_ln3469_12_fu_1528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_12_fu_1522_p2),32));
    zext_ln3469_13_fu_1614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_13_fu_1608_p2),32));
    zext_ln3469_14_fu_1699_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_14_fu_1693_p2),32));
    zext_ln3469_1_fu_556_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_1_fu_550_p2),9));
    zext_ln3469_2_fu_736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_2_fu_730_p2),12));
    zext_ln3469_3_fu_813_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_3_fu_807_p2),15));
    zext_ln3469_4_fu_888_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_4_fu_882_p2),18));
    zext_ln3469_5_fu_966_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_5_fu_960_p2),21));
    zext_ln3469_6_fu_1043_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_6_fu_1037_p2),24));
    zext_ln3469_7_fu_1123_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_7_fu_1117_p2),27));
    zext_ln3469_8_fu_1202_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_8_fu_1196_p2),30));
    zext_ln3469_9_fu_1280_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_9_fu_1274_p2),32));
    zext_ln3469_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_fu_465_p2),6));
end behav;
