-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC;
    p_kernel_val_0_V_1_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_0_V_2_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_1_V_0_read : IN STD_LOGIC_VECTOR (2 downto 0);
    p_kernel_val_1_V_2_read : IN STD_LOGIC_VECTOR (3 downto 0);
    p_kernel_val_2_V_0_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_2_V_1_read : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFD : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111101";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond388_i_reg_1528 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond388_i_reg_1528_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1537 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1537_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1473 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1468 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal or_cond_i_reg_1554 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1554_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_2_reg_323 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_334_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1396 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_340_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_1401 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg393_i_fu_346_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg393_i_reg_1406 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_352_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1413 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_364_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_1418 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP2_V_0_1_cast_fu_370_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_0_1_cast_reg_1425 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_0_2_cast_fu_374_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_0_2_cast_reg_1430 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_1_cast_fu_378_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_1_cast_reg_1435 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_1_2_cast_fu_382_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_1_2_cast_reg_1440 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_2_cast_fu_386_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_2_cast_reg_1445 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_2_1_cast_fu_390_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_2_1_cast_reg_1450 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_fu_400_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_1455 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_fu_411_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_reg_1463 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_5_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond389_i_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_1478 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_129_1_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_129_1_reg_1482 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_1486 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_1_fu_652_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_reg_1493 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_1_fu_668_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_1_reg_1498 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_2_fu_684_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_2_reg_1503 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_85_0_not_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_0_not_reg_1508 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_23_fu_701_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_reg_1513 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_24_fu_709_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_24_reg_1518 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_32_fu_717_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_32_reg_1523 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond388_i_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op171_read_state6 : BOOLEAN;
    signal ap_predicate_op182_read_state6 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond388_i_reg_1528_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_726_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal or_cond_i_i_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_837_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_reg_1541 : STD_LOGIC_VECTOR (31 downto 0);
    signal brmerge_fu_845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1547 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1547_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1554_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1554_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1554_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1558 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_37_fu_865_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_37_reg_1564 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_4_addr_reg_1571 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1577 : STD_LOGIC_VECTOR (10 downto 0);
    signal src_kernel_win_0_va_6_fu_988_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1583 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_1006_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1590 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_1024_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_reg_1596 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1287_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_10_0_1_reg_1601 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_10_1_1_fu_1103_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_10_1_1_reg_1606 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_7_1_2_fu_1112_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_7_1_2_reg_1611 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_44_fu_1136_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_44_reg_1616 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp22_fu_1166_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp22_reg_1621 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp24_fu_1172_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp24_reg_1626 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp26_fu_1178_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp26_reg_1631 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_1279_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_1636 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter2_state6 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_312 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_25_fu_859_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_138 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_142 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_898_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_916_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_934_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_358_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_394_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_422_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_14_fu_455_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_461_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_486_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_fu_494_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_p2_i425_i_fu_500_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_assign_6_1_fu_518_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_524_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_155_1_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_549_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_1_fu_557_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_p2_i425_i_1_fu_563_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_assign_6_2_fu_581_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_587_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_155_2_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_612_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_2_fu_620_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_p2_i425_i_2_fu_626_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_fu_513_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i424_i_fu_480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_p_assign_8_fu_644_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_165_1_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_1_fu_576_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i424_i_1_fu_543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_1_p_assig_fu_660_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_165_2_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_2_fu_639_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i424_i_2_fu_606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_2_p_assig_fu_676_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_s_fu_697_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_10_1_fu_705_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_10_2_fu_713_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_732_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal ImagLoc_x_fu_748_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_754_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev3_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_779_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_787_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_p2_i_i_fu_793_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_assign_2_fu_806_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_not_fu_819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_3_fu_811_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp1_fu_742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_assign_1_fu_855_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_887_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_fu_905_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_fu_923_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_fu_977_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_995_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_fu_1013_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal OP1_V_0_cast_fu_1037_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_7_fu_1041_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1294_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_7_1_fu_1087_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_V_7_1_fu_1087_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_7_1_fu_1087_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_173_1_cast_cast_fu_1092_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_10_0_2_cast_fu_1080_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_7_1_2_fu_1112_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_7_1_2_fu_1112_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_42_fu_1100_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_41_fu_1096_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_7_2_fu_1131_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_V_7_2_fu_1131_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_7_2_fu_1131_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_7_2_1_fu_1144_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_V_7_2_1_fu_1144_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_7_2_1_fu_1144_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_173_2_2_cast_cas_fu_1153_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp23_fu_1156_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp23_cast_fu_1162_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_35_fu_1121_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_43_fu_1117_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_45_fu_1149_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp21_fu_1207_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp22_cast_fu_1211_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_2_fu_1214_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp25_fu_1228_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isneg_fu_1220_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_1237_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal not_i_i_i_fu_1253_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_fu_1247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_1259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_61_fu_1273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i_cast_fu_1265_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_1_fu_1232_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1287_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1287_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1294_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1294_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1287_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1294_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_7_1_2_fu_1112_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_7_1_fu_1087_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_7_2_1_fu_1144_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_7_2_fu_1131_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_condition_392 : BOOLEAN;
    signal ap_condition_386 : BOOLEAN;

    component sobelFilter_mux_3hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sobelFilter_mac_mibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component sobelFilter_mac_mjbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component Filter2D_k_buf_0_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_k_buf_0_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_addr_reg_1558,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Filter2D_k_buf_0_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_addr_reg_1571,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Filter2D_k_buf_0_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_addr_reg_1577,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    sobelFilter_mux_3hbi_U39 : component sobelFilter_mux_3hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_162,
        din1 => right_border_buf_0_1_fu_166,
        din2 => ap_const_lv8_0,
        din3 => tmp_37_reg_1564,
        dout => tmp_26_fu_887_p5);

    sobelFilter_mux_3hbi_U40 : component sobelFilter_mux_3hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_3_fu_174,
        din1 => right_border_buf_0_4_fu_178,
        din2 => ap_const_lv8_0,
        din3 => tmp_37_reg_1564,
        dout => tmp_27_fu_905_p5);

    sobelFilter_mux_3hbi_U41 : component sobelFilter_mux_3hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_5_fu_182,
        din1 => right_border_buf_0_2_fu_170,
        din2 => ap_const_lv8_0,
        din3 => tmp_37_reg_1564,
        dout => tmp_28_fu_923_p5);

    sobelFilter_mux_3hbi_U42 : component sobelFilter_mux_3hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_898_p3,
        din1 => col_buf_0_val_1_0_fu_916_p3,
        din2 => col_buf_0_val_2_0_fu_934_p3,
        din3 => tmp_23_reg_1513,
        dout => tmp_29_fu_977_p5);

    sobelFilter_mux_3hbi_U43 : component sobelFilter_mux_3hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_898_p3,
        din1 => col_buf_0_val_1_0_fu_916_p3,
        din2 => col_buf_0_val_2_0_fu_934_p3,
        din3 => tmp_24_reg_1518,
        dout => tmp_30_fu_995_p5);

    sobelFilter_mux_3hbi_U44 : component sobelFilter_mux_3hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_898_p3,
        din1 => col_buf_0_val_1_0_fu_916_p3,
        din2 => col_buf_0_val_2_0_fu_934_p3,
        din3 => tmp_32_reg_1523,
        dout => tmp_31_fu_1013_p5);

    sobelFilter_mac_mibs_U45 : component sobelFilter_mac_mibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 9,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_1287_p0,
        din1 => grp_fu_1287_p1,
        din2 => r_V_7_fu_1041_p2,
        dout => grp_fu_1287_p3);

    sobelFilter_mac_mjbC_U46 : component sobelFilter_mac_mjbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_1294_p0,
        din1 => grp_fu_1294_p1,
        din2 => p_Val2_10_0_1_reg_1601,
        dout => grp_fu_1294_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond388_i_fu_721_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter2_state6)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_2_reg_323_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_fu_721_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_2_reg_323 <= j_V_fu_726_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                t_V_2_reg_323 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    t_V_reg_312_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                t_V_reg_312 <= i_V_reg_1463;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                t_V_reg_312 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                OP2_V_0_1_cast_reg_1425 <= OP2_V_0_1_cast_fu_370_p1;
                OP2_V_0_2_cast_reg_1430 <= OP2_V_0_2_cast_fu_374_p1;
                    OP2_V_1_2_cast_reg_1440(3 downto 0) <= OP2_V_1_2_cast_fu_382_p1(3 downto 0);
                OP2_V_1_cast_reg_1435 <= OP2_V_1_cast_fu_378_p1;
                    OP2_V_2_1_cast_reg_1450(2 downto 0) <= OP2_V_2_1_cast_fu_390_p1(2 downto 0);
                OP2_V_2_cast_reg_1445 <= OP2_V_2_cast_fu_386_p1;
                p_neg393_i_reg_1406 <= p_neg393_i_fu_346_p2;
                tmp_1_reg_1401 <= tmp_1_fu_340_p2;
                tmp_2_reg_1413 <= tmp_2_fu_352_p2;
                    tmp_4_reg_1418(31 downto 1) <= tmp_4_fu_364_p2(31 downto 1);
                    tmp_8_reg_1455(31 downto 1) <= tmp_8_fu_400_p2(31 downto 1);
                tmp_s_reg_1396 <= tmp_s_fu_334_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_fu_721_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1547 <= brmerge_fu_845_p2;
                or_cond_i_i_reg_1537 <= or_cond_i_i_fu_773_p2;
                or_cond_i_reg_1554 <= or_cond_i_fu_850_p2;
                x_reg_1541 <= x_fu_837_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1547_pp0_iter1_reg <= brmerge_reg_1547;
                exitcond388_i_reg_1528 <= exitcond388_i_fu_721_p2;
                exitcond388_i_reg_1528_pp0_iter1_reg <= exitcond388_i_reg_1528;
                or_cond_i_i_reg_1537_pp0_iter1_reg <= or_cond_i_i_reg_1537;
                or_cond_i_reg_1554_pp0_iter1_reg <= or_cond_i_reg_1554;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond388_i_reg_1528_pp0_iter2_reg <= exitcond388_i_reg_1528_pp0_iter1_reg;
                or_cond_i_reg_1554_pp0_iter2_reg <= or_cond_i_reg_1554_pp0_iter1_reg;
                or_cond_i_reg_1554_pp0_iter3_reg <= or_cond_i_reg_1554_pp0_iter2_reg;
                or_cond_i_reg_1554_pp0_iter4_reg <= or_cond_i_reg_1554_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1463 <= i_V_fu_411_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond389_i_fu_406_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_1473 <= icmp_fu_432_p2;
                tmp_129_1_reg_1482 <= tmp_129_1_fu_444_p2;
                tmp_12_reg_1478 <= tmp_12_fu_438_p2;
                tmp_13_reg_1486 <= tmp_13_fu_450_p2;
                tmp_5_reg_1468 <= tmp_5_fu_417_p2;
                y_1_1_reg_1498 <= y_1_1_fu_668_p3;
                y_1_2_reg_1503 <= y_1_2_fu_684_p3;
                y_1_reg_1493 <= y_1_fu_652_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_reg_1528 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_3_addr_reg_1558 <= tmp_25_fu_859_p1(11 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1571 <= tmp_25_fu_859_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1577 <= tmp_25_fu_859_p1(11 - 1 downto 0);
                tmp_37_reg_1564 <= tmp_37_fu_865_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1554_pp0_iter1_reg = ap_const_lv1_1) and (exitcond388_i_reg_1528_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_10_0_1_reg_1601 <= grp_fu_1287_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1554_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_10_1_1_reg_1606 <= p_Val2_10_1_1_fu_1103_p2;
                r_V_7_1_2_reg_1611 <= r_V_7_1_2_fu_1112_p2;
                tmp22_reg_1621 <= tmp22_fu_1166_p2;
                tmp24_reg_1626 <= tmp24_fu_1172_p2;
                tmp26_reg_1631 <= tmp26_fu_1178_p2;
                tmp_44_reg_1616 <= tmp_44_fu_1136_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1554_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_s_reg_1636 <= p_Val2_s_fu_1279_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op182_read_state6 = ap_const_boolean_1))) then
                right_border_buf_0_1_fu_166 <= right_border_buf_0_s_fu_162;
                right_border_buf_0_2_fu_170 <= right_border_buf_0_5_fu_182;
                right_border_buf_0_3_fu_174 <= col_buf_0_val_1_0_fu_916_p3;
                right_border_buf_0_4_fu_178 <= right_border_buf_0_3_fu_174;
                right_border_buf_0_5_fu_182 <= col_buf_0_val_2_0_fu_934_p3;
                right_border_buf_0_s_fu_162 <= col_buf_0_val_0_0_fu_898_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_reg_1528_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_1_fu_142 <= src_kernel_win_0_va_fu_138;
                src_kernel_win_0_va_2_fu_146 <= src_kernel_win_0_va_7_reg_1590;
                src_kernel_win_0_va_3_fu_150 <= src_kernel_win_0_va_2_fu_146;
                src_kernel_win_0_va_fu_138 <= src_kernel_win_0_va_6_reg_1583;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_reg_1528_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_4_fu_154 <= src_kernel_win_0_va_8_fu_1024_p3;
                src_kernel_win_0_va_5_fu_158 <= src_kernel_win_0_va_4_fu_154;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_reg_1528_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_6_reg_1583 <= src_kernel_win_0_va_6_fu_988_p3;
                src_kernel_win_0_va_7_reg_1590 <= src_kernel_win_0_va_7_fu_1006_p3;
                src_kernel_win_0_va_8_reg_1596 <= src_kernel_win_0_va_8_fu_1024_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_13_reg_1486 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_23_reg_1513 <= tmp_23_fu_701_p1;
                tmp_24_reg_1518 <= tmp_24_fu_709_p1;
                tmp_32_reg_1523 <= tmp_32_fu_717_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                tmp_85_0_not_reg_1508 <= tmp_85_0_not_fu_692_p2;
            end if;
        end if;
    end process;
    tmp_4_reg_1418(0) <= '0';
    OP2_V_1_2_cast_reg_1440(11 downto 4) <= "00000000";
    OP2_V_2_1_cast_reg_1450(10 downto 3) <= "00000000";
    tmp_8_reg_1455(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_CS_fsm_state2, exitcond389_i_fu_406_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond389_i_fu_406_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ImagLoc_x_fu_748_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_2_reg_323));
    OP1_V_0_cast_fu_1037_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_5_fu_158),9));
        OP2_V_0_1_cast_fu_370_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_1_read),10));

        OP2_V_0_2_cast_fu_374_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_2_read),10));

    OP2_V_1_2_cast_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_1_V_2_read),12));
        OP2_V_1_cast_fu_378_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_0_read),11));

    OP2_V_2_1_cast_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_2_V_1_read),11));
        OP2_V_2_cast_fu_386_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_0_read),10));

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(4);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, or_cond_i_reg_1554_pp0_iter4_reg, ap_predicate_op171_read_state6, ap_predicate_op182_read_state6)
    begin
                ap_block_pp0_stage0_01001 <= (((or_cond_i_reg_1554_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op182_read_state6 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op171_read_state6 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, or_cond_i_reg_1554_pp0_iter4_reg, ap_predicate_op171_read_state6, ap_predicate_op182_read_state6)
    begin
                ap_block_pp0_stage0_11001 <= (((or_cond_i_reg_1554_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op182_read_state6 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op171_read_state6 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, or_cond_i_reg_1554_pp0_iter4_reg, ap_predicate_op171_read_state6, ap_predicate_op182_read_state6)
    begin
                ap_block_pp0_stage0_subdone <= (((or_cond_i_reg_1554_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op182_read_state6 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op171_read_state6 = ap_const_boolean_1)))));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter2_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op171_read_state6, ap_predicate_op182_read_state6)
    begin
                ap_block_state6_pp0_stage0_iter2 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op182_read_state6 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op171_read_state6 = ap_const_boolean_1)));
    end process;

        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp0_stage0_iter5_assign_proc : process(p_dst_data_stream_V_full_n, or_cond_i_reg_1554_pp0_iter4_reg)
    begin
                ap_block_state9_pp0_stage0_iter5 <= ((or_cond_i_reg_1554_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_386_assign_proc : process(exitcond388_i_reg_1528_pp0_iter1_reg, or_cond_i_i_reg_1537_pp0_iter1_reg, icmp_reg_1473, tmp_12_reg_1478)
    begin
                ap_condition_386 <= ((tmp_12_reg_1478 = ap_const_lv1_1) and (or_cond_i_i_reg_1537_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1473 = ap_const_lv1_0) and (exitcond388_i_reg_1528_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_392_assign_proc : process(exitcond388_i_reg_1528_pp0_iter1_reg, or_cond_i_i_reg_1537_pp0_iter1_reg, icmp_reg_1473, tmp_129_1_reg_1482)
    begin
                ap_condition_392 <= ((tmp_129_1_reg_1482 = ap_const_lv1_1) and (or_cond_i_i_reg_1537_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1473 = ap_const_lv1_0) and (exitcond388_i_reg_1528_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter2_state6_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter2_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter2_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond389_i_fu_406_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((exitcond389_i_fu_406_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op171_read_state6_assign_proc : process(exitcond388_i_reg_1528_pp0_iter1_reg, or_cond_i_i_reg_1537_pp0_iter1_reg, icmp_reg_1473)
    begin
                ap_predicate_op171_read_state6 <= ((or_cond_i_i_reg_1537_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1473 = ap_const_lv1_0) and (exitcond388_i_reg_1528_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op182_read_state6_assign_proc : process(exitcond388_i_reg_1528_pp0_iter1_reg, or_cond_i_i_reg_1537_pp0_iter1_reg, icmp_reg_1473, tmp_5_reg_1468)
    begin
                ap_predicate_op182_read_state6 <= ((tmp_5_reg_1468 = ap_const_lv1_1) and (icmp_reg_1473 = ap_const_lv1_1) and (or_cond_i_i_reg_1537_pp0_iter1_reg = ap_const_lv1_1) and (exitcond388_i_reg_1528_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond389_i_fu_406_p2)
    begin
        if (((exitcond389_i_fu_406_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_845_p2 <= (tmp_9_fu_768_p2 or tmp_85_0_not_reg_1508);
    col_assign_1_fu_855_p2 <= std_logic_vector(unsigned(tmp_2_reg_1413) - unsigned(x_reg_1541));
    col_buf_0_val_0_0_fu_898_p3 <= 
        k_buf_0_val_3_q0 when (brmerge_reg_1547_pp0_iter1_reg(0) = '1') else 
        tmp_26_fu_887_p5;
    col_buf_0_val_1_0_fu_916_p3 <= 
        k_buf_0_val_4_q0 when (brmerge_reg_1547_pp0_iter1_reg(0) = '1') else 
        tmp_27_fu_905_p5;
    col_buf_0_val_2_0_fu_934_p3 <= 
        k_buf_0_val_5_q0 when (brmerge_reg_1547_pp0_iter1_reg(0) = '1') else 
        tmp_28_fu_923_p5;
    exitcond388_i_fu_721_p2 <= "1" when (t_V_2_reg_323 = tmp_s_reg_1396) else "0";
    exitcond389_i_fu_406_p2 <= "1" when (t_V_reg_312 = tmp_1_reg_1401) else "0";
    grp_fu_1287_p0 <= OP2_V_0_1_cast_reg_1425(2 - 1 downto 0);
    grp_fu_1287_p1 <= grp_fu_1287_p10(8 - 1 downto 0);
    grp_fu_1287_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_4_fu_154),10));
    grp_fu_1294_p0 <= OP2_V_0_2_cast_reg_1430(2 - 1 downto 0);
    grp_fu_1294_p1 <= grp_fu_1294_p10(8 - 1 downto 0);
    grp_fu_1294_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_8_reg_1596),10));
    i_V_fu_411_p2 <= std_logic_vector(unsigned(t_V_reg_312) + unsigned(ap_const_lv32_1));
    icmp1_fu_742_p2 <= "0" when (tmp_33_fu_732_p4 = ap_const_lv31_0) else "1";
    icmp_fu_432_p2 <= "0" when (tmp_10_fu_422_p4 = ap_const_lv31_0) else "1";
    isneg_fu_1220_p3 <= p_Val2_2_fu_1214_p2(11 downto 11);
    j_V_fu_726_p2 <= std_logic_vector(unsigned(t_V_2_reg_323) + unsigned(ap_const_lv32_1));
    k_buf_0_val_3_address0 <= tmp_25_fu_859_p1(11 - 1 downto 0);

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond388_i_reg_1528_pp0_iter1_reg, or_cond_i_i_reg_1537_pp0_iter1_reg, icmp_reg_1473, tmp_12_reg_1478, ap_predicate_op182_read_state6, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_12_reg_1478 = ap_const_lv1_1) and (or_cond_i_i_reg_1537_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1473 = ap_const_lv1_0) and (exitcond388_i_reg_1528_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op182_read_state6 = ap_const_boolean_1)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond388_i_reg_1528_pp0_iter1_reg, or_cond_i_i_reg_1537_pp0_iter1_reg, icmp_reg_1473, tmp_12_reg_1478, ap_predicate_op182_read_state6, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_12_reg_1478 = ap_const_lv1_1) and (or_cond_i_i_reg_1537_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1473 = ap_const_lv1_0) and (exitcond388_i_reg_1528_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op182_read_state6 = ap_const_boolean_1)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_25_fu_859_p1(11 - 1 downto 0);

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond388_i_reg_1528_pp0_iter1_reg, or_cond_i_i_reg_1537_pp0_iter1_reg, icmp_reg_1473, tmp_129_1_reg_1482, ap_predicate_op182_read_state6, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_129_1_reg_1482 = ap_const_lv1_1) and (or_cond_i_i_reg_1537_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1473 = ap_const_lv1_0) and (exitcond388_i_reg_1528_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op182_read_state6 = ap_const_boolean_1)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(p_src_data_stream_V_dout, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_predicate_op182_read_state6, k_buf_0_val_3_q0, ap_condition_392)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op182_read_state6 = ap_const_boolean_1)) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_q0;
            elsif ((ap_const_boolean_1 = ap_condition_392)) then 
                k_buf_0_val_4_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond388_i_reg_1528_pp0_iter1_reg, or_cond_i_i_reg_1537_pp0_iter1_reg, icmp_reg_1473, tmp_129_1_reg_1482, ap_predicate_op182_read_state6, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_129_1_reg_1482 = ap_const_lv1_1) and (or_cond_i_i_reg_1537_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1473 = ap_const_lv1_0) and (exitcond388_i_reg_1528_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op182_read_state6 = ap_const_boolean_1)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_25_fu_859_p1(11 - 1 downto 0);

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond388_i_reg_1528_pp0_iter1_reg, or_cond_i_i_reg_1537_pp0_iter1_reg, icmp_reg_1473, tmp_12_reg_1478, ap_predicate_op182_read_state6, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_12_reg_1478 = ap_const_lv1_1) and (or_cond_i_i_reg_1537_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1473 = ap_const_lv1_0) and (exitcond388_i_reg_1528_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op182_read_state6 = ap_const_boolean_1)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(p_src_data_stream_V_dout, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_predicate_op182_read_state6, k_buf_0_val_4_q0, ap_condition_386)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op182_read_state6 = ap_const_boolean_1)) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_q0;
            elsif ((ap_const_boolean_1 = ap_condition_386)) then 
                k_buf_0_val_5_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond388_i_reg_1528_pp0_iter1_reg, or_cond_i_i_reg_1537_pp0_iter1_reg, icmp_reg_1473, tmp_12_reg_1478, ap_predicate_op182_read_state6, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_12_reg_1478 = ap_const_lv1_1) and (or_cond_i_i_reg_1537_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1473 = ap_const_lv1_0) and (exitcond388_i_reg_1528_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op182_read_state6 = ap_const_boolean_1)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    not_i_i_i_fu_1253_p2 <= "0" when (tmp_38_fu_1237_p4 = ap_const_lv4_0) else "1";
    or_cond_i424_i_1_fu_543_p2 <= (tmp_155_1_fu_538_p2 and rev1_fu_532_p2);
    or_cond_i424_i_2_fu_606_p2 <= (tmp_155_2_fu_601_p2 and rev2_fu_595_p2);
    or_cond_i424_i_fu_480_p2 <= (tmp_16_fu_475_p2 and rev_fu_469_p2);
    or_cond_i_fu_850_p2 <= (icmp_reg_1473 and icmp1_fu_742_p2);
    or_cond_i_i_fu_773_p2 <= (tmp_9_fu_768_p2 and rev3_fu_762_p2);
    overflow_fu_1259_p2 <= (tmp_i_i_fu_1247_p2 and not_i_i_i_fu_1253_p2);
        p_Val2_10_0_2_cast_fu_1080_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1294_p3),12));

    p_Val2_10_1_1_fu_1103_p2 <= std_logic_vector(signed(tmp_173_1_cast_cast_fu_1092_p1) + signed(p_Val2_10_0_2_cast_fu_1080_p1));
    p_Val2_1_fu_1232_p2 <= std_logic_vector(unsigned(tmp24_reg_1626) + unsigned(tmp25_fu_1228_p2));
    p_Val2_2_fu_1214_p2 <= std_logic_vector(unsigned(tmp21_fu_1207_p2) + unsigned(tmp22_cast_fu_1211_p1));
    p_Val2_s_fu_1279_p3 <= 
        p_mux_i_i_cast_fu_1265_p3 when (tmp_i_i_61_fu_1273_p2(0) = '1') else 
        p_Val2_1_fu_1232_p2;
    p_assign_1_fu_787_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) - unsigned(t_V_2_reg_323));
    p_assign_2_fu_806_p2 <= std_logic_vector(unsigned(tmp_8_reg_1455) - unsigned(p_p2_i_i_fu_793_p3));
    p_assign_3_fu_811_p3 <= 
        ImagLoc_x_fu_748_p2 when (or_cond_i_i_fu_773_p2(0) = '1') else 
        p_assign_2_fu_806_p2;
    p_assign_6_1_fu_518_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(t_V_reg_312));
    p_assign_6_2_fu_581_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFD) + signed(t_V_reg_312));
    p_assign_7_1_fu_557_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) - unsigned(t_V_reg_312));
    p_assign_7_2_fu_620_p2 <= std_logic_vector(unsigned(ap_const_lv32_3) - unsigned(t_V_reg_312));
    p_assign_7_fu_494_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) - unsigned(t_V_reg_312));
    p_assign_8_1_fu_576_p2 <= std_logic_vector(unsigned(tmp_4_reg_1418) - unsigned(p_p2_i425_i_1_fu_563_p3));
    p_assign_8_2_fu_639_p2 <= std_logic_vector(unsigned(tmp_4_reg_1418) - unsigned(p_p2_i425_i_2_fu_626_p3));
    p_assign_8_fu_513_p2 <= std_logic_vector(unsigned(tmp_4_reg_1418) - unsigned(p_p2_i425_i_fu_500_p3));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, or_cond_i_reg_1554_pp0_iter4_reg)
    begin
        if (((or_cond_i_reg_1554_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= p_Val2_s_reg_1636;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, or_cond_i_reg_1554_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((or_cond_i_reg_1554_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_mux_i_i_cast_fu_1265_p3 <= 
        ap_const_lv8_FF when (tmp_i_i_fu_1247_p2(0) = '1') else 
        ap_const_lv8_0;
    p_neg393_i_fu_346_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(p_src_rows_V_read));
    p_p2_i425_i_1_fu_563_p3 <= 
        p_assign_7_1_fu_557_p2 when (tmp_20_fu_549_p3(0) = '1') else 
        p_assign_6_1_fu_518_p2;
    p_p2_i425_i_1_p_assig_fu_660_p3 <= 
        p_p2_i425_i_1_fu_563_p3 when (tmp_165_1_fu_571_p2(0) = '1') else 
        p_assign_8_1_fu_576_p2;
    p_p2_i425_i_2_fu_626_p3 <= 
        p_assign_7_2_fu_620_p2 when (tmp_22_fu_612_p3(0) = '1') else 
        p_assign_6_2_fu_581_p2;
    p_p2_i425_i_2_p_assig_fu_676_p3 <= 
        p_p2_i425_i_2_fu_626_p3 when (tmp_165_2_fu_634_p2(0) = '1') else 
        p_assign_8_2_fu_639_p2;
    p_p2_i425_i_fu_500_p3 <= 
        p_assign_7_fu_494_p2 when (tmp_17_fu_486_p3(0) = '1') else 
        tmp_14_fu_455_p2;
    p_p2_i425_i_p_assign_8_fu_644_p3 <= 
        p_p2_i425_i_fu_500_p3 when (tmp_18_fu_508_p2(0) = '1') else 
        p_assign_8_fu_513_p2;
    p_p2_i_i_fu_793_p3 <= 
        p_assign_1_fu_787_p2 when (tmp_36_fu_779_p3(0) = '1') else 
        ImagLoc_x_fu_748_p2;

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, exitcond388_i_reg_1528_pp0_iter1_reg, or_cond_i_i_reg_1537_pp0_iter1_reg, icmp_reg_1473, tmp_5_reg_1468)
    begin
        if ((((tmp_5_reg_1468 = ap_const_lv1_1) and (icmp_reg_1473 = ap_const_lv1_1) and (or_cond_i_i_reg_1537_pp0_iter1_reg = ap_const_lv1_1) and (exitcond388_i_reg_1528_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((or_cond_i_i_reg_1537_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1473 = ap_const_lv1_0) and (exitcond388_i_reg_1528_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op171_read_state6, ap_predicate_op182_read_state6, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op182_read_state6 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op171_read_state6 = ap_const_boolean_1)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_7_1_2_fu_1112_p0 <= OP2_V_1_2_cast_reg_1440(4 - 1 downto 0);
    r_V_7_1_2_fu_1112_p1 <= r_V_7_1_2_fu_1112_p10(8 - 1 downto 0);
    r_V_7_1_2_fu_1112_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_7_reg_1590),12));
    r_V_7_1_2_fu_1112_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_7_1_2_fu_1112_p0) * unsigned(r_V_7_1_2_fu_1112_p1), 12));
    r_V_7_1_fu_1087_p0 <= OP2_V_1_cast_reg_1435(3 - 1 downto 0);
    r_V_7_1_fu_1087_p1 <= r_V_7_1_fu_1087_p10(8 - 1 downto 0);
    r_V_7_1_fu_1087_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_3_fu_150),11));
    r_V_7_1_fu_1087_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_7_1_fu_1087_p0) * signed('0' &r_V_7_1_fu_1087_p1))), 11));
    r_V_7_2_1_fu_1144_p0 <= OP2_V_2_1_cast_reg_1450(3 - 1 downto 0);
    r_V_7_2_1_fu_1144_p1 <= r_V_7_2_1_fu_1144_p10(8 - 1 downto 0);
    r_V_7_2_1_fu_1144_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_fu_138),11));
    r_V_7_2_1_fu_1144_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_7_2_1_fu_1144_p0) * unsigned(r_V_7_2_1_fu_1144_p1), 11));
    r_V_7_2_fu_1131_p0 <= OP2_V_2_cast_reg_1445(2 - 1 downto 0);
    r_V_7_2_fu_1131_p1 <= r_V_7_2_fu_1131_p10(8 - 1 downto 0);
    r_V_7_2_fu_1131_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_1_fu_142),10));
    r_V_7_2_fu_1131_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_7_2_fu_1131_p0) * signed('0' &r_V_7_2_fu_1131_p1))), 10));
    r_V_7_fu_1041_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(OP1_V_0_cast_fu_1037_p1));
    rev1_fu_532_p2 <= (tmp_19_fu_524_p3 xor ap_const_lv1_1);
    rev2_fu_595_p2 <= (tmp_21_fu_587_p3 xor ap_const_lv1_1);
    rev3_fu_762_p2 <= (tmp_34_fu_754_p3 xor ap_const_lv1_1);
    rev_fu_469_p2 <= (tmp_15_fu_461_p3 xor ap_const_lv1_1);
    row_assign_10_1_fu_705_p2 <= std_logic_vector(unsigned(p_neg393_i_reg_1406) - unsigned(y_1_1_reg_1498));
    row_assign_10_2_fu_713_p2 <= std_logic_vector(unsigned(p_neg393_i_reg_1406) - unsigned(y_1_2_reg_1503));
    row_assign_s_fu_697_p2 <= std_logic_vector(unsigned(p_neg393_i_reg_1406) - unsigned(y_1_reg_1493));
    sel_tmp7_fu_825_p2 <= (tmp_9_not_fu_819_p2 or tmp_34_fu_754_p3);
    sel_tmp8_fu_831_p2 <= (tmp_11_fu_801_p2 and sel_tmp7_fu_825_p2);
    src_kernel_win_0_va_6_fu_988_p3 <= 
        tmp_29_fu_977_p5 when (tmp_13_reg_1486(0) = '1') else 
        col_buf_0_val_0_0_fu_898_p3;
    src_kernel_win_0_va_7_fu_1006_p3 <= 
        tmp_30_fu_995_p5 when (tmp_13_reg_1486(0) = '1') else 
        col_buf_0_val_1_0_fu_916_p3;
    src_kernel_win_0_va_8_fu_1024_p3 <= 
        tmp_31_fu_1013_p5 when (tmp_13_reg_1486(0) = '1') else 
        col_buf_0_val_2_0_fu_934_p3;
    tmp21_fu_1207_p2 <= std_logic_vector(unsigned(r_V_7_1_2_reg_1611) + unsigned(p_Val2_10_1_1_reg_1606));
        tmp22_cast_fu_1211_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp22_reg_1621),12));

    tmp22_fu_1166_p2 <= std_logic_vector(unsigned(r_V_7_2_1_fu_1144_p2) + unsigned(tmp23_cast_fu_1162_p1));
        tmp23_cast_fu_1162_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp23_fu_1156_p2),11));

    tmp23_fu_1156_p2 <= std_logic_vector(unsigned(tmp_173_2_2_cast_cas_fu_1153_p1) + unsigned(r_V_7_2_fu_1131_p2));
    tmp24_fu_1172_p2 <= std_logic_vector(unsigned(tmp_35_fu_1121_p2) + unsigned(tmp_43_fu_1117_p1));
    tmp25_fu_1228_p2 <= std_logic_vector(unsigned(tmp_44_reg_1616) + unsigned(tmp26_reg_1631));
    tmp26_fu_1178_p2 <= std_logic_vector(unsigned(src_kernel_win_0_va_6_reg_1583) + unsigned(tmp_45_fu_1149_p1));
    tmp_10_fu_422_p4 <= t_V_reg_312(31 downto 1);
    tmp_11_fu_801_p2 <= "1" when (signed(p_p2_i_i_fu_793_p3) < signed(p_src_cols_V_read)) else "0";
    tmp_129_1_fu_444_p2 <= "1" when (t_V_reg_312 = ap_const_lv32_0) else "0";
    tmp_12_fu_438_p2 <= "1" when (t_V_reg_312 = ap_const_lv32_1) else "0";
    tmp_13_fu_450_p2 <= "1" when (unsigned(t_V_reg_312) > unsigned(p_src_rows_V_read)) else "0";
    tmp_14_fu_455_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_reg_312));
    tmp_155_1_fu_538_p2 <= "1" when (signed(p_assign_6_1_fu_518_p2) < signed(p_src_rows_V_read)) else "0";
    tmp_155_2_fu_601_p2 <= "1" when (signed(p_assign_6_2_fu_581_p2) < signed(p_src_rows_V_read)) else "0";
    tmp_15_fu_461_p3 <= tmp_14_fu_455_p2(31 downto 31);
    tmp_165_1_fu_571_p2 <= "1" when (signed(p_p2_i425_i_1_fu_563_p3) < signed(p_src_rows_V_read)) else "0";
    tmp_165_2_fu_634_p2 <= "1" when (signed(p_p2_i425_i_2_fu_626_p3) < signed(p_src_rows_V_read)) else "0";
    tmp_16_fu_475_p2 <= "1" when (signed(tmp_14_fu_455_p2) < signed(p_src_rows_V_read)) else "0";
        tmp_173_1_cast_cast_fu_1092_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_7_1_fu_1087_p2),12));

    tmp_173_2_2_cast_cas_fu_1153_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_6_reg_1583),10));
    tmp_17_fu_486_p3 <= tmp_14_fu_455_p2(31 downto 31);
    tmp_18_fu_508_p2 <= "1" when (signed(p_p2_i425_i_fu_500_p3) < signed(p_src_rows_V_read)) else "0";
    tmp_19_fu_524_p3 <= p_assign_6_1_fu_518_p2(31 downto 31);
    tmp_1_fu_340_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(p_src_rows_V_read));
    tmp_20_fu_549_p3 <= p_assign_6_1_fu_518_p2(31 downto 31);
    tmp_21_fu_587_p3 <= p_assign_6_2_fu_581_p2(31 downto 31);
    tmp_22_fu_612_p3 <= p_assign_6_2_fu_581_p2(31 downto 31);
    tmp_23_fu_701_p1 <= row_assign_s_fu_697_p2(2 - 1 downto 0);
    tmp_24_fu_709_p1 <= row_assign_10_1_fu_705_p2(2 - 1 downto 0);
    tmp_25_fu_859_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_reg_1541),64));
    tmp_2_fu_352_p2 <= std_logic_vector(unsigned(ap_const_lv32_3) + unsigned(p_src_cols_V_read));
    tmp_32_fu_717_p1 <= row_assign_10_2_fu_713_p2(2 - 1 downto 0);
    tmp_33_fu_732_p4 <= t_V_2_reg_323(31 downto 1);
    tmp_34_fu_754_p3 <= ImagLoc_x_fu_748_p2(31 downto 31);
    tmp_35_fu_1121_p2 <= std_logic_vector(unsigned(tmp_42_fu_1100_p1) + unsigned(tmp_41_fu_1096_p1));
    tmp_36_fu_779_p3 <= ImagLoc_x_fu_748_p2(31 downto 31);
    tmp_37_fu_865_p1 <= col_assign_1_fu_855_p2(2 - 1 downto 0);
    tmp_38_fu_1237_p4 <= p_Val2_2_fu_1214_p2(11 downto 8);
    tmp_3_fu_358_p2 <= std_logic_vector(shift_left(unsigned(p_src_rows_V_read),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_41_fu_1096_p1 <= r_V_7_1_fu_1087_p2(8 - 1 downto 0);
    tmp_42_fu_1100_p1 <= grp_fu_1294_p3(8 - 1 downto 0);
    tmp_43_fu_1117_p1 <= r_V_7_1_2_fu_1112_p2(8 - 1 downto 0);
    tmp_44_fu_1136_p1 <= r_V_7_2_fu_1131_p2(8 - 1 downto 0);
    tmp_45_fu_1149_p1 <= r_V_7_2_1_fu_1144_p2(8 - 1 downto 0);
    tmp_4_fu_364_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(tmp_3_fu_358_p2));
    tmp_5_fu_417_p2 <= "1" when (unsigned(t_V_reg_312) < unsigned(p_src_rows_V_read)) else "0";
    tmp_7_fu_394_p2 <= std_logic_vector(shift_left(unsigned(p_src_cols_V_read),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_85_0_not_fu_692_p2 <= (tmp_5_reg_1468 xor ap_const_lv1_1);
    tmp_8_fu_400_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(tmp_7_fu_394_p2));
    tmp_9_fu_768_p2 <= "1" when (signed(ImagLoc_x_fu_748_p2) < signed(p_src_cols_V_read)) else "0";
    tmp_9_not_fu_819_p2 <= (tmp_9_fu_768_p2 xor ap_const_lv1_1);
    tmp_i_i_61_fu_1273_p2 <= (overflow_fu_1259_p2 or isneg_fu_1220_p3);
    tmp_i_i_fu_1247_p2 <= (isneg_fu_1220_p3 xor ap_const_lv1_1);
    tmp_s_fu_334_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(p_src_cols_V_read));
    x_fu_837_p3 <= 
        p_p2_i_i_fu_793_p3 when (sel_tmp8_fu_831_p2(0) = '1') else 
        p_assign_3_fu_811_p3;
    y_1_1_fu_668_p3 <= 
        p_assign_6_1_fu_518_p2 when (or_cond_i424_i_1_fu_543_p2(0) = '1') else 
        p_p2_i425_i_1_p_assig_fu_660_p3;
    y_1_2_fu_684_p3 <= 
        p_assign_6_2_fu_581_p2 when (or_cond_i424_i_2_fu_606_p2(0) = '1') else 
        p_p2_i425_i_2_p_assig_fu_676_p3;
    y_1_fu_652_p3 <= 
        tmp_14_fu_455_p2 when (or_cond_i424_i_fu_480_p2(0) = '1') else 
        p_p2_i425_i_p_assign_8_fu_644_p3;
end behav;
