-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\spectrum_analyser\SpectrumAnalyser_src_Spectrum_Options.vhd
-- Created: 2021-03-09 14:00:48
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: SpectrumAnalyser_src_Spectrum_Options
-- Source Path: spectrum_analyser/Spectrum Analyser/Spectrum Analyser/Spectrum Analyser Core/FFT and Spectrum Processing/Spectrum 
-- Option
-- Hierarchy Level: 4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.SpectrumAnalyser_src_Spectrum_Analyser_pkg.ALL;

ENTITY SpectrumAnalyser_src_Spectrum_Options IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_16_0                        :   IN    std_logic;
        Units_rsvd                        :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        Type_rsvd                         :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        Vrms                              :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        Data_In_re                        :   IN    std_logic_vector(28 DOWNTO 0);  -- sfix29_En15
        Data_In_im                        :   IN    std_logic_vector(28 DOWNTO 0);  -- sfix29_En15
        Start_In                          :   IN    std_logic;
        End_In                            :   IN    std_logic;
        Valid_In                          :   IN    std_logic;
        Type_Scale                        :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        Power_Scale                       :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        Data_Out                          :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        Start_Out                         :   OUT   std_logic;
        End_Out                           :   OUT   std_logic;
        Valid_Out                         :   OUT   std_logic
        );
END SpectrumAnalyser_src_Spectrum_Options;


ARCHITECTURE rtl OF SpectrumAnalyser_src_Spectrum_Options IS

  -- Component Declarations
  COMPONENT SpectrumAnalyser_src_nfp_wire_single_block
    PORT( nfp_in                          :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT SpectrumAnalyser_src_nfp_convert_sfix_29_En15_to_single
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_16_0                      :   IN    std_logic;
          nfp_in                          :   IN    std_logic_vector(28 DOWNTO 0);  -- sfix29_En15
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT SpectrumAnalyser_src_nfp_hypot_single
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_16_0                      :   IN    std_logic;
          nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT SpectrumAnalyser_src_nfp_mul_single
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_16_0                      :   IN    std_logic;
          nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT SpectrumAnalyser_src_nfp_relop_single
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_16_0                      :   IN    std_logic;
          nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_out1                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT SpectrumAnalyser_src_nfp_relop_single_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_16_0                      :   IN    std_logic;
          nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_out1                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT SpectrumAnalyser_src_nfp_log10_single
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_16_0                      :   IN    std_logic;
          nfp_in                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT SpectrumAnalyser_src_nfp_pow10_single
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_16_0                      :   IN    std_logic;
          nfp_in                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT SpectrumAnalyser_src_nfp_wire_single
    PORT( nfp_in                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- uint32
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : SpectrumAnalyser_src_nfp_wire_single_block
    USE ENTITY work.SpectrumAnalyser_src_nfp_wire_single_block(rtl);

  FOR ALL : SpectrumAnalyser_src_nfp_convert_sfix_29_En15_to_single
    USE ENTITY work.SpectrumAnalyser_src_nfp_convert_sfix_29_En15_to_single(rtl);

  FOR ALL : SpectrumAnalyser_src_nfp_hypot_single
    USE ENTITY work.SpectrumAnalyser_src_nfp_hypot_single(rtl);

  FOR ALL : SpectrumAnalyser_src_nfp_mul_single
    USE ENTITY work.SpectrumAnalyser_src_nfp_mul_single(rtl);

  FOR ALL : SpectrumAnalyser_src_nfp_relop_single
    USE ENTITY work.SpectrumAnalyser_src_nfp_relop_single(rtl);

  FOR ALL : SpectrumAnalyser_src_nfp_relop_single_block
    USE ENTITY work.SpectrumAnalyser_src_nfp_relop_single_block(rtl);

  FOR ALL : SpectrumAnalyser_src_nfp_log10_single
    USE ENTITY work.SpectrumAnalyser_src_nfp_log10_single(rtl);

  FOR ALL : SpectrumAnalyser_src_nfp_pow10_single
    USE ENTITY work.SpectrumAnalyser_src_nfp_pow10_single(rtl);

  FOR ALL : SpectrumAnalyser_src_nfp_wire_single
    USE ENTITY work.SpectrumAnalyser_src_nfp_wire_single(rtl);

  -- Signals
  SIGNAL Vrms_unsigned                    : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL delayMatch8_reg                  : vector_of_unsigned32(0 TO 150);  -- ufix32 [151]
  SIGNAL delayMatch8_reg_next             : vector_of_unsigned32(0 TO 150);  -- ufix32 [151]
  SIGNAL Vrms_1                           : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL kconst                           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Units_unsigned                   : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL delayMatch4_reg                  : vector_of_unsigned32(0 TO 70);  -- ufix32 [71]
  SIGNAL delayMatch4_reg_next             : vector_of_unsigned32(0 TO 70);  -- ufix32 [71]
  SIGNAL Units_rsvd_1                     : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Type_unsigned                    : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL delayMatch2_reg                  : vector_of_unsigned32(0 TO 62);  -- ufix32 [63]
  SIGNAL delayMatch2_reg_next             : vector_of_unsigned32(0 TO 62);  -- ufix32 [63]
  SIGNAL Type_rsvd_1                      : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Float_Typecast2_out1             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch_reg                   : vector_of_std_logic_vector32(0 TO 46);  -- ufix32 [47]
  SIGNAL delayMatch_reg_next              : vector_of_std_logic_vector32(0 TO 46);  -- ufix32 [47]
  SIGNAL Float_Typecast2_out1_1           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL nfp_out_1_re                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL nfp_out_1_im                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Abs2_out1                        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Square_out1                      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product_out1                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch3_reg                  : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL delayMatch3_reg_next             : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL Product_out1_1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Float_Typecast1_out1             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch1_reg                  : vector_of_std_logic_vector32(0 TO 54);  -- ufix32 [55]
  SIGNAL delayMatch1_reg_next             : vector_of_std_logic_vector32(0 TO 54);  -- ufix32 [55]
  SIGNAL Float_Typecast1_out1_1           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Product1_out1                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Multiport_Switch_out1            : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch5_reg                  : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL delayMatch5_reg_next             : vector_of_std_logic_vector32(0 TO 7);  -- ufix32 [8]
  SIGNAL Multiport_Switch_out1_1          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL kconst_1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Gain_out1                        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Multiport_Switch1_out1           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL const                            : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Compare_To_Zero_out1             : std_logic;
  SIGNAL delayMatch7_reg                  : vector_of_std_logic_vector32(0 TO 2);  -- ufix32 [3]
  SIGNAL delayMatch7_reg_next             : vector_of_std_logic_vector32(0 TO 2);  -- ufix32 [3]
  SIGNAL Multiport_Switch1_out1_1         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL const_1                          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Compare_To_Zero1_out1            : std_logic;
  SIGNAL delayMatch6_reg                  : std_logic_vector(0 TO 73);  -- ufix1 [74]
  SIGNAL delayMatch6_reg_next             : std_logic_vector(0 TO 73);  -- ufix1 [74]
  SIGNAL Valid_In_1                       : std_logic;
  SIGNAL AND_out1                         : std_logic;
  SIGNAL Unit_Delay_Enabled_Synchronous_out1 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Multiport_Switch3_out1           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Unit_Delay_Enabled_Synchronous_ectrl : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Log1_out1                        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Gain3_out1                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch9_reg                  : vector_of_std_logic_vector32(0 TO 41);  -- ufix32 [42]
  SIGNAL delayMatch9_reg_next             : vector_of_std_logic_vector32(0 TO 41);  -- ufix32 [42]
  SIGNAL Gain3_out1_1                     : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL kconst_2                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL kconst_3                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Gain6_out1                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Power_of_10_out1                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Gain7_out1                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Multiport_Switch2_out1           : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Float_Typecast_out1              : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  -- Spectrum Power
  -- 
  -- Spectrum Type
  -- 
  -- Unit of Measurement
  -- 
  -- Convert to dB
  -- 
  -- Voltage RMS Value

  u_nfp_wire_single : SpectrumAnalyser_src_nfp_wire_single_block
    PORT MAP( nfp_in => Power_Scale,  -- uint32
              nfp_out => Float_Typecast2_out1  -- single
              );

  u_spectrum_analyser_Spectrum_Analyser_Spectrum_Analyser_Spectrum_Analyser_Core_FFT_and_Spectrum_Processing_Spectrum_Options_nfp_convert_sfix_29_En15_to_single : SpectrumAnalyser_src_nfp_convert_sfix_29_En15_to_single
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              nfp_in => Data_In_re,  -- sfix29_En15
              nfp_out => nfp_out_1_re  -- single
              );

  u_spectrum_analyser_Spectrum_Analyser_Spectrum_Analyser_Spectrum_Analyser_Core_FFT_and_Spectrum_Processing_Spectrum_Options_nfp_convert_sfix_29_En15_to_single_1 : SpectrumAnalyser_src_nfp_convert_sfix_29_En15_to_single
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              nfp_in => Data_In_im,  -- sfix29_En15
              nfp_out => nfp_out_1_im  -- single
              );

  u_nfp_hypot_comp : SpectrumAnalyser_src_nfp_hypot_single
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              nfp_in1 => nfp_out_1_re,  -- single
              nfp_in2 => nfp_out_1_im,  -- single
              nfp_out => Abs2_out1  -- single
              );

  u_nfp_mul_comp : SpectrumAnalyser_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              nfp_in1 => Abs2_out1,  -- single
              nfp_in2 => Abs2_out1,  -- single
              nfp_out => Square_out1  -- single
              );

  u_nfp_mul_comp_1 : SpectrumAnalyser_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              nfp_in1 => Float_Typecast2_out1_1,  -- single
              nfp_in2 => Square_out1,  -- single
              nfp_out => Product_out1  -- single
              );

  u_nfp_wire_single_1 : SpectrumAnalyser_src_nfp_wire_single_block
    PORT MAP( nfp_in => Type_Scale,  -- uint32
              nfp_out => Float_Typecast1_out1  -- single
              );

  u_nfp_mul_comp_2 : SpectrumAnalyser_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              nfp_in1 => Float_Typecast1_out1_1,  -- single
              nfp_in2 => Product_out1,  -- single
              nfp_out => Product1_out1  -- single
              );

  u_nfp_mul_comp_3 : SpectrumAnalyser_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              nfp_in1 => kconst_1,  -- single
              nfp_in2 => Multiport_Switch_out1,  -- single
              nfp_out => Gain_out1  -- single
              );

  u_nfp_relop_comp : SpectrumAnalyser_src_nfp_relop_single
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              nfp_in1 => Multiport_Switch1_out1,  -- single
              nfp_in2 => const,  -- single
              nfp_out1 => Compare_To_Zero_out1
              );

  u_nfp_relop_comp_1 : SpectrumAnalyser_src_nfp_relop_single_block
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              nfp_in1 => Multiport_Switch1_out1,  -- single
              nfp_in2 => const_1,  -- single
              nfp_out1 => Compare_To_Zero1_out1
              );

  u_nfp_log10_comp : SpectrumAnalyser_src_nfp_log10_single
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              nfp_in => Multiport_Switch3_out1,  -- single
              nfp_out => Log1_out1  -- single
              );

  u_nfp_mul_comp_4 : SpectrumAnalyser_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              nfp_in1 => kconst,  -- single
              nfp_in2 => Log1_out1,  -- single
              nfp_out => Gain3_out1  -- single
              );

  u_nfp_mul_comp_5 : SpectrumAnalyser_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              nfp_in1 => kconst_3,  -- single
              nfp_in2 => Gain3_out1,  -- single
              nfp_out => Gain6_out1  -- single
              );

  u_nfp_pow10_comp : SpectrumAnalyser_src_nfp_pow10_single
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              nfp_in => Gain6_out1,  -- single
              nfp_out => Power_of_10_out1  -- single
              );

  u_nfp_mul_comp_6 : SpectrumAnalyser_src_nfp_mul_single
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              nfp_in1 => kconst_2,  -- single
              nfp_in2 => Power_of_10_out1,  -- single
              nfp_out => Gain7_out1  -- single
              );

  u_nfp_wire_single_2 : SpectrumAnalyser_src_nfp_wire_single
    PORT MAP( nfp_in => Multiport_Switch2_out1,  -- single
              nfp_out => Float_Typecast_out1  -- uint32
              );

  Vrms_unsigned <= unsigned(Vrms);

  delayMatch8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delayMatch8_reg(0) <= to_unsigned(0, 32);
      delayMatch8_reg(1) <= to_unsigned(0, 32);
      delayMatch8_reg(2) <= to_unsigned(0, 32);
      delayMatch8_reg(3) <= to_unsigned(0, 32);
      delayMatch8_reg(4) <= to_unsigned(0, 32);
      delayMatch8_reg(5) <= to_unsigned(0, 32);
      delayMatch8_reg(6) <= to_unsigned(0, 32);
      delayMatch8_reg(7) <= to_unsigned(0, 32);
      delayMatch8_reg(8) <= to_unsigned(0, 32);
      delayMatch8_reg(9) <= to_unsigned(0, 32);
      delayMatch8_reg(10) <= to_unsigned(0, 32);
      delayMatch8_reg(11) <= to_unsigned(0, 32);
      delayMatch8_reg(12) <= to_unsigned(0, 32);
      delayMatch8_reg(13) <= to_unsigned(0, 32);
      delayMatch8_reg(14) <= to_unsigned(0, 32);
      delayMatch8_reg(15) <= to_unsigned(0, 32);
      delayMatch8_reg(16) <= to_unsigned(0, 32);
      delayMatch8_reg(17) <= to_unsigned(0, 32);
      delayMatch8_reg(18) <= to_unsigned(0, 32);
      delayMatch8_reg(19) <= to_unsigned(0, 32);
      delayMatch8_reg(20) <= to_unsigned(0, 32);
      delayMatch8_reg(21) <= to_unsigned(0, 32);
      delayMatch8_reg(22) <= to_unsigned(0, 32);
      delayMatch8_reg(23) <= to_unsigned(0, 32);
      delayMatch8_reg(24) <= to_unsigned(0, 32);
      delayMatch8_reg(25) <= to_unsigned(0, 32);
      delayMatch8_reg(26) <= to_unsigned(0, 32);
      delayMatch8_reg(27) <= to_unsigned(0, 32);
      delayMatch8_reg(28) <= to_unsigned(0, 32);
      delayMatch8_reg(29) <= to_unsigned(0, 32);
      delayMatch8_reg(30) <= to_unsigned(0, 32);
      delayMatch8_reg(31) <= to_unsigned(0, 32);
      delayMatch8_reg(32) <= to_unsigned(0, 32);
      delayMatch8_reg(33) <= to_unsigned(0, 32);
      delayMatch8_reg(34) <= to_unsigned(0, 32);
      delayMatch8_reg(35) <= to_unsigned(0, 32);
      delayMatch8_reg(36) <= to_unsigned(0, 32);
      delayMatch8_reg(37) <= to_unsigned(0, 32);
      delayMatch8_reg(38) <= to_unsigned(0, 32);
      delayMatch8_reg(39) <= to_unsigned(0, 32);
      delayMatch8_reg(40) <= to_unsigned(0, 32);
      delayMatch8_reg(41) <= to_unsigned(0, 32);
      delayMatch8_reg(42) <= to_unsigned(0, 32);
      delayMatch8_reg(43) <= to_unsigned(0, 32);
      delayMatch8_reg(44) <= to_unsigned(0, 32);
      delayMatch8_reg(45) <= to_unsigned(0, 32);
      delayMatch8_reg(46) <= to_unsigned(0, 32);
      delayMatch8_reg(47) <= to_unsigned(0, 32);
      delayMatch8_reg(48) <= to_unsigned(0, 32);
      delayMatch8_reg(49) <= to_unsigned(0, 32);
      delayMatch8_reg(50) <= to_unsigned(0, 32);
      delayMatch8_reg(51) <= to_unsigned(0, 32);
      delayMatch8_reg(52) <= to_unsigned(0, 32);
      delayMatch8_reg(53) <= to_unsigned(0, 32);
      delayMatch8_reg(54) <= to_unsigned(0, 32);
      delayMatch8_reg(55) <= to_unsigned(0, 32);
      delayMatch8_reg(56) <= to_unsigned(0, 32);
      delayMatch8_reg(57) <= to_unsigned(0, 32);
      delayMatch8_reg(58) <= to_unsigned(0, 32);
      delayMatch8_reg(59) <= to_unsigned(0, 32);
      delayMatch8_reg(60) <= to_unsigned(0, 32);
      delayMatch8_reg(61) <= to_unsigned(0, 32);
      delayMatch8_reg(62) <= to_unsigned(0, 32);
      delayMatch8_reg(63) <= to_unsigned(0, 32);
      delayMatch8_reg(64) <= to_unsigned(0, 32);
      delayMatch8_reg(65) <= to_unsigned(0, 32);
      delayMatch8_reg(66) <= to_unsigned(0, 32);
      delayMatch8_reg(67) <= to_unsigned(0, 32);
      delayMatch8_reg(68) <= to_unsigned(0, 32);
      delayMatch8_reg(69) <= to_unsigned(0, 32);
      delayMatch8_reg(70) <= to_unsigned(0, 32);
      delayMatch8_reg(71) <= to_unsigned(0, 32);
      delayMatch8_reg(72) <= to_unsigned(0, 32);
      delayMatch8_reg(73) <= to_unsigned(0, 32);
      delayMatch8_reg(74) <= to_unsigned(0, 32);
      delayMatch8_reg(75) <= to_unsigned(0, 32);
      delayMatch8_reg(76) <= to_unsigned(0, 32);
      delayMatch8_reg(77) <= to_unsigned(0, 32);
      delayMatch8_reg(78) <= to_unsigned(0, 32);
      delayMatch8_reg(79) <= to_unsigned(0, 32);
      delayMatch8_reg(80) <= to_unsigned(0, 32);
      delayMatch8_reg(81) <= to_unsigned(0, 32);
      delayMatch8_reg(82) <= to_unsigned(0, 32);
      delayMatch8_reg(83) <= to_unsigned(0, 32);
      delayMatch8_reg(84) <= to_unsigned(0, 32);
      delayMatch8_reg(85) <= to_unsigned(0, 32);
      delayMatch8_reg(86) <= to_unsigned(0, 32);
      delayMatch8_reg(87) <= to_unsigned(0, 32);
      delayMatch8_reg(88) <= to_unsigned(0, 32);
      delayMatch8_reg(89) <= to_unsigned(0, 32);
      delayMatch8_reg(90) <= to_unsigned(0, 32);
      delayMatch8_reg(91) <= to_unsigned(0, 32);
      delayMatch8_reg(92) <= to_unsigned(0, 32);
      delayMatch8_reg(93) <= to_unsigned(0, 32);
      delayMatch8_reg(94) <= to_unsigned(0, 32);
      delayMatch8_reg(95) <= to_unsigned(0, 32);
      delayMatch8_reg(96) <= to_unsigned(0, 32);
      delayMatch8_reg(97) <= to_unsigned(0, 32);
      delayMatch8_reg(98) <= to_unsigned(0, 32);
      delayMatch8_reg(99) <= to_unsigned(0, 32);
      delayMatch8_reg(100) <= to_unsigned(0, 32);
      delayMatch8_reg(101) <= to_unsigned(0, 32);
      delayMatch8_reg(102) <= to_unsigned(0, 32);
      delayMatch8_reg(103) <= to_unsigned(0, 32);
      delayMatch8_reg(104) <= to_unsigned(0, 32);
      delayMatch8_reg(105) <= to_unsigned(0, 32);
      delayMatch8_reg(106) <= to_unsigned(0, 32);
      delayMatch8_reg(107) <= to_unsigned(0, 32);
      delayMatch8_reg(108) <= to_unsigned(0, 32);
      delayMatch8_reg(109) <= to_unsigned(0, 32);
      delayMatch8_reg(110) <= to_unsigned(0, 32);
      delayMatch8_reg(111) <= to_unsigned(0, 32);
      delayMatch8_reg(112) <= to_unsigned(0, 32);
      delayMatch8_reg(113) <= to_unsigned(0, 32);
      delayMatch8_reg(114) <= to_unsigned(0, 32);
      delayMatch8_reg(115) <= to_unsigned(0, 32);
      delayMatch8_reg(116) <= to_unsigned(0, 32);
      delayMatch8_reg(117) <= to_unsigned(0, 32);
      delayMatch8_reg(118) <= to_unsigned(0, 32);
      delayMatch8_reg(119) <= to_unsigned(0, 32);
      delayMatch8_reg(120) <= to_unsigned(0, 32);
      delayMatch8_reg(121) <= to_unsigned(0, 32);
      delayMatch8_reg(122) <= to_unsigned(0, 32);
      delayMatch8_reg(123) <= to_unsigned(0, 32);
      delayMatch8_reg(124) <= to_unsigned(0, 32);
      delayMatch8_reg(125) <= to_unsigned(0, 32);
      delayMatch8_reg(126) <= to_unsigned(0, 32);
      delayMatch8_reg(127) <= to_unsigned(0, 32);
      delayMatch8_reg(128) <= to_unsigned(0, 32);
      delayMatch8_reg(129) <= to_unsigned(0, 32);
      delayMatch8_reg(130) <= to_unsigned(0, 32);
      delayMatch8_reg(131) <= to_unsigned(0, 32);
      delayMatch8_reg(132) <= to_unsigned(0, 32);
      delayMatch8_reg(133) <= to_unsigned(0, 32);
      delayMatch8_reg(134) <= to_unsigned(0, 32);
      delayMatch8_reg(135) <= to_unsigned(0, 32);
      delayMatch8_reg(136) <= to_unsigned(0, 32);
      delayMatch8_reg(137) <= to_unsigned(0, 32);
      delayMatch8_reg(138) <= to_unsigned(0, 32);
      delayMatch8_reg(139) <= to_unsigned(0, 32);
      delayMatch8_reg(140) <= to_unsigned(0, 32);
      delayMatch8_reg(141) <= to_unsigned(0, 32);
      delayMatch8_reg(142) <= to_unsigned(0, 32);
      delayMatch8_reg(143) <= to_unsigned(0, 32);
      delayMatch8_reg(144) <= to_unsigned(0, 32);
      delayMatch8_reg(145) <= to_unsigned(0, 32);
      delayMatch8_reg(146) <= to_unsigned(0, 32);
      delayMatch8_reg(147) <= to_unsigned(0, 32);
      delayMatch8_reg(148) <= to_unsigned(0, 32);
      delayMatch8_reg(149) <= to_unsigned(0, 32);
      delayMatch8_reg(150) <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        delayMatch8_reg(0) <= delayMatch8_reg_next(0);
        delayMatch8_reg(1) <= delayMatch8_reg_next(1);
        delayMatch8_reg(2) <= delayMatch8_reg_next(2);
        delayMatch8_reg(3) <= delayMatch8_reg_next(3);
        delayMatch8_reg(4) <= delayMatch8_reg_next(4);
        delayMatch8_reg(5) <= delayMatch8_reg_next(5);
        delayMatch8_reg(6) <= delayMatch8_reg_next(6);
        delayMatch8_reg(7) <= delayMatch8_reg_next(7);
        delayMatch8_reg(8) <= delayMatch8_reg_next(8);
        delayMatch8_reg(9) <= delayMatch8_reg_next(9);
        delayMatch8_reg(10) <= delayMatch8_reg_next(10);
        delayMatch8_reg(11) <= delayMatch8_reg_next(11);
        delayMatch8_reg(12) <= delayMatch8_reg_next(12);
        delayMatch8_reg(13) <= delayMatch8_reg_next(13);
        delayMatch8_reg(14) <= delayMatch8_reg_next(14);
        delayMatch8_reg(15) <= delayMatch8_reg_next(15);
        delayMatch8_reg(16) <= delayMatch8_reg_next(16);
        delayMatch8_reg(17) <= delayMatch8_reg_next(17);
        delayMatch8_reg(18) <= delayMatch8_reg_next(18);
        delayMatch8_reg(19) <= delayMatch8_reg_next(19);
        delayMatch8_reg(20) <= delayMatch8_reg_next(20);
        delayMatch8_reg(21) <= delayMatch8_reg_next(21);
        delayMatch8_reg(22) <= delayMatch8_reg_next(22);
        delayMatch8_reg(23) <= delayMatch8_reg_next(23);
        delayMatch8_reg(24) <= delayMatch8_reg_next(24);
        delayMatch8_reg(25) <= delayMatch8_reg_next(25);
        delayMatch8_reg(26) <= delayMatch8_reg_next(26);
        delayMatch8_reg(27) <= delayMatch8_reg_next(27);
        delayMatch8_reg(28) <= delayMatch8_reg_next(28);
        delayMatch8_reg(29) <= delayMatch8_reg_next(29);
        delayMatch8_reg(30) <= delayMatch8_reg_next(30);
        delayMatch8_reg(31) <= delayMatch8_reg_next(31);
        delayMatch8_reg(32) <= delayMatch8_reg_next(32);
        delayMatch8_reg(33) <= delayMatch8_reg_next(33);
        delayMatch8_reg(34) <= delayMatch8_reg_next(34);
        delayMatch8_reg(35) <= delayMatch8_reg_next(35);
        delayMatch8_reg(36) <= delayMatch8_reg_next(36);
        delayMatch8_reg(37) <= delayMatch8_reg_next(37);
        delayMatch8_reg(38) <= delayMatch8_reg_next(38);
        delayMatch8_reg(39) <= delayMatch8_reg_next(39);
        delayMatch8_reg(40) <= delayMatch8_reg_next(40);
        delayMatch8_reg(41) <= delayMatch8_reg_next(41);
        delayMatch8_reg(42) <= delayMatch8_reg_next(42);
        delayMatch8_reg(43) <= delayMatch8_reg_next(43);
        delayMatch8_reg(44) <= delayMatch8_reg_next(44);
        delayMatch8_reg(45) <= delayMatch8_reg_next(45);
        delayMatch8_reg(46) <= delayMatch8_reg_next(46);
        delayMatch8_reg(47) <= delayMatch8_reg_next(47);
        delayMatch8_reg(48) <= delayMatch8_reg_next(48);
        delayMatch8_reg(49) <= delayMatch8_reg_next(49);
        delayMatch8_reg(50) <= delayMatch8_reg_next(50);
        delayMatch8_reg(51) <= delayMatch8_reg_next(51);
        delayMatch8_reg(52) <= delayMatch8_reg_next(52);
        delayMatch8_reg(53) <= delayMatch8_reg_next(53);
        delayMatch8_reg(54) <= delayMatch8_reg_next(54);
        delayMatch8_reg(55) <= delayMatch8_reg_next(55);
        delayMatch8_reg(56) <= delayMatch8_reg_next(56);
        delayMatch8_reg(57) <= delayMatch8_reg_next(57);
        delayMatch8_reg(58) <= delayMatch8_reg_next(58);
        delayMatch8_reg(59) <= delayMatch8_reg_next(59);
        delayMatch8_reg(60) <= delayMatch8_reg_next(60);
        delayMatch8_reg(61) <= delayMatch8_reg_next(61);
        delayMatch8_reg(62) <= delayMatch8_reg_next(62);
        delayMatch8_reg(63) <= delayMatch8_reg_next(63);
        delayMatch8_reg(64) <= delayMatch8_reg_next(64);
        delayMatch8_reg(65) <= delayMatch8_reg_next(65);
        delayMatch8_reg(66) <= delayMatch8_reg_next(66);
        delayMatch8_reg(67) <= delayMatch8_reg_next(67);
        delayMatch8_reg(68) <= delayMatch8_reg_next(68);
        delayMatch8_reg(69) <= delayMatch8_reg_next(69);
        delayMatch8_reg(70) <= delayMatch8_reg_next(70);
        delayMatch8_reg(71) <= delayMatch8_reg_next(71);
        delayMatch8_reg(72) <= delayMatch8_reg_next(72);
        delayMatch8_reg(73) <= delayMatch8_reg_next(73);
        delayMatch8_reg(74) <= delayMatch8_reg_next(74);
        delayMatch8_reg(75) <= delayMatch8_reg_next(75);
        delayMatch8_reg(76) <= delayMatch8_reg_next(76);
        delayMatch8_reg(77) <= delayMatch8_reg_next(77);
        delayMatch8_reg(78) <= delayMatch8_reg_next(78);
        delayMatch8_reg(79) <= delayMatch8_reg_next(79);
        delayMatch8_reg(80) <= delayMatch8_reg_next(80);
        delayMatch8_reg(81) <= delayMatch8_reg_next(81);
        delayMatch8_reg(82) <= delayMatch8_reg_next(82);
        delayMatch8_reg(83) <= delayMatch8_reg_next(83);
        delayMatch8_reg(84) <= delayMatch8_reg_next(84);
        delayMatch8_reg(85) <= delayMatch8_reg_next(85);
        delayMatch8_reg(86) <= delayMatch8_reg_next(86);
        delayMatch8_reg(87) <= delayMatch8_reg_next(87);
        delayMatch8_reg(88) <= delayMatch8_reg_next(88);
        delayMatch8_reg(89) <= delayMatch8_reg_next(89);
        delayMatch8_reg(90) <= delayMatch8_reg_next(90);
        delayMatch8_reg(91) <= delayMatch8_reg_next(91);
        delayMatch8_reg(92) <= delayMatch8_reg_next(92);
        delayMatch8_reg(93) <= delayMatch8_reg_next(93);
        delayMatch8_reg(94) <= delayMatch8_reg_next(94);
        delayMatch8_reg(95) <= delayMatch8_reg_next(95);
        delayMatch8_reg(96) <= delayMatch8_reg_next(96);
        delayMatch8_reg(97) <= delayMatch8_reg_next(97);
        delayMatch8_reg(98) <= delayMatch8_reg_next(98);
        delayMatch8_reg(99) <= delayMatch8_reg_next(99);
        delayMatch8_reg(100) <= delayMatch8_reg_next(100);
        delayMatch8_reg(101) <= delayMatch8_reg_next(101);
        delayMatch8_reg(102) <= delayMatch8_reg_next(102);
        delayMatch8_reg(103) <= delayMatch8_reg_next(103);
        delayMatch8_reg(104) <= delayMatch8_reg_next(104);
        delayMatch8_reg(105) <= delayMatch8_reg_next(105);
        delayMatch8_reg(106) <= delayMatch8_reg_next(106);
        delayMatch8_reg(107) <= delayMatch8_reg_next(107);
        delayMatch8_reg(108) <= delayMatch8_reg_next(108);
        delayMatch8_reg(109) <= delayMatch8_reg_next(109);
        delayMatch8_reg(110) <= delayMatch8_reg_next(110);
        delayMatch8_reg(111) <= delayMatch8_reg_next(111);
        delayMatch8_reg(112) <= delayMatch8_reg_next(112);
        delayMatch8_reg(113) <= delayMatch8_reg_next(113);
        delayMatch8_reg(114) <= delayMatch8_reg_next(114);
        delayMatch8_reg(115) <= delayMatch8_reg_next(115);
        delayMatch8_reg(116) <= delayMatch8_reg_next(116);
        delayMatch8_reg(117) <= delayMatch8_reg_next(117);
        delayMatch8_reg(118) <= delayMatch8_reg_next(118);
        delayMatch8_reg(119) <= delayMatch8_reg_next(119);
        delayMatch8_reg(120) <= delayMatch8_reg_next(120);
        delayMatch8_reg(121) <= delayMatch8_reg_next(121);
        delayMatch8_reg(122) <= delayMatch8_reg_next(122);
        delayMatch8_reg(123) <= delayMatch8_reg_next(123);
        delayMatch8_reg(124) <= delayMatch8_reg_next(124);
        delayMatch8_reg(125) <= delayMatch8_reg_next(125);
        delayMatch8_reg(126) <= delayMatch8_reg_next(126);
        delayMatch8_reg(127) <= delayMatch8_reg_next(127);
        delayMatch8_reg(128) <= delayMatch8_reg_next(128);
        delayMatch8_reg(129) <= delayMatch8_reg_next(129);
        delayMatch8_reg(130) <= delayMatch8_reg_next(130);
        delayMatch8_reg(131) <= delayMatch8_reg_next(131);
        delayMatch8_reg(132) <= delayMatch8_reg_next(132);
        delayMatch8_reg(133) <= delayMatch8_reg_next(133);
        delayMatch8_reg(134) <= delayMatch8_reg_next(134);
        delayMatch8_reg(135) <= delayMatch8_reg_next(135);
        delayMatch8_reg(136) <= delayMatch8_reg_next(136);
        delayMatch8_reg(137) <= delayMatch8_reg_next(137);
        delayMatch8_reg(138) <= delayMatch8_reg_next(138);
        delayMatch8_reg(139) <= delayMatch8_reg_next(139);
        delayMatch8_reg(140) <= delayMatch8_reg_next(140);
        delayMatch8_reg(141) <= delayMatch8_reg_next(141);
        delayMatch8_reg(142) <= delayMatch8_reg_next(142);
        delayMatch8_reg(143) <= delayMatch8_reg_next(143);
        delayMatch8_reg(144) <= delayMatch8_reg_next(144);
        delayMatch8_reg(145) <= delayMatch8_reg_next(145);
        delayMatch8_reg(146) <= delayMatch8_reg_next(146);
        delayMatch8_reg(147) <= delayMatch8_reg_next(147);
        delayMatch8_reg(148) <= delayMatch8_reg_next(148);
        delayMatch8_reg(149) <= delayMatch8_reg_next(149);
        delayMatch8_reg(150) <= delayMatch8_reg_next(150);
      END IF;
    END IF;
  END PROCESS delayMatch8_process;

  Vrms_1 <= delayMatch8_reg(150);
  delayMatch8_reg_next(0) <= Vrms_unsigned;
  delayMatch8_reg_next(1) <= delayMatch8_reg(0);
  delayMatch8_reg_next(2) <= delayMatch8_reg(1);
  delayMatch8_reg_next(3) <= delayMatch8_reg(2);
  delayMatch8_reg_next(4) <= delayMatch8_reg(3);
  delayMatch8_reg_next(5) <= delayMatch8_reg(4);
  delayMatch8_reg_next(6) <= delayMatch8_reg(5);
  delayMatch8_reg_next(7) <= delayMatch8_reg(6);
  delayMatch8_reg_next(8) <= delayMatch8_reg(7);
  delayMatch8_reg_next(9) <= delayMatch8_reg(8);
  delayMatch8_reg_next(10) <= delayMatch8_reg(9);
  delayMatch8_reg_next(11) <= delayMatch8_reg(10);
  delayMatch8_reg_next(12) <= delayMatch8_reg(11);
  delayMatch8_reg_next(13) <= delayMatch8_reg(12);
  delayMatch8_reg_next(14) <= delayMatch8_reg(13);
  delayMatch8_reg_next(15) <= delayMatch8_reg(14);
  delayMatch8_reg_next(16) <= delayMatch8_reg(15);
  delayMatch8_reg_next(17) <= delayMatch8_reg(16);
  delayMatch8_reg_next(18) <= delayMatch8_reg(17);
  delayMatch8_reg_next(19) <= delayMatch8_reg(18);
  delayMatch8_reg_next(20) <= delayMatch8_reg(19);
  delayMatch8_reg_next(21) <= delayMatch8_reg(20);
  delayMatch8_reg_next(22) <= delayMatch8_reg(21);
  delayMatch8_reg_next(23) <= delayMatch8_reg(22);
  delayMatch8_reg_next(24) <= delayMatch8_reg(23);
  delayMatch8_reg_next(25) <= delayMatch8_reg(24);
  delayMatch8_reg_next(26) <= delayMatch8_reg(25);
  delayMatch8_reg_next(27) <= delayMatch8_reg(26);
  delayMatch8_reg_next(28) <= delayMatch8_reg(27);
  delayMatch8_reg_next(29) <= delayMatch8_reg(28);
  delayMatch8_reg_next(30) <= delayMatch8_reg(29);
  delayMatch8_reg_next(31) <= delayMatch8_reg(30);
  delayMatch8_reg_next(32) <= delayMatch8_reg(31);
  delayMatch8_reg_next(33) <= delayMatch8_reg(32);
  delayMatch8_reg_next(34) <= delayMatch8_reg(33);
  delayMatch8_reg_next(35) <= delayMatch8_reg(34);
  delayMatch8_reg_next(36) <= delayMatch8_reg(35);
  delayMatch8_reg_next(37) <= delayMatch8_reg(36);
  delayMatch8_reg_next(38) <= delayMatch8_reg(37);
  delayMatch8_reg_next(39) <= delayMatch8_reg(38);
  delayMatch8_reg_next(40) <= delayMatch8_reg(39);
  delayMatch8_reg_next(41) <= delayMatch8_reg(40);
  delayMatch8_reg_next(42) <= delayMatch8_reg(41);
  delayMatch8_reg_next(43) <= delayMatch8_reg(42);
  delayMatch8_reg_next(44) <= delayMatch8_reg(43);
  delayMatch8_reg_next(45) <= delayMatch8_reg(44);
  delayMatch8_reg_next(46) <= delayMatch8_reg(45);
  delayMatch8_reg_next(47) <= delayMatch8_reg(46);
  delayMatch8_reg_next(48) <= delayMatch8_reg(47);
  delayMatch8_reg_next(49) <= delayMatch8_reg(48);
  delayMatch8_reg_next(50) <= delayMatch8_reg(49);
  delayMatch8_reg_next(51) <= delayMatch8_reg(50);
  delayMatch8_reg_next(52) <= delayMatch8_reg(51);
  delayMatch8_reg_next(53) <= delayMatch8_reg(52);
  delayMatch8_reg_next(54) <= delayMatch8_reg(53);
  delayMatch8_reg_next(55) <= delayMatch8_reg(54);
  delayMatch8_reg_next(56) <= delayMatch8_reg(55);
  delayMatch8_reg_next(57) <= delayMatch8_reg(56);
  delayMatch8_reg_next(58) <= delayMatch8_reg(57);
  delayMatch8_reg_next(59) <= delayMatch8_reg(58);
  delayMatch8_reg_next(60) <= delayMatch8_reg(59);
  delayMatch8_reg_next(61) <= delayMatch8_reg(60);
  delayMatch8_reg_next(62) <= delayMatch8_reg(61);
  delayMatch8_reg_next(63) <= delayMatch8_reg(62);
  delayMatch8_reg_next(64) <= delayMatch8_reg(63);
  delayMatch8_reg_next(65) <= delayMatch8_reg(64);
  delayMatch8_reg_next(66) <= delayMatch8_reg(65);
  delayMatch8_reg_next(67) <= delayMatch8_reg(66);
  delayMatch8_reg_next(68) <= delayMatch8_reg(67);
  delayMatch8_reg_next(69) <= delayMatch8_reg(68);
  delayMatch8_reg_next(70) <= delayMatch8_reg(69);
  delayMatch8_reg_next(71) <= delayMatch8_reg(70);
  delayMatch8_reg_next(72) <= delayMatch8_reg(71);
  delayMatch8_reg_next(73) <= delayMatch8_reg(72);
  delayMatch8_reg_next(74) <= delayMatch8_reg(73);
  delayMatch8_reg_next(75) <= delayMatch8_reg(74);
  delayMatch8_reg_next(76) <= delayMatch8_reg(75);
  delayMatch8_reg_next(77) <= delayMatch8_reg(76);
  delayMatch8_reg_next(78) <= delayMatch8_reg(77);
  delayMatch8_reg_next(79) <= delayMatch8_reg(78);
  delayMatch8_reg_next(80) <= delayMatch8_reg(79);
  delayMatch8_reg_next(81) <= delayMatch8_reg(80);
  delayMatch8_reg_next(82) <= delayMatch8_reg(81);
  delayMatch8_reg_next(83) <= delayMatch8_reg(82);
  delayMatch8_reg_next(84) <= delayMatch8_reg(83);
  delayMatch8_reg_next(85) <= delayMatch8_reg(84);
  delayMatch8_reg_next(86) <= delayMatch8_reg(85);
  delayMatch8_reg_next(87) <= delayMatch8_reg(86);
  delayMatch8_reg_next(88) <= delayMatch8_reg(87);
  delayMatch8_reg_next(89) <= delayMatch8_reg(88);
  delayMatch8_reg_next(90) <= delayMatch8_reg(89);
  delayMatch8_reg_next(91) <= delayMatch8_reg(90);
  delayMatch8_reg_next(92) <= delayMatch8_reg(91);
  delayMatch8_reg_next(93) <= delayMatch8_reg(92);
  delayMatch8_reg_next(94) <= delayMatch8_reg(93);
  delayMatch8_reg_next(95) <= delayMatch8_reg(94);
  delayMatch8_reg_next(96) <= delayMatch8_reg(95);
  delayMatch8_reg_next(97) <= delayMatch8_reg(96);
  delayMatch8_reg_next(98) <= delayMatch8_reg(97);
  delayMatch8_reg_next(99) <= delayMatch8_reg(98);
  delayMatch8_reg_next(100) <= delayMatch8_reg(99);
  delayMatch8_reg_next(101) <= delayMatch8_reg(100);
  delayMatch8_reg_next(102) <= delayMatch8_reg(101);
  delayMatch8_reg_next(103) <= delayMatch8_reg(102);
  delayMatch8_reg_next(104) <= delayMatch8_reg(103);
  delayMatch8_reg_next(105) <= delayMatch8_reg(104);
  delayMatch8_reg_next(106) <= delayMatch8_reg(105);
  delayMatch8_reg_next(107) <= delayMatch8_reg(106);
  delayMatch8_reg_next(108) <= delayMatch8_reg(107);
  delayMatch8_reg_next(109) <= delayMatch8_reg(108);
  delayMatch8_reg_next(110) <= delayMatch8_reg(109);
  delayMatch8_reg_next(111) <= delayMatch8_reg(110);
  delayMatch8_reg_next(112) <= delayMatch8_reg(111);
  delayMatch8_reg_next(113) <= delayMatch8_reg(112);
  delayMatch8_reg_next(114) <= delayMatch8_reg(113);
  delayMatch8_reg_next(115) <= delayMatch8_reg(114);
  delayMatch8_reg_next(116) <= delayMatch8_reg(115);
  delayMatch8_reg_next(117) <= delayMatch8_reg(116);
  delayMatch8_reg_next(118) <= delayMatch8_reg(117);
  delayMatch8_reg_next(119) <= delayMatch8_reg(118);
  delayMatch8_reg_next(120) <= delayMatch8_reg(119);
  delayMatch8_reg_next(121) <= delayMatch8_reg(120);
  delayMatch8_reg_next(122) <= delayMatch8_reg(121);
  delayMatch8_reg_next(123) <= delayMatch8_reg(122);
  delayMatch8_reg_next(124) <= delayMatch8_reg(123);
  delayMatch8_reg_next(125) <= delayMatch8_reg(124);
  delayMatch8_reg_next(126) <= delayMatch8_reg(125);
  delayMatch8_reg_next(127) <= delayMatch8_reg(126);
  delayMatch8_reg_next(128) <= delayMatch8_reg(127);
  delayMatch8_reg_next(129) <= delayMatch8_reg(128);
  delayMatch8_reg_next(130) <= delayMatch8_reg(129);
  delayMatch8_reg_next(131) <= delayMatch8_reg(130);
  delayMatch8_reg_next(132) <= delayMatch8_reg(131);
  delayMatch8_reg_next(133) <= delayMatch8_reg(132);
  delayMatch8_reg_next(134) <= delayMatch8_reg(133);
  delayMatch8_reg_next(135) <= delayMatch8_reg(134);
  delayMatch8_reg_next(136) <= delayMatch8_reg(135);
  delayMatch8_reg_next(137) <= delayMatch8_reg(136);
  delayMatch8_reg_next(138) <= delayMatch8_reg(137);
  delayMatch8_reg_next(139) <= delayMatch8_reg(138);
  delayMatch8_reg_next(140) <= delayMatch8_reg(139);
  delayMatch8_reg_next(141) <= delayMatch8_reg(140);
  delayMatch8_reg_next(142) <= delayMatch8_reg(141);
  delayMatch8_reg_next(143) <= delayMatch8_reg(142);
  delayMatch8_reg_next(144) <= delayMatch8_reg(143);
  delayMatch8_reg_next(145) <= delayMatch8_reg(144);
  delayMatch8_reg_next(146) <= delayMatch8_reg(145);
  delayMatch8_reg_next(147) <= delayMatch8_reg(146);
  delayMatch8_reg_next(148) <= delayMatch8_reg(147);
  delayMatch8_reg_next(149) <= delayMatch8_reg(148);
  delayMatch8_reg_next(150) <= delayMatch8_reg(149);

  kconst <= X"41200000";

  Units_unsigned <= unsigned(Units_rsvd);

  delayMatch4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delayMatch4_reg(0) <= to_unsigned(0, 32);
      delayMatch4_reg(1) <= to_unsigned(0, 32);
      delayMatch4_reg(2) <= to_unsigned(0, 32);
      delayMatch4_reg(3) <= to_unsigned(0, 32);
      delayMatch4_reg(4) <= to_unsigned(0, 32);
      delayMatch4_reg(5) <= to_unsigned(0, 32);
      delayMatch4_reg(6) <= to_unsigned(0, 32);
      delayMatch4_reg(7) <= to_unsigned(0, 32);
      delayMatch4_reg(8) <= to_unsigned(0, 32);
      delayMatch4_reg(9) <= to_unsigned(0, 32);
      delayMatch4_reg(10) <= to_unsigned(0, 32);
      delayMatch4_reg(11) <= to_unsigned(0, 32);
      delayMatch4_reg(12) <= to_unsigned(0, 32);
      delayMatch4_reg(13) <= to_unsigned(0, 32);
      delayMatch4_reg(14) <= to_unsigned(0, 32);
      delayMatch4_reg(15) <= to_unsigned(0, 32);
      delayMatch4_reg(16) <= to_unsigned(0, 32);
      delayMatch4_reg(17) <= to_unsigned(0, 32);
      delayMatch4_reg(18) <= to_unsigned(0, 32);
      delayMatch4_reg(19) <= to_unsigned(0, 32);
      delayMatch4_reg(20) <= to_unsigned(0, 32);
      delayMatch4_reg(21) <= to_unsigned(0, 32);
      delayMatch4_reg(22) <= to_unsigned(0, 32);
      delayMatch4_reg(23) <= to_unsigned(0, 32);
      delayMatch4_reg(24) <= to_unsigned(0, 32);
      delayMatch4_reg(25) <= to_unsigned(0, 32);
      delayMatch4_reg(26) <= to_unsigned(0, 32);
      delayMatch4_reg(27) <= to_unsigned(0, 32);
      delayMatch4_reg(28) <= to_unsigned(0, 32);
      delayMatch4_reg(29) <= to_unsigned(0, 32);
      delayMatch4_reg(30) <= to_unsigned(0, 32);
      delayMatch4_reg(31) <= to_unsigned(0, 32);
      delayMatch4_reg(32) <= to_unsigned(0, 32);
      delayMatch4_reg(33) <= to_unsigned(0, 32);
      delayMatch4_reg(34) <= to_unsigned(0, 32);
      delayMatch4_reg(35) <= to_unsigned(0, 32);
      delayMatch4_reg(36) <= to_unsigned(0, 32);
      delayMatch4_reg(37) <= to_unsigned(0, 32);
      delayMatch4_reg(38) <= to_unsigned(0, 32);
      delayMatch4_reg(39) <= to_unsigned(0, 32);
      delayMatch4_reg(40) <= to_unsigned(0, 32);
      delayMatch4_reg(41) <= to_unsigned(0, 32);
      delayMatch4_reg(42) <= to_unsigned(0, 32);
      delayMatch4_reg(43) <= to_unsigned(0, 32);
      delayMatch4_reg(44) <= to_unsigned(0, 32);
      delayMatch4_reg(45) <= to_unsigned(0, 32);
      delayMatch4_reg(46) <= to_unsigned(0, 32);
      delayMatch4_reg(47) <= to_unsigned(0, 32);
      delayMatch4_reg(48) <= to_unsigned(0, 32);
      delayMatch4_reg(49) <= to_unsigned(0, 32);
      delayMatch4_reg(50) <= to_unsigned(0, 32);
      delayMatch4_reg(51) <= to_unsigned(0, 32);
      delayMatch4_reg(52) <= to_unsigned(0, 32);
      delayMatch4_reg(53) <= to_unsigned(0, 32);
      delayMatch4_reg(54) <= to_unsigned(0, 32);
      delayMatch4_reg(55) <= to_unsigned(0, 32);
      delayMatch4_reg(56) <= to_unsigned(0, 32);
      delayMatch4_reg(57) <= to_unsigned(0, 32);
      delayMatch4_reg(58) <= to_unsigned(0, 32);
      delayMatch4_reg(59) <= to_unsigned(0, 32);
      delayMatch4_reg(60) <= to_unsigned(0, 32);
      delayMatch4_reg(61) <= to_unsigned(0, 32);
      delayMatch4_reg(62) <= to_unsigned(0, 32);
      delayMatch4_reg(63) <= to_unsigned(0, 32);
      delayMatch4_reg(64) <= to_unsigned(0, 32);
      delayMatch4_reg(65) <= to_unsigned(0, 32);
      delayMatch4_reg(66) <= to_unsigned(0, 32);
      delayMatch4_reg(67) <= to_unsigned(0, 32);
      delayMatch4_reg(68) <= to_unsigned(0, 32);
      delayMatch4_reg(69) <= to_unsigned(0, 32);
      delayMatch4_reg(70) <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        delayMatch4_reg(0) <= delayMatch4_reg_next(0);
        delayMatch4_reg(1) <= delayMatch4_reg_next(1);
        delayMatch4_reg(2) <= delayMatch4_reg_next(2);
        delayMatch4_reg(3) <= delayMatch4_reg_next(3);
        delayMatch4_reg(4) <= delayMatch4_reg_next(4);
        delayMatch4_reg(5) <= delayMatch4_reg_next(5);
        delayMatch4_reg(6) <= delayMatch4_reg_next(6);
        delayMatch4_reg(7) <= delayMatch4_reg_next(7);
        delayMatch4_reg(8) <= delayMatch4_reg_next(8);
        delayMatch4_reg(9) <= delayMatch4_reg_next(9);
        delayMatch4_reg(10) <= delayMatch4_reg_next(10);
        delayMatch4_reg(11) <= delayMatch4_reg_next(11);
        delayMatch4_reg(12) <= delayMatch4_reg_next(12);
        delayMatch4_reg(13) <= delayMatch4_reg_next(13);
        delayMatch4_reg(14) <= delayMatch4_reg_next(14);
        delayMatch4_reg(15) <= delayMatch4_reg_next(15);
        delayMatch4_reg(16) <= delayMatch4_reg_next(16);
        delayMatch4_reg(17) <= delayMatch4_reg_next(17);
        delayMatch4_reg(18) <= delayMatch4_reg_next(18);
        delayMatch4_reg(19) <= delayMatch4_reg_next(19);
        delayMatch4_reg(20) <= delayMatch4_reg_next(20);
        delayMatch4_reg(21) <= delayMatch4_reg_next(21);
        delayMatch4_reg(22) <= delayMatch4_reg_next(22);
        delayMatch4_reg(23) <= delayMatch4_reg_next(23);
        delayMatch4_reg(24) <= delayMatch4_reg_next(24);
        delayMatch4_reg(25) <= delayMatch4_reg_next(25);
        delayMatch4_reg(26) <= delayMatch4_reg_next(26);
        delayMatch4_reg(27) <= delayMatch4_reg_next(27);
        delayMatch4_reg(28) <= delayMatch4_reg_next(28);
        delayMatch4_reg(29) <= delayMatch4_reg_next(29);
        delayMatch4_reg(30) <= delayMatch4_reg_next(30);
        delayMatch4_reg(31) <= delayMatch4_reg_next(31);
        delayMatch4_reg(32) <= delayMatch4_reg_next(32);
        delayMatch4_reg(33) <= delayMatch4_reg_next(33);
        delayMatch4_reg(34) <= delayMatch4_reg_next(34);
        delayMatch4_reg(35) <= delayMatch4_reg_next(35);
        delayMatch4_reg(36) <= delayMatch4_reg_next(36);
        delayMatch4_reg(37) <= delayMatch4_reg_next(37);
        delayMatch4_reg(38) <= delayMatch4_reg_next(38);
        delayMatch4_reg(39) <= delayMatch4_reg_next(39);
        delayMatch4_reg(40) <= delayMatch4_reg_next(40);
        delayMatch4_reg(41) <= delayMatch4_reg_next(41);
        delayMatch4_reg(42) <= delayMatch4_reg_next(42);
        delayMatch4_reg(43) <= delayMatch4_reg_next(43);
        delayMatch4_reg(44) <= delayMatch4_reg_next(44);
        delayMatch4_reg(45) <= delayMatch4_reg_next(45);
        delayMatch4_reg(46) <= delayMatch4_reg_next(46);
        delayMatch4_reg(47) <= delayMatch4_reg_next(47);
        delayMatch4_reg(48) <= delayMatch4_reg_next(48);
        delayMatch4_reg(49) <= delayMatch4_reg_next(49);
        delayMatch4_reg(50) <= delayMatch4_reg_next(50);
        delayMatch4_reg(51) <= delayMatch4_reg_next(51);
        delayMatch4_reg(52) <= delayMatch4_reg_next(52);
        delayMatch4_reg(53) <= delayMatch4_reg_next(53);
        delayMatch4_reg(54) <= delayMatch4_reg_next(54);
        delayMatch4_reg(55) <= delayMatch4_reg_next(55);
        delayMatch4_reg(56) <= delayMatch4_reg_next(56);
        delayMatch4_reg(57) <= delayMatch4_reg_next(57);
        delayMatch4_reg(58) <= delayMatch4_reg_next(58);
        delayMatch4_reg(59) <= delayMatch4_reg_next(59);
        delayMatch4_reg(60) <= delayMatch4_reg_next(60);
        delayMatch4_reg(61) <= delayMatch4_reg_next(61);
        delayMatch4_reg(62) <= delayMatch4_reg_next(62);
        delayMatch4_reg(63) <= delayMatch4_reg_next(63);
        delayMatch4_reg(64) <= delayMatch4_reg_next(64);
        delayMatch4_reg(65) <= delayMatch4_reg_next(65);
        delayMatch4_reg(66) <= delayMatch4_reg_next(66);
        delayMatch4_reg(67) <= delayMatch4_reg_next(67);
        delayMatch4_reg(68) <= delayMatch4_reg_next(68);
        delayMatch4_reg(69) <= delayMatch4_reg_next(69);
        delayMatch4_reg(70) <= delayMatch4_reg_next(70);
      END IF;
    END IF;
  END PROCESS delayMatch4_process;

  Units_rsvd_1 <= delayMatch4_reg(70);
  delayMatch4_reg_next(0) <= Units_unsigned;
  delayMatch4_reg_next(1) <= delayMatch4_reg(0);
  delayMatch4_reg_next(2) <= delayMatch4_reg(1);
  delayMatch4_reg_next(3) <= delayMatch4_reg(2);
  delayMatch4_reg_next(4) <= delayMatch4_reg(3);
  delayMatch4_reg_next(5) <= delayMatch4_reg(4);
  delayMatch4_reg_next(6) <= delayMatch4_reg(5);
  delayMatch4_reg_next(7) <= delayMatch4_reg(6);
  delayMatch4_reg_next(8) <= delayMatch4_reg(7);
  delayMatch4_reg_next(9) <= delayMatch4_reg(8);
  delayMatch4_reg_next(10) <= delayMatch4_reg(9);
  delayMatch4_reg_next(11) <= delayMatch4_reg(10);
  delayMatch4_reg_next(12) <= delayMatch4_reg(11);
  delayMatch4_reg_next(13) <= delayMatch4_reg(12);
  delayMatch4_reg_next(14) <= delayMatch4_reg(13);
  delayMatch4_reg_next(15) <= delayMatch4_reg(14);
  delayMatch4_reg_next(16) <= delayMatch4_reg(15);
  delayMatch4_reg_next(17) <= delayMatch4_reg(16);
  delayMatch4_reg_next(18) <= delayMatch4_reg(17);
  delayMatch4_reg_next(19) <= delayMatch4_reg(18);
  delayMatch4_reg_next(20) <= delayMatch4_reg(19);
  delayMatch4_reg_next(21) <= delayMatch4_reg(20);
  delayMatch4_reg_next(22) <= delayMatch4_reg(21);
  delayMatch4_reg_next(23) <= delayMatch4_reg(22);
  delayMatch4_reg_next(24) <= delayMatch4_reg(23);
  delayMatch4_reg_next(25) <= delayMatch4_reg(24);
  delayMatch4_reg_next(26) <= delayMatch4_reg(25);
  delayMatch4_reg_next(27) <= delayMatch4_reg(26);
  delayMatch4_reg_next(28) <= delayMatch4_reg(27);
  delayMatch4_reg_next(29) <= delayMatch4_reg(28);
  delayMatch4_reg_next(30) <= delayMatch4_reg(29);
  delayMatch4_reg_next(31) <= delayMatch4_reg(30);
  delayMatch4_reg_next(32) <= delayMatch4_reg(31);
  delayMatch4_reg_next(33) <= delayMatch4_reg(32);
  delayMatch4_reg_next(34) <= delayMatch4_reg(33);
  delayMatch4_reg_next(35) <= delayMatch4_reg(34);
  delayMatch4_reg_next(36) <= delayMatch4_reg(35);
  delayMatch4_reg_next(37) <= delayMatch4_reg(36);
  delayMatch4_reg_next(38) <= delayMatch4_reg(37);
  delayMatch4_reg_next(39) <= delayMatch4_reg(38);
  delayMatch4_reg_next(40) <= delayMatch4_reg(39);
  delayMatch4_reg_next(41) <= delayMatch4_reg(40);
  delayMatch4_reg_next(42) <= delayMatch4_reg(41);
  delayMatch4_reg_next(43) <= delayMatch4_reg(42);
  delayMatch4_reg_next(44) <= delayMatch4_reg(43);
  delayMatch4_reg_next(45) <= delayMatch4_reg(44);
  delayMatch4_reg_next(46) <= delayMatch4_reg(45);
  delayMatch4_reg_next(47) <= delayMatch4_reg(46);
  delayMatch4_reg_next(48) <= delayMatch4_reg(47);
  delayMatch4_reg_next(49) <= delayMatch4_reg(48);
  delayMatch4_reg_next(50) <= delayMatch4_reg(49);
  delayMatch4_reg_next(51) <= delayMatch4_reg(50);
  delayMatch4_reg_next(52) <= delayMatch4_reg(51);
  delayMatch4_reg_next(53) <= delayMatch4_reg(52);
  delayMatch4_reg_next(54) <= delayMatch4_reg(53);
  delayMatch4_reg_next(55) <= delayMatch4_reg(54);
  delayMatch4_reg_next(56) <= delayMatch4_reg(55);
  delayMatch4_reg_next(57) <= delayMatch4_reg(56);
  delayMatch4_reg_next(58) <= delayMatch4_reg(57);
  delayMatch4_reg_next(59) <= delayMatch4_reg(58);
  delayMatch4_reg_next(60) <= delayMatch4_reg(59);
  delayMatch4_reg_next(61) <= delayMatch4_reg(60);
  delayMatch4_reg_next(62) <= delayMatch4_reg(61);
  delayMatch4_reg_next(63) <= delayMatch4_reg(62);
  delayMatch4_reg_next(64) <= delayMatch4_reg(63);
  delayMatch4_reg_next(65) <= delayMatch4_reg(64);
  delayMatch4_reg_next(66) <= delayMatch4_reg(65);
  delayMatch4_reg_next(67) <= delayMatch4_reg(66);
  delayMatch4_reg_next(68) <= delayMatch4_reg(67);
  delayMatch4_reg_next(69) <= delayMatch4_reg(68);
  delayMatch4_reg_next(70) <= delayMatch4_reg(69);

  Type_unsigned <= unsigned(Type_rsvd);

  delayMatch2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delayMatch2_reg(0) <= to_unsigned(0, 32);
      delayMatch2_reg(1) <= to_unsigned(0, 32);
      delayMatch2_reg(2) <= to_unsigned(0, 32);
      delayMatch2_reg(3) <= to_unsigned(0, 32);
      delayMatch2_reg(4) <= to_unsigned(0, 32);
      delayMatch2_reg(5) <= to_unsigned(0, 32);
      delayMatch2_reg(6) <= to_unsigned(0, 32);
      delayMatch2_reg(7) <= to_unsigned(0, 32);
      delayMatch2_reg(8) <= to_unsigned(0, 32);
      delayMatch2_reg(9) <= to_unsigned(0, 32);
      delayMatch2_reg(10) <= to_unsigned(0, 32);
      delayMatch2_reg(11) <= to_unsigned(0, 32);
      delayMatch2_reg(12) <= to_unsigned(0, 32);
      delayMatch2_reg(13) <= to_unsigned(0, 32);
      delayMatch2_reg(14) <= to_unsigned(0, 32);
      delayMatch2_reg(15) <= to_unsigned(0, 32);
      delayMatch2_reg(16) <= to_unsigned(0, 32);
      delayMatch2_reg(17) <= to_unsigned(0, 32);
      delayMatch2_reg(18) <= to_unsigned(0, 32);
      delayMatch2_reg(19) <= to_unsigned(0, 32);
      delayMatch2_reg(20) <= to_unsigned(0, 32);
      delayMatch2_reg(21) <= to_unsigned(0, 32);
      delayMatch2_reg(22) <= to_unsigned(0, 32);
      delayMatch2_reg(23) <= to_unsigned(0, 32);
      delayMatch2_reg(24) <= to_unsigned(0, 32);
      delayMatch2_reg(25) <= to_unsigned(0, 32);
      delayMatch2_reg(26) <= to_unsigned(0, 32);
      delayMatch2_reg(27) <= to_unsigned(0, 32);
      delayMatch2_reg(28) <= to_unsigned(0, 32);
      delayMatch2_reg(29) <= to_unsigned(0, 32);
      delayMatch2_reg(30) <= to_unsigned(0, 32);
      delayMatch2_reg(31) <= to_unsigned(0, 32);
      delayMatch2_reg(32) <= to_unsigned(0, 32);
      delayMatch2_reg(33) <= to_unsigned(0, 32);
      delayMatch2_reg(34) <= to_unsigned(0, 32);
      delayMatch2_reg(35) <= to_unsigned(0, 32);
      delayMatch2_reg(36) <= to_unsigned(0, 32);
      delayMatch2_reg(37) <= to_unsigned(0, 32);
      delayMatch2_reg(38) <= to_unsigned(0, 32);
      delayMatch2_reg(39) <= to_unsigned(0, 32);
      delayMatch2_reg(40) <= to_unsigned(0, 32);
      delayMatch2_reg(41) <= to_unsigned(0, 32);
      delayMatch2_reg(42) <= to_unsigned(0, 32);
      delayMatch2_reg(43) <= to_unsigned(0, 32);
      delayMatch2_reg(44) <= to_unsigned(0, 32);
      delayMatch2_reg(45) <= to_unsigned(0, 32);
      delayMatch2_reg(46) <= to_unsigned(0, 32);
      delayMatch2_reg(47) <= to_unsigned(0, 32);
      delayMatch2_reg(48) <= to_unsigned(0, 32);
      delayMatch2_reg(49) <= to_unsigned(0, 32);
      delayMatch2_reg(50) <= to_unsigned(0, 32);
      delayMatch2_reg(51) <= to_unsigned(0, 32);
      delayMatch2_reg(52) <= to_unsigned(0, 32);
      delayMatch2_reg(53) <= to_unsigned(0, 32);
      delayMatch2_reg(54) <= to_unsigned(0, 32);
      delayMatch2_reg(55) <= to_unsigned(0, 32);
      delayMatch2_reg(56) <= to_unsigned(0, 32);
      delayMatch2_reg(57) <= to_unsigned(0, 32);
      delayMatch2_reg(58) <= to_unsigned(0, 32);
      delayMatch2_reg(59) <= to_unsigned(0, 32);
      delayMatch2_reg(60) <= to_unsigned(0, 32);
      delayMatch2_reg(61) <= to_unsigned(0, 32);
      delayMatch2_reg(62) <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        delayMatch2_reg(0) <= delayMatch2_reg_next(0);
        delayMatch2_reg(1) <= delayMatch2_reg_next(1);
        delayMatch2_reg(2) <= delayMatch2_reg_next(2);
        delayMatch2_reg(3) <= delayMatch2_reg_next(3);
        delayMatch2_reg(4) <= delayMatch2_reg_next(4);
        delayMatch2_reg(5) <= delayMatch2_reg_next(5);
        delayMatch2_reg(6) <= delayMatch2_reg_next(6);
        delayMatch2_reg(7) <= delayMatch2_reg_next(7);
        delayMatch2_reg(8) <= delayMatch2_reg_next(8);
        delayMatch2_reg(9) <= delayMatch2_reg_next(9);
        delayMatch2_reg(10) <= delayMatch2_reg_next(10);
        delayMatch2_reg(11) <= delayMatch2_reg_next(11);
        delayMatch2_reg(12) <= delayMatch2_reg_next(12);
        delayMatch2_reg(13) <= delayMatch2_reg_next(13);
        delayMatch2_reg(14) <= delayMatch2_reg_next(14);
        delayMatch2_reg(15) <= delayMatch2_reg_next(15);
        delayMatch2_reg(16) <= delayMatch2_reg_next(16);
        delayMatch2_reg(17) <= delayMatch2_reg_next(17);
        delayMatch2_reg(18) <= delayMatch2_reg_next(18);
        delayMatch2_reg(19) <= delayMatch2_reg_next(19);
        delayMatch2_reg(20) <= delayMatch2_reg_next(20);
        delayMatch2_reg(21) <= delayMatch2_reg_next(21);
        delayMatch2_reg(22) <= delayMatch2_reg_next(22);
        delayMatch2_reg(23) <= delayMatch2_reg_next(23);
        delayMatch2_reg(24) <= delayMatch2_reg_next(24);
        delayMatch2_reg(25) <= delayMatch2_reg_next(25);
        delayMatch2_reg(26) <= delayMatch2_reg_next(26);
        delayMatch2_reg(27) <= delayMatch2_reg_next(27);
        delayMatch2_reg(28) <= delayMatch2_reg_next(28);
        delayMatch2_reg(29) <= delayMatch2_reg_next(29);
        delayMatch2_reg(30) <= delayMatch2_reg_next(30);
        delayMatch2_reg(31) <= delayMatch2_reg_next(31);
        delayMatch2_reg(32) <= delayMatch2_reg_next(32);
        delayMatch2_reg(33) <= delayMatch2_reg_next(33);
        delayMatch2_reg(34) <= delayMatch2_reg_next(34);
        delayMatch2_reg(35) <= delayMatch2_reg_next(35);
        delayMatch2_reg(36) <= delayMatch2_reg_next(36);
        delayMatch2_reg(37) <= delayMatch2_reg_next(37);
        delayMatch2_reg(38) <= delayMatch2_reg_next(38);
        delayMatch2_reg(39) <= delayMatch2_reg_next(39);
        delayMatch2_reg(40) <= delayMatch2_reg_next(40);
        delayMatch2_reg(41) <= delayMatch2_reg_next(41);
        delayMatch2_reg(42) <= delayMatch2_reg_next(42);
        delayMatch2_reg(43) <= delayMatch2_reg_next(43);
        delayMatch2_reg(44) <= delayMatch2_reg_next(44);
        delayMatch2_reg(45) <= delayMatch2_reg_next(45);
        delayMatch2_reg(46) <= delayMatch2_reg_next(46);
        delayMatch2_reg(47) <= delayMatch2_reg_next(47);
        delayMatch2_reg(48) <= delayMatch2_reg_next(48);
        delayMatch2_reg(49) <= delayMatch2_reg_next(49);
        delayMatch2_reg(50) <= delayMatch2_reg_next(50);
        delayMatch2_reg(51) <= delayMatch2_reg_next(51);
        delayMatch2_reg(52) <= delayMatch2_reg_next(52);
        delayMatch2_reg(53) <= delayMatch2_reg_next(53);
        delayMatch2_reg(54) <= delayMatch2_reg_next(54);
        delayMatch2_reg(55) <= delayMatch2_reg_next(55);
        delayMatch2_reg(56) <= delayMatch2_reg_next(56);
        delayMatch2_reg(57) <= delayMatch2_reg_next(57);
        delayMatch2_reg(58) <= delayMatch2_reg_next(58);
        delayMatch2_reg(59) <= delayMatch2_reg_next(59);
        delayMatch2_reg(60) <= delayMatch2_reg_next(60);
        delayMatch2_reg(61) <= delayMatch2_reg_next(61);
        delayMatch2_reg(62) <= delayMatch2_reg_next(62);
      END IF;
    END IF;
  END PROCESS delayMatch2_process;

  Type_rsvd_1 <= delayMatch2_reg(62);
  delayMatch2_reg_next(0) <= Type_unsigned;
  delayMatch2_reg_next(1) <= delayMatch2_reg(0);
  delayMatch2_reg_next(2) <= delayMatch2_reg(1);
  delayMatch2_reg_next(3) <= delayMatch2_reg(2);
  delayMatch2_reg_next(4) <= delayMatch2_reg(3);
  delayMatch2_reg_next(5) <= delayMatch2_reg(4);
  delayMatch2_reg_next(6) <= delayMatch2_reg(5);
  delayMatch2_reg_next(7) <= delayMatch2_reg(6);
  delayMatch2_reg_next(8) <= delayMatch2_reg(7);
  delayMatch2_reg_next(9) <= delayMatch2_reg(8);
  delayMatch2_reg_next(10) <= delayMatch2_reg(9);
  delayMatch2_reg_next(11) <= delayMatch2_reg(10);
  delayMatch2_reg_next(12) <= delayMatch2_reg(11);
  delayMatch2_reg_next(13) <= delayMatch2_reg(12);
  delayMatch2_reg_next(14) <= delayMatch2_reg(13);
  delayMatch2_reg_next(15) <= delayMatch2_reg(14);
  delayMatch2_reg_next(16) <= delayMatch2_reg(15);
  delayMatch2_reg_next(17) <= delayMatch2_reg(16);
  delayMatch2_reg_next(18) <= delayMatch2_reg(17);
  delayMatch2_reg_next(19) <= delayMatch2_reg(18);
  delayMatch2_reg_next(20) <= delayMatch2_reg(19);
  delayMatch2_reg_next(21) <= delayMatch2_reg(20);
  delayMatch2_reg_next(22) <= delayMatch2_reg(21);
  delayMatch2_reg_next(23) <= delayMatch2_reg(22);
  delayMatch2_reg_next(24) <= delayMatch2_reg(23);
  delayMatch2_reg_next(25) <= delayMatch2_reg(24);
  delayMatch2_reg_next(26) <= delayMatch2_reg(25);
  delayMatch2_reg_next(27) <= delayMatch2_reg(26);
  delayMatch2_reg_next(28) <= delayMatch2_reg(27);
  delayMatch2_reg_next(29) <= delayMatch2_reg(28);
  delayMatch2_reg_next(30) <= delayMatch2_reg(29);
  delayMatch2_reg_next(31) <= delayMatch2_reg(30);
  delayMatch2_reg_next(32) <= delayMatch2_reg(31);
  delayMatch2_reg_next(33) <= delayMatch2_reg(32);
  delayMatch2_reg_next(34) <= delayMatch2_reg(33);
  delayMatch2_reg_next(35) <= delayMatch2_reg(34);
  delayMatch2_reg_next(36) <= delayMatch2_reg(35);
  delayMatch2_reg_next(37) <= delayMatch2_reg(36);
  delayMatch2_reg_next(38) <= delayMatch2_reg(37);
  delayMatch2_reg_next(39) <= delayMatch2_reg(38);
  delayMatch2_reg_next(40) <= delayMatch2_reg(39);
  delayMatch2_reg_next(41) <= delayMatch2_reg(40);
  delayMatch2_reg_next(42) <= delayMatch2_reg(41);
  delayMatch2_reg_next(43) <= delayMatch2_reg(42);
  delayMatch2_reg_next(44) <= delayMatch2_reg(43);
  delayMatch2_reg_next(45) <= delayMatch2_reg(44);
  delayMatch2_reg_next(46) <= delayMatch2_reg(45);
  delayMatch2_reg_next(47) <= delayMatch2_reg(46);
  delayMatch2_reg_next(48) <= delayMatch2_reg(47);
  delayMatch2_reg_next(49) <= delayMatch2_reg(48);
  delayMatch2_reg_next(50) <= delayMatch2_reg(49);
  delayMatch2_reg_next(51) <= delayMatch2_reg(50);
  delayMatch2_reg_next(52) <= delayMatch2_reg(51);
  delayMatch2_reg_next(53) <= delayMatch2_reg(52);
  delayMatch2_reg_next(54) <= delayMatch2_reg(53);
  delayMatch2_reg_next(55) <= delayMatch2_reg(54);
  delayMatch2_reg_next(56) <= delayMatch2_reg(55);
  delayMatch2_reg_next(57) <= delayMatch2_reg(56);
  delayMatch2_reg_next(58) <= delayMatch2_reg(57);
  delayMatch2_reg_next(59) <= delayMatch2_reg(58);
  delayMatch2_reg_next(60) <= delayMatch2_reg(59);
  delayMatch2_reg_next(61) <= delayMatch2_reg(60);
  delayMatch2_reg_next(62) <= delayMatch2_reg(61);

  delayMatch_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delayMatch_reg(0) <= X"00000000";
      delayMatch_reg(1) <= X"00000000";
      delayMatch_reg(2) <= X"00000000";
      delayMatch_reg(3) <= X"00000000";
      delayMatch_reg(4) <= X"00000000";
      delayMatch_reg(5) <= X"00000000";
      delayMatch_reg(6) <= X"00000000";
      delayMatch_reg(7) <= X"00000000";
      delayMatch_reg(8) <= X"00000000";
      delayMatch_reg(9) <= X"00000000";
      delayMatch_reg(10) <= X"00000000";
      delayMatch_reg(11) <= X"00000000";
      delayMatch_reg(12) <= X"00000000";
      delayMatch_reg(13) <= X"00000000";
      delayMatch_reg(14) <= X"00000000";
      delayMatch_reg(15) <= X"00000000";
      delayMatch_reg(16) <= X"00000000";
      delayMatch_reg(17) <= X"00000000";
      delayMatch_reg(18) <= X"00000000";
      delayMatch_reg(19) <= X"00000000";
      delayMatch_reg(20) <= X"00000000";
      delayMatch_reg(21) <= X"00000000";
      delayMatch_reg(22) <= X"00000000";
      delayMatch_reg(23) <= X"00000000";
      delayMatch_reg(24) <= X"00000000";
      delayMatch_reg(25) <= X"00000000";
      delayMatch_reg(26) <= X"00000000";
      delayMatch_reg(27) <= X"00000000";
      delayMatch_reg(28) <= X"00000000";
      delayMatch_reg(29) <= X"00000000";
      delayMatch_reg(30) <= X"00000000";
      delayMatch_reg(31) <= X"00000000";
      delayMatch_reg(32) <= X"00000000";
      delayMatch_reg(33) <= X"00000000";
      delayMatch_reg(34) <= X"00000000";
      delayMatch_reg(35) <= X"00000000";
      delayMatch_reg(36) <= X"00000000";
      delayMatch_reg(37) <= X"00000000";
      delayMatch_reg(38) <= X"00000000";
      delayMatch_reg(39) <= X"00000000";
      delayMatch_reg(40) <= X"00000000";
      delayMatch_reg(41) <= X"00000000";
      delayMatch_reg(42) <= X"00000000";
      delayMatch_reg(43) <= X"00000000";
      delayMatch_reg(44) <= X"00000000";
      delayMatch_reg(45) <= X"00000000";
      delayMatch_reg(46) <= X"00000000";
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        delayMatch_reg(0) <= delayMatch_reg_next(0);
        delayMatch_reg(1) <= delayMatch_reg_next(1);
        delayMatch_reg(2) <= delayMatch_reg_next(2);
        delayMatch_reg(3) <= delayMatch_reg_next(3);
        delayMatch_reg(4) <= delayMatch_reg_next(4);
        delayMatch_reg(5) <= delayMatch_reg_next(5);
        delayMatch_reg(6) <= delayMatch_reg_next(6);
        delayMatch_reg(7) <= delayMatch_reg_next(7);
        delayMatch_reg(8) <= delayMatch_reg_next(8);
        delayMatch_reg(9) <= delayMatch_reg_next(9);
        delayMatch_reg(10) <= delayMatch_reg_next(10);
        delayMatch_reg(11) <= delayMatch_reg_next(11);
        delayMatch_reg(12) <= delayMatch_reg_next(12);
        delayMatch_reg(13) <= delayMatch_reg_next(13);
        delayMatch_reg(14) <= delayMatch_reg_next(14);
        delayMatch_reg(15) <= delayMatch_reg_next(15);
        delayMatch_reg(16) <= delayMatch_reg_next(16);
        delayMatch_reg(17) <= delayMatch_reg_next(17);
        delayMatch_reg(18) <= delayMatch_reg_next(18);
        delayMatch_reg(19) <= delayMatch_reg_next(19);
        delayMatch_reg(20) <= delayMatch_reg_next(20);
        delayMatch_reg(21) <= delayMatch_reg_next(21);
        delayMatch_reg(22) <= delayMatch_reg_next(22);
        delayMatch_reg(23) <= delayMatch_reg_next(23);
        delayMatch_reg(24) <= delayMatch_reg_next(24);
        delayMatch_reg(25) <= delayMatch_reg_next(25);
        delayMatch_reg(26) <= delayMatch_reg_next(26);
        delayMatch_reg(27) <= delayMatch_reg_next(27);
        delayMatch_reg(28) <= delayMatch_reg_next(28);
        delayMatch_reg(29) <= delayMatch_reg_next(29);
        delayMatch_reg(30) <= delayMatch_reg_next(30);
        delayMatch_reg(31) <= delayMatch_reg_next(31);
        delayMatch_reg(32) <= delayMatch_reg_next(32);
        delayMatch_reg(33) <= delayMatch_reg_next(33);
        delayMatch_reg(34) <= delayMatch_reg_next(34);
        delayMatch_reg(35) <= delayMatch_reg_next(35);
        delayMatch_reg(36) <= delayMatch_reg_next(36);
        delayMatch_reg(37) <= delayMatch_reg_next(37);
        delayMatch_reg(38) <= delayMatch_reg_next(38);
        delayMatch_reg(39) <= delayMatch_reg_next(39);
        delayMatch_reg(40) <= delayMatch_reg_next(40);
        delayMatch_reg(41) <= delayMatch_reg_next(41);
        delayMatch_reg(42) <= delayMatch_reg_next(42);
        delayMatch_reg(43) <= delayMatch_reg_next(43);
        delayMatch_reg(44) <= delayMatch_reg_next(44);
        delayMatch_reg(45) <= delayMatch_reg_next(45);
        delayMatch_reg(46) <= delayMatch_reg_next(46);
      END IF;
    END IF;
  END PROCESS delayMatch_process;

  Float_Typecast2_out1_1 <= delayMatch_reg(46);
  delayMatch_reg_next(0) <= Float_Typecast2_out1;
  delayMatch_reg_next(1) <= delayMatch_reg(0);
  delayMatch_reg_next(2) <= delayMatch_reg(1);
  delayMatch_reg_next(3) <= delayMatch_reg(2);
  delayMatch_reg_next(4) <= delayMatch_reg(3);
  delayMatch_reg_next(5) <= delayMatch_reg(4);
  delayMatch_reg_next(6) <= delayMatch_reg(5);
  delayMatch_reg_next(7) <= delayMatch_reg(6);
  delayMatch_reg_next(8) <= delayMatch_reg(7);
  delayMatch_reg_next(9) <= delayMatch_reg(8);
  delayMatch_reg_next(10) <= delayMatch_reg(9);
  delayMatch_reg_next(11) <= delayMatch_reg(10);
  delayMatch_reg_next(12) <= delayMatch_reg(11);
  delayMatch_reg_next(13) <= delayMatch_reg(12);
  delayMatch_reg_next(14) <= delayMatch_reg(13);
  delayMatch_reg_next(15) <= delayMatch_reg(14);
  delayMatch_reg_next(16) <= delayMatch_reg(15);
  delayMatch_reg_next(17) <= delayMatch_reg(16);
  delayMatch_reg_next(18) <= delayMatch_reg(17);
  delayMatch_reg_next(19) <= delayMatch_reg(18);
  delayMatch_reg_next(20) <= delayMatch_reg(19);
  delayMatch_reg_next(21) <= delayMatch_reg(20);
  delayMatch_reg_next(22) <= delayMatch_reg(21);
  delayMatch_reg_next(23) <= delayMatch_reg(22);
  delayMatch_reg_next(24) <= delayMatch_reg(23);
  delayMatch_reg_next(25) <= delayMatch_reg(24);
  delayMatch_reg_next(26) <= delayMatch_reg(25);
  delayMatch_reg_next(27) <= delayMatch_reg(26);
  delayMatch_reg_next(28) <= delayMatch_reg(27);
  delayMatch_reg_next(29) <= delayMatch_reg(28);
  delayMatch_reg_next(30) <= delayMatch_reg(29);
  delayMatch_reg_next(31) <= delayMatch_reg(30);
  delayMatch_reg_next(32) <= delayMatch_reg(31);
  delayMatch_reg_next(33) <= delayMatch_reg(32);
  delayMatch_reg_next(34) <= delayMatch_reg(33);
  delayMatch_reg_next(35) <= delayMatch_reg(34);
  delayMatch_reg_next(36) <= delayMatch_reg(35);
  delayMatch_reg_next(37) <= delayMatch_reg(36);
  delayMatch_reg_next(38) <= delayMatch_reg(37);
  delayMatch_reg_next(39) <= delayMatch_reg(38);
  delayMatch_reg_next(40) <= delayMatch_reg(39);
  delayMatch_reg_next(41) <= delayMatch_reg(40);
  delayMatch_reg_next(42) <= delayMatch_reg(41);
  delayMatch_reg_next(43) <= delayMatch_reg(42);
  delayMatch_reg_next(44) <= delayMatch_reg(43);
  delayMatch_reg_next(45) <= delayMatch_reg(44);
  delayMatch_reg_next(46) <= delayMatch_reg(45);

  delayMatch3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delayMatch3_reg(0) <= X"00000000";
      delayMatch3_reg(1) <= X"00000000";
      delayMatch3_reg(2) <= X"00000000";
      delayMatch3_reg(3) <= X"00000000";
      delayMatch3_reg(4) <= X"00000000";
      delayMatch3_reg(5) <= X"00000000";
      delayMatch3_reg(6) <= X"00000000";
      delayMatch3_reg(7) <= X"00000000";
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        delayMatch3_reg(0) <= delayMatch3_reg_next(0);
        delayMatch3_reg(1) <= delayMatch3_reg_next(1);
        delayMatch3_reg(2) <= delayMatch3_reg_next(2);
        delayMatch3_reg(3) <= delayMatch3_reg_next(3);
        delayMatch3_reg(4) <= delayMatch3_reg_next(4);
        delayMatch3_reg(5) <= delayMatch3_reg_next(5);
        delayMatch3_reg(6) <= delayMatch3_reg_next(6);
        delayMatch3_reg(7) <= delayMatch3_reg_next(7);
      END IF;
    END IF;
  END PROCESS delayMatch3_process;

  Product_out1_1 <= delayMatch3_reg(7);
  delayMatch3_reg_next(0) <= Product_out1;
  delayMatch3_reg_next(1) <= delayMatch3_reg(0);
  delayMatch3_reg_next(2) <= delayMatch3_reg(1);
  delayMatch3_reg_next(3) <= delayMatch3_reg(2);
  delayMatch3_reg_next(4) <= delayMatch3_reg(3);
  delayMatch3_reg_next(5) <= delayMatch3_reg(4);
  delayMatch3_reg_next(6) <= delayMatch3_reg(5);
  delayMatch3_reg_next(7) <= delayMatch3_reg(6);

  delayMatch1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delayMatch1_reg(0) <= X"00000000";
      delayMatch1_reg(1) <= X"00000000";
      delayMatch1_reg(2) <= X"00000000";
      delayMatch1_reg(3) <= X"00000000";
      delayMatch1_reg(4) <= X"00000000";
      delayMatch1_reg(5) <= X"00000000";
      delayMatch1_reg(6) <= X"00000000";
      delayMatch1_reg(7) <= X"00000000";
      delayMatch1_reg(8) <= X"00000000";
      delayMatch1_reg(9) <= X"00000000";
      delayMatch1_reg(10) <= X"00000000";
      delayMatch1_reg(11) <= X"00000000";
      delayMatch1_reg(12) <= X"00000000";
      delayMatch1_reg(13) <= X"00000000";
      delayMatch1_reg(14) <= X"00000000";
      delayMatch1_reg(15) <= X"00000000";
      delayMatch1_reg(16) <= X"00000000";
      delayMatch1_reg(17) <= X"00000000";
      delayMatch1_reg(18) <= X"00000000";
      delayMatch1_reg(19) <= X"00000000";
      delayMatch1_reg(20) <= X"00000000";
      delayMatch1_reg(21) <= X"00000000";
      delayMatch1_reg(22) <= X"00000000";
      delayMatch1_reg(23) <= X"00000000";
      delayMatch1_reg(24) <= X"00000000";
      delayMatch1_reg(25) <= X"00000000";
      delayMatch1_reg(26) <= X"00000000";
      delayMatch1_reg(27) <= X"00000000";
      delayMatch1_reg(28) <= X"00000000";
      delayMatch1_reg(29) <= X"00000000";
      delayMatch1_reg(30) <= X"00000000";
      delayMatch1_reg(31) <= X"00000000";
      delayMatch1_reg(32) <= X"00000000";
      delayMatch1_reg(33) <= X"00000000";
      delayMatch1_reg(34) <= X"00000000";
      delayMatch1_reg(35) <= X"00000000";
      delayMatch1_reg(36) <= X"00000000";
      delayMatch1_reg(37) <= X"00000000";
      delayMatch1_reg(38) <= X"00000000";
      delayMatch1_reg(39) <= X"00000000";
      delayMatch1_reg(40) <= X"00000000";
      delayMatch1_reg(41) <= X"00000000";
      delayMatch1_reg(42) <= X"00000000";
      delayMatch1_reg(43) <= X"00000000";
      delayMatch1_reg(44) <= X"00000000";
      delayMatch1_reg(45) <= X"00000000";
      delayMatch1_reg(46) <= X"00000000";
      delayMatch1_reg(47) <= X"00000000";
      delayMatch1_reg(48) <= X"00000000";
      delayMatch1_reg(49) <= X"00000000";
      delayMatch1_reg(50) <= X"00000000";
      delayMatch1_reg(51) <= X"00000000";
      delayMatch1_reg(52) <= X"00000000";
      delayMatch1_reg(53) <= X"00000000";
      delayMatch1_reg(54) <= X"00000000";
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        delayMatch1_reg(0) <= delayMatch1_reg_next(0);
        delayMatch1_reg(1) <= delayMatch1_reg_next(1);
        delayMatch1_reg(2) <= delayMatch1_reg_next(2);
        delayMatch1_reg(3) <= delayMatch1_reg_next(3);
        delayMatch1_reg(4) <= delayMatch1_reg_next(4);
        delayMatch1_reg(5) <= delayMatch1_reg_next(5);
        delayMatch1_reg(6) <= delayMatch1_reg_next(6);
        delayMatch1_reg(7) <= delayMatch1_reg_next(7);
        delayMatch1_reg(8) <= delayMatch1_reg_next(8);
        delayMatch1_reg(9) <= delayMatch1_reg_next(9);
        delayMatch1_reg(10) <= delayMatch1_reg_next(10);
        delayMatch1_reg(11) <= delayMatch1_reg_next(11);
        delayMatch1_reg(12) <= delayMatch1_reg_next(12);
        delayMatch1_reg(13) <= delayMatch1_reg_next(13);
        delayMatch1_reg(14) <= delayMatch1_reg_next(14);
        delayMatch1_reg(15) <= delayMatch1_reg_next(15);
        delayMatch1_reg(16) <= delayMatch1_reg_next(16);
        delayMatch1_reg(17) <= delayMatch1_reg_next(17);
        delayMatch1_reg(18) <= delayMatch1_reg_next(18);
        delayMatch1_reg(19) <= delayMatch1_reg_next(19);
        delayMatch1_reg(20) <= delayMatch1_reg_next(20);
        delayMatch1_reg(21) <= delayMatch1_reg_next(21);
        delayMatch1_reg(22) <= delayMatch1_reg_next(22);
        delayMatch1_reg(23) <= delayMatch1_reg_next(23);
        delayMatch1_reg(24) <= delayMatch1_reg_next(24);
        delayMatch1_reg(25) <= delayMatch1_reg_next(25);
        delayMatch1_reg(26) <= delayMatch1_reg_next(26);
        delayMatch1_reg(27) <= delayMatch1_reg_next(27);
        delayMatch1_reg(28) <= delayMatch1_reg_next(28);
        delayMatch1_reg(29) <= delayMatch1_reg_next(29);
        delayMatch1_reg(30) <= delayMatch1_reg_next(30);
        delayMatch1_reg(31) <= delayMatch1_reg_next(31);
        delayMatch1_reg(32) <= delayMatch1_reg_next(32);
        delayMatch1_reg(33) <= delayMatch1_reg_next(33);
        delayMatch1_reg(34) <= delayMatch1_reg_next(34);
        delayMatch1_reg(35) <= delayMatch1_reg_next(35);
        delayMatch1_reg(36) <= delayMatch1_reg_next(36);
        delayMatch1_reg(37) <= delayMatch1_reg_next(37);
        delayMatch1_reg(38) <= delayMatch1_reg_next(38);
        delayMatch1_reg(39) <= delayMatch1_reg_next(39);
        delayMatch1_reg(40) <= delayMatch1_reg_next(40);
        delayMatch1_reg(41) <= delayMatch1_reg_next(41);
        delayMatch1_reg(42) <= delayMatch1_reg_next(42);
        delayMatch1_reg(43) <= delayMatch1_reg_next(43);
        delayMatch1_reg(44) <= delayMatch1_reg_next(44);
        delayMatch1_reg(45) <= delayMatch1_reg_next(45);
        delayMatch1_reg(46) <= delayMatch1_reg_next(46);
        delayMatch1_reg(47) <= delayMatch1_reg_next(47);
        delayMatch1_reg(48) <= delayMatch1_reg_next(48);
        delayMatch1_reg(49) <= delayMatch1_reg_next(49);
        delayMatch1_reg(50) <= delayMatch1_reg_next(50);
        delayMatch1_reg(51) <= delayMatch1_reg_next(51);
        delayMatch1_reg(52) <= delayMatch1_reg_next(52);
        delayMatch1_reg(53) <= delayMatch1_reg_next(53);
        delayMatch1_reg(54) <= delayMatch1_reg_next(54);
      END IF;
    END IF;
  END PROCESS delayMatch1_process;

  Float_Typecast1_out1_1 <= delayMatch1_reg(54);
  delayMatch1_reg_next(0) <= Float_Typecast1_out1;
  delayMatch1_reg_next(1) <= delayMatch1_reg(0);
  delayMatch1_reg_next(2) <= delayMatch1_reg(1);
  delayMatch1_reg_next(3) <= delayMatch1_reg(2);
  delayMatch1_reg_next(4) <= delayMatch1_reg(3);
  delayMatch1_reg_next(5) <= delayMatch1_reg(4);
  delayMatch1_reg_next(6) <= delayMatch1_reg(5);
  delayMatch1_reg_next(7) <= delayMatch1_reg(6);
  delayMatch1_reg_next(8) <= delayMatch1_reg(7);
  delayMatch1_reg_next(9) <= delayMatch1_reg(8);
  delayMatch1_reg_next(10) <= delayMatch1_reg(9);
  delayMatch1_reg_next(11) <= delayMatch1_reg(10);
  delayMatch1_reg_next(12) <= delayMatch1_reg(11);
  delayMatch1_reg_next(13) <= delayMatch1_reg(12);
  delayMatch1_reg_next(14) <= delayMatch1_reg(13);
  delayMatch1_reg_next(15) <= delayMatch1_reg(14);
  delayMatch1_reg_next(16) <= delayMatch1_reg(15);
  delayMatch1_reg_next(17) <= delayMatch1_reg(16);
  delayMatch1_reg_next(18) <= delayMatch1_reg(17);
  delayMatch1_reg_next(19) <= delayMatch1_reg(18);
  delayMatch1_reg_next(20) <= delayMatch1_reg(19);
  delayMatch1_reg_next(21) <= delayMatch1_reg(20);
  delayMatch1_reg_next(22) <= delayMatch1_reg(21);
  delayMatch1_reg_next(23) <= delayMatch1_reg(22);
  delayMatch1_reg_next(24) <= delayMatch1_reg(23);
  delayMatch1_reg_next(25) <= delayMatch1_reg(24);
  delayMatch1_reg_next(26) <= delayMatch1_reg(25);
  delayMatch1_reg_next(27) <= delayMatch1_reg(26);
  delayMatch1_reg_next(28) <= delayMatch1_reg(27);
  delayMatch1_reg_next(29) <= delayMatch1_reg(28);
  delayMatch1_reg_next(30) <= delayMatch1_reg(29);
  delayMatch1_reg_next(31) <= delayMatch1_reg(30);
  delayMatch1_reg_next(32) <= delayMatch1_reg(31);
  delayMatch1_reg_next(33) <= delayMatch1_reg(32);
  delayMatch1_reg_next(34) <= delayMatch1_reg(33);
  delayMatch1_reg_next(35) <= delayMatch1_reg(34);
  delayMatch1_reg_next(36) <= delayMatch1_reg(35);
  delayMatch1_reg_next(37) <= delayMatch1_reg(36);
  delayMatch1_reg_next(38) <= delayMatch1_reg(37);
  delayMatch1_reg_next(39) <= delayMatch1_reg(38);
  delayMatch1_reg_next(40) <= delayMatch1_reg(39);
  delayMatch1_reg_next(41) <= delayMatch1_reg(40);
  delayMatch1_reg_next(42) <= delayMatch1_reg(41);
  delayMatch1_reg_next(43) <= delayMatch1_reg(42);
  delayMatch1_reg_next(44) <= delayMatch1_reg(43);
  delayMatch1_reg_next(45) <= delayMatch1_reg(44);
  delayMatch1_reg_next(46) <= delayMatch1_reg(45);
  delayMatch1_reg_next(47) <= delayMatch1_reg(46);
  delayMatch1_reg_next(48) <= delayMatch1_reg(47);
  delayMatch1_reg_next(49) <= delayMatch1_reg(48);
  delayMatch1_reg_next(50) <= delayMatch1_reg(49);
  delayMatch1_reg_next(51) <= delayMatch1_reg(50);
  delayMatch1_reg_next(52) <= delayMatch1_reg(51);
  delayMatch1_reg_next(53) <= delayMatch1_reg(52);
  delayMatch1_reg_next(54) <= delayMatch1_reg(53);

  
  Multiport_Switch_out1 <= Product_out1_1 WHEN Type_rsvd_1 = to_unsigned(0, 32) ELSE
      Product1_out1;

  delayMatch5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delayMatch5_reg(0) <= X"00000000";
      delayMatch5_reg(1) <= X"00000000";
      delayMatch5_reg(2) <= X"00000000";
      delayMatch5_reg(3) <= X"00000000";
      delayMatch5_reg(4) <= X"00000000";
      delayMatch5_reg(5) <= X"00000000";
      delayMatch5_reg(6) <= X"00000000";
      delayMatch5_reg(7) <= X"00000000";
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        delayMatch5_reg(0) <= delayMatch5_reg_next(0);
        delayMatch5_reg(1) <= delayMatch5_reg_next(1);
        delayMatch5_reg(2) <= delayMatch5_reg_next(2);
        delayMatch5_reg(3) <= delayMatch5_reg_next(3);
        delayMatch5_reg(4) <= delayMatch5_reg_next(4);
        delayMatch5_reg(5) <= delayMatch5_reg_next(5);
        delayMatch5_reg(6) <= delayMatch5_reg_next(6);
        delayMatch5_reg(7) <= delayMatch5_reg_next(7);
      END IF;
    END IF;
  END PROCESS delayMatch5_process;

  Multiport_Switch_out1_1 <= delayMatch5_reg(7);
  delayMatch5_reg_next(0) <= Multiport_Switch_out1;
  delayMatch5_reg_next(1) <= delayMatch5_reg(0);
  delayMatch5_reg_next(2) <= delayMatch5_reg(1);
  delayMatch5_reg_next(3) <= delayMatch5_reg(2);
  delayMatch5_reg_next(4) <= delayMatch5_reg(3);
  delayMatch5_reg_next(5) <= delayMatch5_reg(4);
  delayMatch5_reg_next(6) <= delayMatch5_reg(5);
  delayMatch5_reg_next(7) <= delayMatch5_reg(6);

  kconst_1 <= X"447a0000";

  
  Multiport_Switch1_out1 <= Multiport_Switch_out1_1 WHEN Units_rsvd_1 = to_unsigned(0, 32) ELSE
      Gain_out1;

  const <= X"00000000";

  delayMatch7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delayMatch7_reg(0) <= X"00000000";
      delayMatch7_reg(1) <= X"00000000";
      delayMatch7_reg(2) <= X"00000000";
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        delayMatch7_reg(0) <= delayMatch7_reg_next(0);
        delayMatch7_reg(1) <= delayMatch7_reg_next(1);
        delayMatch7_reg(2) <= delayMatch7_reg_next(2);
      END IF;
    END IF;
  END PROCESS delayMatch7_process;

  Multiport_Switch1_out1_1 <= delayMatch7_reg(2);
  delayMatch7_reg_next(0) <= Multiport_Switch1_out1;
  delayMatch7_reg_next(1) <= delayMatch7_reg(0);
  delayMatch7_reg_next(2) <= delayMatch7_reg(1);

  const_1 <= X"00000000";

  delayMatch6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delayMatch6_reg(0) <= '0';
      delayMatch6_reg(1) <= '0';
      delayMatch6_reg(2) <= '0';
      delayMatch6_reg(3) <= '0';
      delayMatch6_reg(4) <= '0';
      delayMatch6_reg(5) <= '0';
      delayMatch6_reg(6) <= '0';
      delayMatch6_reg(7) <= '0';
      delayMatch6_reg(8) <= '0';
      delayMatch6_reg(9) <= '0';
      delayMatch6_reg(10) <= '0';
      delayMatch6_reg(11) <= '0';
      delayMatch6_reg(12) <= '0';
      delayMatch6_reg(13) <= '0';
      delayMatch6_reg(14) <= '0';
      delayMatch6_reg(15) <= '0';
      delayMatch6_reg(16) <= '0';
      delayMatch6_reg(17) <= '0';
      delayMatch6_reg(18) <= '0';
      delayMatch6_reg(19) <= '0';
      delayMatch6_reg(20) <= '0';
      delayMatch6_reg(21) <= '0';
      delayMatch6_reg(22) <= '0';
      delayMatch6_reg(23) <= '0';
      delayMatch6_reg(24) <= '0';
      delayMatch6_reg(25) <= '0';
      delayMatch6_reg(26) <= '0';
      delayMatch6_reg(27) <= '0';
      delayMatch6_reg(28) <= '0';
      delayMatch6_reg(29) <= '0';
      delayMatch6_reg(30) <= '0';
      delayMatch6_reg(31) <= '0';
      delayMatch6_reg(32) <= '0';
      delayMatch6_reg(33) <= '0';
      delayMatch6_reg(34) <= '0';
      delayMatch6_reg(35) <= '0';
      delayMatch6_reg(36) <= '0';
      delayMatch6_reg(37) <= '0';
      delayMatch6_reg(38) <= '0';
      delayMatch6_reg(39) <= '0';
      delayMatch6_reg(40) <= '0';
      delayMatch6_reg(41) <= '0';
      delayMatch6_reg(42) <= '0';
      delayMatch6_reg(43) <= '0';
      delayMatch6_reg(44) <= '0';
      delayMatch6_reg(45) <= '0';
      delayMatch6_reg(46) <= '0';
      delayMatch6_reg(47) <= '0';
      delayMatch6_reg(48) <= '0';
      delayMatch6_reg(49) <= '0';
      delayMatch6_reg(50) <= '0';
      delayMatch6_reg(51) <= '0';
      delayMatch6_reg(52) <= '0';
      delayMatch6_reg(53) <= '0';
      delayMatch6_reg(54) <= '0';
      delayMatch6_reg(55) <= '0';
      delayMatch6_reg(56) <= '0';
      delayMatch6_reg(57) <= '0';
      delayMatch6_reg(58) <= '0';
      delayMatch6_reg(59) <= '0';
      delayMatch6_reg(60) <= '0';
      delayMatch6_reg(61) <= '0';
      delayMatch6_reg(62) <= '0';
      delayMatch6_reg(63) <= '0';
      delayMatch6_reg(64) <= '0';
      delayMatch6_reg(65) <= '0';
      delayMatch6_reg(66) <= '0';
      delayMatch6_reg(67) <= '0';
      delayMatch6_reg(68) <= '0';
      delayMatch6_reg(69) <= '0';
      delayMatch6_reg(70) <= '0';
      delayMatch6_reg(71) <= '0';
      delayMatch6_reg(72) <= '0';
      delayMatch6_reg(73) <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        delayMatch6_reg(0) <= delayMatch6_reg_next(0);
        delayMatch6_reg(1) <= delayMatch6_reg_next(1);
        delayMatch6_reg(2) <= delayMatch6_reg_next(2);
        delayMatch6_reg(3) <= delayMatch6_reg_next(3);
        delayMatch6_reg(4) <= delayMatch6_reg_next(4);
        delayMatch6_reg(5) <= delayMatch6_reg_next(5);
        delayMatch6_reg(6) <= delayMatch6_reg_next(6);
        delayMatch6_reg(7) <= delayMatch6_reg_next(7);
        delayMatch6_reg(8) <= delayMatch6_reg_next(8);
        delayMatch6_reg(9) <= delayMatch6_reg_next(9);
        delayMatch6_reg(10) <= delayMatch6_reg_next(10);
        delayMatch6_reg(11) <= delayMatch6_reg_next(11);
        delayMatch6_reg(12) <= delayMatch6_reg_next(12);
        delayMatch6_reg(13) <= delayMatch6_reg_next(13);
        delayMatch6_reg(14) <= delayMatch6_reg_next(14);
        delayMatch6_reg(15) <= delayMatch6_reg_next(15);
        delayMatch6_reg(16) <= delayMatch6_reg_next(16);
        delayMatch6_reg(17) <= delayMatch6_reg_next(17);
        delayMatch6_reg(18) <= delayMatch6_reg_next(18);
        delayMatch6_reg(19) <= delayMatch6_reg_next(19);
        delayMatch6_reg(20) <= delayMatch6_reg_next(20);
        delayMatch6_reg(21) <= delayMatch6_reg_next(21);
        delayMatch6_reg(22) <= delayMatch6_reg_next(22);
        delayMatch6_reg(23) <= delayMatch6_reg_next(23);
        delayMatch6_reg(24) <= delayMatch6_reg_next(24);
        delayMatch6_reg(25) <= delayMatch6_reg_next(25);
        delayMatch6_reg(26) <= delayMatch6_reg_next(26);
        delayMatch6_reg(27) <= delayMatch6_reg_next(27);
        delayMatch6_reg(28) <= delayMatch6_reg_next(28);
        delayMatch6_reg(29) <= delayMatch6_reg_next(29);
        delayMatch6_reg(30) <= delayMatch6_reg_next(30);
        delayMatch6_reg(31) <= delayMatch6_reg_next(31);
        delayMatch6_reg(32) <= delayMatch6_reg_next(32);
        delayMatch6_reg(33) <= delayMatch6_reg_next(33);
        delayMatch6_reg(34) <= delayMatch6_reg_next(34);
        delayMatch6_reg(35) <= delayMatch6_reg_next(35);
        delayMatch6_reg(36) <= delayMatch6_reg_next(36);
        delayMatch6_reg(37) <= delayMatch6_reg_next(37);
        delayMatch6_reg(38) <= delayMatch6_reg_next(38);
        delayMatch6_reg(39) <= delayMatch6_reg_next(39);
        delayMatch6_reg(40) <= delayMatch6_reg_next(40);
        delayMatch6_reg(41) <= delayMatch6_reg_next(41);
        delayMatch6_reg(42) <= delayMatch6_reg_next(42);
        delayMatch6_reg(43) <= delayMatch6_reg_next(43);
        delayMatch6_reg(44) <= delayMatch6_reg_next(44);
        delayMatch6_reg(45) <= delayMatch6_reg_next(45);
        delayMatch6_reg(46) <= delayMatch6_reg_next(46);
        delayMatch6_reg(47) <= delayMatch6_reg_next(47);
        delayMatch6_reg(48) <= delayMatch6_reg_next(48);
        delayMatch6_reg(49) <= delayMatch6_reg_next(49);
        delayMatch6_reg(50) <= delayMatch6_reg_next(50);
        delayMatch6_reg(51) <= delayMatch6_reg_next(51);
        delayMatch6_reg(52) <= delayMatch6_reg_next(52);
        delayMatch6_reg(53) <= delayMatch6_reg_next(53);
        delayMatch6_reg(54) <= delayMatch6_reg_next(54);
        delayMatch6_reg(55) <= delayMatch6_reg_next(55);
        delayMatch6_reg(56) <= delayMatch6_reg_next(56);
        delayMatch6_reg(57) <= delayMatch6_reg_next(57);
        delayMatch6_reg(58) <= delayMatch6_reg_next(58);
        delayMatch6_reg(59) <= delayMatch6_reg_next(59);
        delayMatch6_reg(60) <= delayMatch6_reg_next(60);
        delayMatch6_reg(61) <= delayMatch6_reg_next(61);
        delayMatch6_reg(62) <= delayMatch6_reg_next(62);
        delayMatch6_reg(63) <= delayMatch6_reg_next(63);
        delayMatch6_reg(64) <= delayMatch6_reg_next(64);
        delayMatch6_reg(65) <= delayMatch6_reg_next(65);
        delayMatch6_reg(66) <= delayMatch6_reg_next(66);
        delayMatch6_reg(67) <= delayMatch6_reg_next(67);
        delayMatch6_reg(68) <= delayMatch6_reg_next(68);
        delayMatch6_reg(69) <= delayMatch6_reg_next(69);
        delayMatch6_reg(70) <= delayMatch6_reg_next(70);
        delayMatch6_reg(71) <= delayMatch6_reg_next(71);
        delayMatch6_reg(72) <= delayMatch6_reg_next(72);
        delayMatch6_reg(73) <= delayMatch6_reg_next(73);
      END IF;
    END IF;
  END PROCESS delayMatch6_process;

  Valid_In_1 <= delayMatch6_reg(73);
  delayMatch6_reg_next(0) <= Valid_In;
  delayMatch6_reg_next(1) <= delayMatch6_reg(0);
  delayMatch6_reg_next(2) <= delayMatch6_reg(1);
  delayMatch6_reg_next(3) <= delayMatch6_reg(2);
  delayMatch6_reg_next(4) <= delayMatch6_reg(3);
  delayMatch6_reg_next(5) <= delayMatch6_reg(4);
  delayMatch6_reg_next(6) <= delayMatch6_reg(5);
  delayMatch6_reg_next(7) <= delayMatch6_reg(6);
  delayMatch6_reg_next(8) <= delayMatch6_reg(7);
  delayMatch6_reg_next(9) <= delayMatch6_reg(8);
  delayMatch6_reg_next(10) <= delayMatch6_reg(9);
  delayMatch6_reg_next(11) <= delayMatch6_reg(10);
  delayMatch6_reg_next(12) <= delayMatch6_reg(11);
  delayMatch6_reg_next(13) <= delayMatch6_reg(12);
  delayMatch6_reg_next(14) <= delayMatch6_reg(13);
  delayMatch6_reg_next(15) <= delayMatch6_reg(14);
  delayMatch6_reg_next(16) <= delayMatch6_reg(15);
  delayMatch6_reg_next(17) <= delayMatch6_reg(16);
  delayMatch6_reg_next(18) <= delayMatch6_reg(17);
  delayMatch6_reg_next(19) <= delayMatch6_reg(18);
  delayMatch6_reg_next(20) <= delayMatch6_reg(19);
  delayMatch6_reg_next(21) <= delayMatch6_reg(20);
  delayMatch6_reg_next(22) <= delayMatch6_reg(21);
  delayMatch6_reg_next(23) <= delayMatch6_reg(22);
  delayMatch6_reg_next(24) <= delayMatch6_reg(23);
  delayMatch6_reg_next(25) <= delayMatch6_reg(24);
  delayMatch6_reg_next(26) <= delayMatch6_reg(25);
  delayMatch6_reg_next(27) <= delayMatch6_reg(26);
  delayMatch6_reg_next(28) <= delayMatch6_reg(27);
  delayMatch6_reg_next(29) <= delayMatch6_reg(28);
  delayMatch6_reg_next(30) <= delayMatch6_reg(29);
  delayMatch6_reg_next(31) <= delayMatch6_reg(30);
  delayMatch6_reg_next(32) <= delayMatch6_reg(31);
  delayMatch6_reg_next(33) <= delayMatch6_reg(32);
  delayMatch6_reg_next(34) <= delayMatch6_reg(33);
  delayMatch6_reg_next(35) <= delayMatch6_reg(34);
  delayMatch6_reg_next(36) <= delayMatch6_reg(35);
  delayMatch6_reg_next(37) <= delayMatch6_reg(36);
  delayMatch6_reg_next(38) <= delayMatch6_reg(37);
  delayMatch6_reg_next(39) <= delayMatch6_reg(38);
  delayMatch6_reg_next(40) <= delayMatch6_reg(39);
  delayMatch6_reg_next(41) <= delayMatch6_reg(40);
  delayMatch6_reg_next(42) <= delayMatch6_reg(41);
  delayMatch6_reg_next(43) <= delayMatch6_reg(42);
  delayMatch6_reg_next(44) <= delayMatch6_reg(43);
  delayMatch6_reg_next(45) <= delayMatch6_reg(44);
  delayMatch6_reg_next(46) <= delayMatch6_reg(45);
  delayMatch6_reg_next(47) <= delayMatch6_reg(46);
  delayMatch6_reg_next(48) <= delayMatch6_reg(47);
  delayMatch6_reg_next(49) <= delayMatch6_reg(48);
  delayMatch6_reg_next(50) <= delayMatch6_reg(49);
  delayMatch6_reg_next(51) <= delayMatch6_reg(50);
  delayMatch6_reg_next(52) <= delayMatch6_reg(51);
  delayMatch6_reg_next(53) <= delayMatch6_reg(52);
  delayMatch6_reg_next(54) <= delayMatch6_reg(53);
  delayMatch6_reg_next(55) <= delayMatch6_reg(54);
  delayMatch6_reg_next(56) <= delayMatch6_reg(55);
  delayMatch6_reg_next(57) <= delayMatch6_reg(56);
  delayMatch6_reg_next(58) <= delayMatch6_reg(57);
  delayMatch6_reg_next(59) <= delayMatch6_reg(58);
  delayMatch6_reg_next(60) <= delayMatch6_reg(59);
  delayMatch6_reg_next(61) <= delayMatch6_reg(60);
  delayMatch6_reg_next(62) <= delayMatch6_reg(61);
  delayMatch6_reg_next(63) <= delayMatch6_reg(62);
  delayMatch6_reg_next(64) <= delayMatch6_reg(63);
  delayMatch6_reg_next(65) <= delayMatch6_reg(64);
  delayMatch6_reg_next(66) <= delayMatch6_reg(65);
  delayMatch6_reg_next(67) <= delayMatch6_reg(66);
  delayMatch6_reg_next(68) <= delayMatch6_reg(67);
  delayMatch6_reg_next(69) <= delayMatch6_reg(68);
  delayMatch6_reg_next(70) <= delayMatch6_reg(69);
  delayMatch6_reg_next(71) <= delayMatch6_reg(70);
  delayMatch6_reg_next(72) <= delayMatch6_reg(71);
  delayMatch6_reg_next(73) <= delayMatch6_reg(72);

  AND_out1 <= Compare_To_Zero1_out1 AND Valid_In_1;

  
  Unit_Delay_Enabled_Synchronous_ectrl <= Unit_Delay_Enabled_Synchronous_out1 WHEN AND_out1 = '0' ELSE
      Multiport_Switch3_out1;

  Unit_Delay_Enabled_Synchronous_lowered_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Unit_Delay_Enabled_Synchronous_out1 <= X"00000000";
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        Unit_Delay_Enabled_Synchronous_out1 <= Unit_Delay_Enabled_Synchronous_ectrl;
      END IF;
    END IF;
  END PROCESS Unit_Delay_Enabled_Synchronous_lowered_process;


  
  Multiport_Switch3_out1 <= Multiport_Switch1_out1_1 WHEN Compare_To_Zero_out1 = '0' ELSE
      Unit_Delay_Enabled_Synchronous_out1;

  delayMatch9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delayMatch9_reg(0) <= X"00000000";
      delayMatch9_reg(1) <= X"00000000";
      delayMatch9_reg(2) <= X"00000000";
      delayMatch9_reg(3) <= X"00000000";
      delayMatch9_reg(4) <= X"00000000";
      delayMatch9_reg(5) <= X"00000000";
      delayMatch9_reg(6) <= X"00000000";
      delayMatch9_reg(7) <= X"00000000";
      delayMatch9_reg(8) <= X"00000000";
      delayMatch9_reg(9) <= X"00000000";
      delayMatch9_reg(10) <= X"00000000";
      delayMatch9_reg(11) <= X"00000000";
      delayMatch9_reg(12) <= X"00000000";
      delayMatch9_reg(13) <= X"00000000";
      delayMatch9_reg(14) <= X"00000000";
      delayMatch9_reg(15) <= X"00000000";
      delayMatch9_reg(16) <= X"00000000";
      delayMatch9_reg(17) <= X"00000000";
      delayMatch9_reg(18) <= X"00000000";
      delayMatch9_reg(19) <= X"00000000";
      delayMatch9_reg(20) <= X"00000000";
      delayMatch9_reg(21) <= X"00000000";
      delayMatch9_reg(22) <= X"00000000";
      delayMatch9_reg(23) <= X"00000000";
      delayMatch9_reg(24) <= X"00000000";
      delayMatch9_reg(25) <= X"00000000";
      delayMatch9_reg(26) <= X"00000000";
      delayMatch9_reg(27) <= X"00000000";
      delayMatch9_reg(28) <= X"00000000";
      delayMatch9_reg(29) <= X"00000000";
      delayMatch9_reg(30) <= X"00000000";
      delayMatch9_reg(31) <= X"00000000";
      delayMatch9_reg(32) <= X"00000000";
      delayMatch9_reg(33) <= X"00000000";
      delayMatch9_reg(34) <= X"00000000";
      delayMatch9_reg(35) <= X"00000000";
      delayMatch9_reg(36) <= X"00000000";
      delayMatch9_reg(37) <= X"00000000";
      delayMatch9_reg(38) <= X"00000000";
      delayMatch9_reg(39) <= X"00000000";
      delayMatch9_reg(40) <= X"00000000";
      delayMatch9_reg(41) <= X"00000000";
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        delayMatch9_reg(0) <= delayMatch9_reg_next(0);
        delayMatch9_reg(1) <= delayMatch9_reg_next(1);
        delayMatch9_reg(2) <= delayMatch9_reg_next(2);
        delayMatch9_reg(3) <= delayMatch9_reg_next(3);
        delayMatch9_reg(4) <= delayMatch9_reg_next(4);
        delayMatch9_reg(5) <= delayMatch9_reg_next(5);
        delayMatch9_reg(6) <= delayMatch9_reg_next(6);
        delayMatch9_reg(7) <= delayMatch9_reg_next(7);
        delayMatch9_reg(8) <= delayMatch9_reg_next(8);
        delayMatch9_reg(9) <= delayMatch9_reg_next(9);
        delayMatch9_reg(10) <= delayMatch9_reg_next(10);
        delayMatch9_reg(11) <= delayMatch9_reg_next(11);
        delayMatch9_reg(12) <= delayMatch9_reg_next(12);
        delayMatch9_reg(13) <= delayMatch9_reg_next(13);
        delayMatch9_reg(14) <= delayMatch9_reg_next(14);
        delayMatch9_reg(15) <= delayMatch9_reg_next(15);
        delayMatch9_reg(16) <= delayMatch9_reg_next(16);
        delayMatch9_reg(17) <= delayMatch9_reg_next(17);
        delayMatch9_reg(18) <= delayMatch9_reg_next(18);
        delayMatch9_reg(19) <= delayMatch9_reg_next(19);
        delayMatch9_reg(20) <= delayMatch9_reg_next(20);
        delayMatch9_reg(21) <= delayMatch9_reg_next(21);
        delayMatch9_reg(22) <= delayMatch9_reg_next(22);
        delayMatch9_reg(23) <= delayMatch9_reg_next(23);
        delayMatch9_reg(24) <= delayMatch9_reg_next(24);
        delayMatch9_reg(25) <= delayMatch9_reg_next(25);
        delayMatch9_reg(26) <= delayMatch9_reg_next(26);
        delayMatch9_reg(27) <= delayMatch9_reg_next(27);
        delayMatch9_reg(28) <= delayMatch9_reg_next(28);
        delayMatch9_reg(29) <= delayMatch9_reg_next(29);
        delayMatch9_reg(30) <= delayMatch9_reg_next(30);
        delayMatch9_reg(31) <= delayMatch9_reg_next(31);
        delayMatch9_reg(32) <= delayMatch9_reg_next(32);
        delayMatch9_reg(33) <= delayMatch9_reg_next(33);
        delayMatch9_reg(34) <= delayMatch9_reg_next(34);
        delayMatch9_reg(35) <= delayMatch9_reg_next(35);
        delayMatch9_reg(36) <= delayMatch9_reg_next(36);
        delayMatch9_reg(37) <= delayMatch9_reg_next(37);
        delayMatch9_reg(38) <= delayMatch9_reg_next(38);
        delayMatch9_reg(39) <= delayMatch9_reg_next(39);
        delayMatch9_reg(40) <= delayMatch9_reg_next(40);
        delayMatch9_reg(41) <= delayMatch9_reg_next(41);
      END IF;
    END IF;
  END PROCESS delayMatch9_process;

  Gain3_out1_1 <= delayMatch9_reg(41);
  delayMatch9_reg_next(0) <= Gain3_out1;
  delayMatch9_reg_next(1) <= delayMatch9_reg(0);
  delayMatch9_reg_next(2) <= delayMatch9_reg(1);
  delayMatch9_reg_next(3) <= delayMatch9_reg(2);
  delayMatch9_reg_next(4) <= delayMatch9_reg(3);
  delayMatch9_reg_next(5) <= delayMatch9_reg(4);
  delayMatch9_reg_next(6) <= delayMatch9_reg(5);
  delayMatch9_reg_next(7) <= delayMatch9_reg(6);
  delayMatch9_reg_next(8) <= delayMatch9_reg(7);
  delayMatch9_reg_next(9) <= delayMatch9_reg(8);
  delayMatch9_reg_next(10) <= delayMatch9_reg(9);
  delayMatch9_reg_next(11) <= delayMatch9_reg(10);
  delayMatch9_reg_next(12) <= delayMatch9_reg(11);
  delayMatch9_reg_next(13) <= delayMatch9_reg(12);
  delayMatch9_reg_next(14) <= delayMatch9_reg(13);
  delayMatch9_reg_next(15) <= delayMatch9_reg(14);
  delayMatch9_reg_next(16) <= delayMatch9_reg(15);
  delayMatch9_reg_next(17) <= delayMatch9_reg(16);
  delayMatch9_reg_next(18) <= delayMatch9_reg(17);
  delayMatch9_reg_next(19) <= delayMatch9_reg(18);
  delayMatch9_reg_next(20) <= delayMatch9_reg(19);
  delayMatch9_reg_next(21) <= delayMatch9_reg(20);
  delayMatch9_reg_next(22) <= delayMatch9_reg(21);
  delayMatch9_reg_next(23) <= delayMatch9_reg(22);
  delayMatch9_reg_next(24) <= delayMatch9_reg(23);
  delayMatch9_reg_next(25) <= delayMatch9_reg(24);
  delayMatch9_reg_next(26) <= delayMatch9_reg(25);
  delayMatch9_reg_next(27) <= delayMatch9_reg(26);
  delayMatch9_reg_next(28) <= delayMatch9_reg(27);
  delayMatch9_reg_next(29) <= delayMatch9_reg(28);
  delayMatch9_reg_next(30) <= delayMatch9_reg(29);
  delayMatch9_reg_next(31) <= delayMatch9_reg(30);
  delayMatch9_reg_next(32) <= delayMatch9_reg(31);
  delayMatch9_reg_next(33) <= delayMatch9_reg(32);
  delayMatch9_reg_next(34) <= delayMatch9_reg(33);
  delayMatch9_reg_next(35) <= delayMatch9_reg(34);
  delayMatch9_reg_next(36) <= delayMatch9_reg(35);
  delayMatch9_reg_next(37) <= delayMatch9_reg(36);
  delayMatch9_reg_next(38) <= delayMatch9_reg(37);
  delayMatch9_reg_next(39) <= delayMatch9_reg(38);
  delayMatch9_reg_next(40) <= delayMatch9_reg(39);
  delayMatch9_reg_next(41) <= delayMatch9_reg(40);

  kconst_2 <= X"3d0186e2";

  kconst_3 <= X"3d4ccccd";

  
  Multiport_Switch2_out1 <= Gain3_out1_1 WHEN Vrms_1 = to_unsigned(0, 32) ELSE
      Gain7_out1;

  Start_Out <= Start_In;

  End_Out <= End_In;

  Valid_Out <= Valid_In;

  Data_Out <= Float_Typecast_out1;

END rtl;

