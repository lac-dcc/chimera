-- async_fifo.vhd

-- Generated using ACDS version 16.0 211

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity async_fifo is
	generic (
		FIFO_WIDTH : integer;
		FIFO_DEPTH_BITS : integer;
		ACK : integer
	);
	port (
		data    : in  std_logic_vector(FIFO_WIDTH-1 downto 0);
		wrreq   : in  std_logic;
		rdreq   : in  std_logic;
		wrclk   : in  std_logic;
		rdclk   : in  std_logic;
		q       : out std_logic_vector(FIFO_WIDTH-1 downto 0);
		rdempty : out std_logic;
		wrfull  : out std_logic
	);
end entity async_fifo;

architecture rtl of async_fifo is

	component async_fifo_fifo_160 is
		generic (
			FIFO_WIDTH : integer;
			FIFO_DEPTH_BITS : integer
		);
		port (
			data    : in  std_logic_vector(FIFO_WIDTH-1 downto 0);
			wrreq   : in  std_logic;
			rdreq   : in  std_logic;
			wrclk   : in  std_logic;
			rdclk   : in  std_logic;
			q       : out std_logic_vector(FIFO_WIDTH-1 downto 0);
			rdempty : out std_logic;
			wrfull  : out std_logic
		);
	end component async_fifo_fifo_160;

	component async_fifo_fifo_160_ack is
		generic (
			FIFO_WIDTH : integer;
			FIFO_DEPTH_BITS : integer
		);
		port (
			data    : in  std_logic_vector(FIFO_WIDTH-1 downto 0);
			wrreq   : in  std_logic;
			rdreq   : in  std_logic;
			wrclk   : in  std_logic;
			rdclk   : in  std_logic;
			q       : out std_logic_vector(FIFO_WIDTH-1 downto 0);
			rdempty : out std_logic;
			wrfull  : out std_logic
		);
	end component async_fifo_fifo_160_ack;

begin

NONACK_fifo: if ACK = 0 generate
	fifo : component async_fifo_fifo_160
		generic map (
			FIFO_WIDTH => FIFO_WIDTH,
			FIFO_DEPTH_BITS => FIFO_DEPTH_BITS)
		port map (
			data    => data,    --  fifo_input.datain
			wrreq   => wrreq,   --            .wrreq
			rdreq   => rdreq,   --            .rdreq
			wrclk   => wrclk,   --            .wrclk
			rdclk   => rdclk,   --            .rdclk
			q       => q,       -- fifo_output.dataout
			rdempty => rdempty, --            .rdempty
			wrfull  => wrfull   --            .wrfull
		);
end generate;

ACK_fifo: if ACK = 1 generate
	fifo : component async_fifo_fifo_160_ack
		generic map (
			FIFO_WIDTH => FIFO_WIDTH,
			FIFO_DEPTH_BITS => FIFO_DEPTH_BITS)
		port map (
			data    => data,    --  fifo_input.datain
			wrreq   => wrreq,   --            .wrreq
			rdreq   => rdreq,   --            .rdreq
			wrclk   => wrclk,   --            .wrclk
			rdclk   => rdclk,   --            .rdclk
			q       => q,       -- fifo_output.dataout
			rdempty => rdempty, --            .rdempty
			wrfull  => wrfull   --            .wrfull
		);
end generate;



end architecture rtl; -- of async_fifo
