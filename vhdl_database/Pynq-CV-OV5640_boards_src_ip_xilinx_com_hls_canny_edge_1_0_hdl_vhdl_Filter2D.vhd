-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC;
    p_kernel_val_0_V_1_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_0_V_2_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_1_V_0_read : IN STD_LOGIC_VECTOR (2 downto 0);
    p_kernel_val_1_V_2_read : IN STD_LOGIC_VECTOR (3 downto 0);
    p_kernel_val_2_V_0_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_2_V_1_read : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFD : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111101";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv16_7FFF : STD_LOGIC_VECTOR (15 downto 0) := "0111111111111111";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond460_i_reg_1473 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond460_i_reg_1473_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1482 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1482_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1418 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_1413 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal or_cond_i_reg_1499 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1499_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_4_reg_317 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_328_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1341 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_334_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_1346 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg465_i_fu_340_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg465_i_reg_1351 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_346_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1358 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_358_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_1363 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_244_0_1_cast_fu_364_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_244_0_1_cast_reg_1370 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_244_0_2_cast_fu_368_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_244_0_2_cast_reg_1375 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_244_1_cast_fu_372_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_244_1_cast_reg_1380 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_244_1_2_cast_fu_376_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_244_1_2_cast_reg_1385 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_244_2_cast_fu_380_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_244_2_cast_reg_1390 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_244_2_1_cast_fu_384_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_244_2_1_cast_reg_1395 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_6_fu_394_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_1400 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_fu_405_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_reg_1408 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_7_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond461_i_fu_400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1423 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_203_1_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_203_1_reg_1427 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1431 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_fu_646_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_reg_1438 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_fu_662_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_reg_1443 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_2_fu_678_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_2_reg_1448 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_159_0_not_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_159_0_not_reg_1453 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_42_fu_695_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_42_reg_1458 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_43_fu_703_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_43_reg_1463 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_44_fu_711_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_44_reg_1468 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond460_i_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op171_read_state6 : BOOLEAN;
    signal ap_predicate_op182_read_state6 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond460_i_reg_1473_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_720_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal or_cond_i_i_fu_767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_831_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_reg_1486 : STD_LOGIC_VECTOR (31 downto 0);
    signal brmerge_fu_839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1492 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1492_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1499_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1499_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1499_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1503 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_48_fu_859_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_48_reg_1509 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_4_addr_reg_1516 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1522 : STD_LOGIC_VECTOR (10 downto 0);
    signal src_kernel_win_0_va_6_fu_982_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1528 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_1000_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1534 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1534_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_1018_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_reg_1540 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1204_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_V_0_1_reg_1545 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1218_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sum_V_1_1_reg_1550 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal grp_fu_1233_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp24_reg_1555 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_5_fu_1196_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_5_reg_1560 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter2_state6 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_306 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_19_fu_853_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_132 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_136 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_140 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_144 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_152 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_156 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_892_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_164 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_910_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_928_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_fu_352_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_388_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_416_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_11_fu_449_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_fu_455_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_480_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_fu_488_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_p2_i497_i_fu_494_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_assign_6_1_fu_512_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_518_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_229_1_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev11_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_543_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_1_fu_551_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_p2_i497_i_1_fu_557_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_assign_6_2_fu_575_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_fu_581_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_229_2_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev12_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_606_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_2_fu_614_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_p2_i497_i_2_fu_620_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_fu_507_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i496_i_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i497_i_p_assign_8_fu_638_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_238_1_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_1_fu_570_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i496_i_1_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i497_i_1_p_assig_fu_654_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_238_2_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_2_fu_633_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i496_i_2_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i497_i_2_p_assig_fu_670_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_s_fu_691_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_10_1_fu_699_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_10_2_fu_707_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_fu_726_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal ImagLoc_x_fu_742_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_748_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev13_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_773_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_781_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_p2_i_i_fu_787_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_assign_2_fu_800_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_not_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_3_fu_805_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp3_fu_736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_assign_1_fu_849_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_881_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_fu_899_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_917_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_971_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_989_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_1007_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_0_cast_fu_1031_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_s_fu_1035_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1211_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1225_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1240_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp24_cast_fu_1122_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_s_fu_1125_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of p_Val2_s_fu_1125_p2 : signal is "no";
    signal tmp_52_fu_1142_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_1130_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not1_i_i_fu_1150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_not_fu_1168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge2_i_i_fu_1162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_fu_1138_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal underflow_fu_1156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge3_i_i_fu_1174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i_fu_1180_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_i_i_fu_1188_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1204_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1204_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1211_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1211_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1218_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1218_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1225_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1225_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1225_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1233_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1233_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1240_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1240_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_145 : BOOLEAN;
    signal ap_enable_state5_pp0_iter1_stage0 : BOOLEAN;
    signal ap_enable_operation_162 : BOOLEAN;
    signal ap_enable_state6_pp0_iter2_stage0 : BOOLEAN;
    signal ap_predicate_op176_store_state6 : BOOLEAN;
    signal ap_enable_operation_176 : BOOLEAN;
    signal ap_predicate_op183_store_state6 : BOOLEAN;
    signal ap_enable_operation_183 : BOOLEAN;
    signal ap_enable_operation_148 : BOOLEAN;
    signal ap_enable_operation_165 : BOOLEAN;
    signal ap_predicate_op174_store_state6 : BOOLEAN;
    signal ap_enable_operation_174 : BOOLEAN;
    signal ap_predicate_op181_store_state6 : BOOLEAN;
    signal ap_enable_operation_181 : BOOLEAN;
    signal ap_predicate_op150_load_state5 : BOOLEAN;
    signal ap_enable_operation_150 : BOOLEAN;
    signal ap_predicate_op168_load_state6 : BOOLEAN;
    signal ap_enable_operation_168 : BOOLEAN;
    signal ap_predicate_op172_store_state6 : BOOLEAN;
    signal ap_enable_operation_172 : BOOLEAN;
    signal ap_predicate_op180_store_state6 : BOOLEAN;
    signal ap_enable_operation_180 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1204_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1211_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1218_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1225_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1225_p20 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1233_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1240_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_condition_1019 : BOOLEAN;

    component canny_edge_mux_32hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component canny_edge_mac_muibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component canny_edge_mac_mujbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component canny_edge_mac_mukbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component canny_edge_mac_mulbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component canny_edge_mac_mumb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component canny_edge_mac_muncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component Filter2D_k_buf_0_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_k_buf_0_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Filter2D_k_buf_0_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Filter2D_k_buf_0_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    canny_edge_mux_32hbi_U56 : component canny_edge_mux_32hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_156,
        din1 => right_border_buf_0_1_fu_160,
        din2 => ap_const_lv8_0,
        din3 => tmp_48_reg_1509,
        dout => tmp_20_fu_881_p5);

    canny_edge_mux_32hbi_U57 : component canny_edge_mux_32hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_3_fu_168,
        din1 => right_border_buf_0_4_fu_172,
        din2 => ap_const_lv8_0,
        din3 => tmp_48_reg_1509,
        dout => tmp_21_fu_899_p5);

    canny_edge_mux_32hbi_U58 : component canny_edge_mux_32hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_5_fu_176,
        din1 => right_border_buf_0_2_fu_164,
        din2 => ap_const_lv8_0,
        din3 => tmp_48_reg_1509,
        dout => tmp_22_fu_917_p5);

    canny_edge_mux_32hbi_U59 : component canny_edge_mux_32hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_892_p3,
        din1 => col_buf_0_val_1_0_fu_910_p3,
        din2 => col_buf_0_val_2_0_fu_928_p3,
        din3 => tmp_42_reg_1458,
        dout => tmp_23_fu_971_p5);

    canny_edge_mux_32hbi_U60 : component canny_edge_mux_32hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_892_p3,
        din1 => col_buf_0_val_1_0_fu_910_p3,
        din2 => col_buf_0_val_2_0_fu_928_p3,
        din3 => tmp_43_reg_1463,
        dout => tmp_24_fu_989_p5);

    canny_edge_mux_32hbi_U61 : component canny_edge_mux_32hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_892_p3,
        din1 => col_buf_0_val_1_0_fu_910_p3,
        din2 => col_buf_0_val_2_0_fu_928_p3,
        din3 => tmp_44_reg_1468,
        dout => tmp_25_fu_1007_p5);

    canny_edge_mac_muibs_U62 : component canny_edge_mac_muibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 9,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_1204_p0,
        din1 => grp_fu_1204_p1,
        din2 => r_V_s_fu_1035_p2,
        dout => grp_fu_1204_p3);

    canny_edge_mac_mujbC_U63 : component canny_edge_mac_mujbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_1211_p0,
        din1 => grp_fu_1211_p1,
        din2 => sum_V_0_1_reg_1545,
        dout => grp_fu_1211_p3);

    canny_edge_mac_mukbM_U64 : component canny_edge_mac_mukbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 8,
        din2_WIDTH => 11,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_1218_p0,
        din1 => grp_fu_1218_p1,
        din2 => grp_fu_1211_p3,
        dout => grp_fu_1218_p3);

    canny_edge_mac_mulbW_U65 : component canny_edge_mac_mulbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        dout_WIDTH => 10)
    port map (
        din0 => grp_fu_1225_p0,
        din1 => grp_fu_1225_p1,
        din2 => grp_fu_1225_p2,
        dout => grp_fu_1225_p3);

    canny_edge_mac_mumb6_U66 : component canny_edge_mac_mumb6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 8,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_1233_p0,
        din1 => grp_fu_1233_p1,
        din2 => grp_fu_1225_p3,
        dout => grp_fu_1233_p3);

    canny_edge_mac_muncg_U67 : component canny_edge_mac_muncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_1240_p0,
        din1 => grp_fu_1240_p1,
        din2 => sum_V_1_1_reg_1550,
        dout => grp_fu_1240_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond460_i_fu_715_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter2_state6)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_4_reg_317_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_fu_715_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_4_reg_317 <= j_V_fu_720_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                t_V_4_reg_317 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    t_V_reg_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                t_V_reg_306 <= i_V_reg_1408;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                t_V_reg_306 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_fu_715_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1492 <= brmerge_fu_839_p2;
                or_cond_i_i_reg_1482 <= or_cond_i_i_fu_767_p2;
                or_cond_i_reg_1499 <= or_cond_i_fu_844_p2;
                x_reg_1486 <= x_fu_831_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1492_pp0_iter1_reg <= brmerge_reg_1492;
                exitcond460_i_reg_1473 <= exitcond460_i_fu_715_p2;
                exitcond460_i_reg_1473_pp0_iter1_reg <= exitcond460_i_reg_1473;
                or_cond_i_i_reg_1482_pp0_iter1_reg <= or_cond_i_i_reg_1482;
                or_cond_i_reg_1499_pp0_iter1_reg <= or_cond_i_reg_1499;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond460_i_reg_1473_pp0_iter2_reg <= exitcond460_i_reg_1473_pp0_iter1_reg;
                or_cond_i_reg_1499_pp0_iter2_reg <= or_cond_i_reg_1499_pp0_iter1_reg;
                or_cond_i_reg_1499_pp0_iter3_reg <= or_cond_i_reg_1499_pp0_iter2_reg;
                or_cond_i_reg_1499_pp0_iter4_reg <= or_cond_i_reg_1499_pp0_iter3_reg;
                src_kernel_win_0_va_7_reg_1534_pp0_iter3_reg <= src_kernel_win_0_va_7_reg_1534;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1408 <= i_V_fu_405_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond461_i_fu_400_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_1418 <= icmp_fu_426_p2;
                tmp_10_reg_1431 <= tmp_10_fu_444_p2;
                tmp_203_1_reg_1427 <= tmp_203_1_fu_438_p2;
                tmp_7_reg_1413 <= tmp_7_fu_411_p2;
                tmp_9_reg_1423 <= tmp_9_fu_432_p2;
                y_1_reg_1443 <= y_1_fu_662_p3;
                y_2_reg_1448 <= y_2_fu_678_p3;
                y_reg_1438 <= y_fu_646_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1473 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_3_addr_reg_1503 <= tmp_19_fu_853_p1(11 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1516 <= tmp_19_fu_853_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1522 <= tmp_19_fu_853_p1(11 - 1 downto 0);
                tmp_48_reg_1509 <= tmp_48_fu_859_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1499_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_5_reg_1560 <= p_Val2_5_fu_1196_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                p_neg465_i_reg_1351 <= p_neg465_i_fu_340_p2;
                tmp_1_reg_1346 <= tmp_1_fu_334_p2;
                tmp_244_0_1_cast_reg_1370 <= tmp_244_0_1_cast_fu_364_p1;
                tmp_244_0_2_cast_reg_1375 <= tmp_244_0_2_cast_fu_368_p1;
                    tmp_244_1_2_cast_reg_1385(3 downto 0) <= tmp_244_1_2_cast_fu_376_p1(3 downto 0);
                tmp_244_1_cast_reg_1380 <= tmp_244_1_cast_fu_372_p1;
                    tmp_244_2_1_cast_reg_1395(2 downto 0) <= tmp_244_2_1_cast_fu_384_p1(2 downto 0);
                tmp_244_2_cast_reg_1390 <= tmp_244_2_cast_fu_380_p1;
                tmp_2_reg_1358 <= tmp_2_fu_346_p2;
                    tmp_4_reg_1363(31 downto 1) <= tmp_4_fu_358_p2(31 downto 1);
                    tmp_6_reg_1400(31 downto 1) <= tmp_6_fu_394_p2(31 downto 1);
                tmp_s_reg_1341 <= tmp_s_fu_328_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_7_reg_1413 = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_1_fu_160 <= right_border_buf_0_s_fu_156;
                right_border_buf_0_2_fu_164 <= right_border_buf_0_5_fu_176;
                right_border_buf_0_3_fu_168 <= col_buf_0_val_1_0_fu_910_p3;
                right_border_buf_0_4_fu_172 <= right_border_buf_0_3_fu_168;
                right_border_buf_0_5_fu_176 <= col_buf_0_val_2_0_fu_928_p3;
                right_border_buf_0_s_fu_156 <= col_buf_0_val_0_0_fu_892_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1473_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_1_fu_136 <= src_kernel_win_0_va_fu_132;
                src_kernel_win_0_va_2_fu_140 <= src_kernel_win_0_va_7_reg_1534;
                src_kernel_win_0_va_3_fu_144 <= src_kernel_win_0_va_2_fu_140;
                src_kernel_win_0_va_fu_132 <= src_kernel_win_0_va_6_reg_1528;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_4_fu_148 <= src_kernel_win_0_va_8_fu_1018_p3;
                src_kernel_win_0_va_5_fu_152 <= src_kernel_win_0_va_4_fu_148;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_6_reg_1528 <= src_kernel_win_0_va_6_fu_982_p3;
                src_kernel_win_0_va_7_reg_1534 <= src_kernel_win_0_va_7_fu_1000_p3;
                src_kernel_win_0_va_8_reg_1540 <= src_kernel_win_0_va_8_fu_1018_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1499_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_V_0_1_reg_1545 <= grp_fu_1204_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1499_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_V_1_1_reg_1550 <= grp_fu_1218_p3;
                tmp24_reg_1555 <= grp_fu_1233_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                tmp_159_0_not_reg_1453 <= tmp_159_0_not_fu_686_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_10_reg_1431 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_42_reg_1458 <= tmp_42_fu_695_p1;
                tmp_43_reg_1463 <= tmp_43_fu_703_p1;
                tmp_44_reg_1468 <= tmp_44_fu_711_p1;
            end if;
        end if;
    end process;
    tmp_4_reg_1363(0) <= '0';
    tmp_244_1_2_cast_reg_1385(11 downto 4) <= "00000000";
    tmp_244_2_1_cast_reg_1395(10 downto 3) <= "00000000";
    tmp_6_reg_1400(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_CS_fsm_state2, exitcond461_i_fu_400_p2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond461_i_fu_400_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ImagLoc_x_fu_742_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_4_reg_317));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(4);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, or_cond_i_reg_1499_pp0_iter4_reg, ap_predicate_op171_read_state6, ap_predicate_op182_read_state6)
    begin
                ap_block_pp0_stage0_01001 <= (((or_cond_i_reg_1499_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op182_read_state6 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op171_read_state6 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, or_cond_i_reg_1499_pp0_iter4_reg, ap_predicate_op171_read_state6, ap_predicate_op182_read_state6)
    begin
                ap_block_pp0_stage0_11001 <= (((or_cond_i_reg_1499_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op182_read_state6 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op171_read_state6 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, or_cond_i_reg_1499_pp0_iter4_reg, ap_predicate_op171_read_state6, ap_predicate_op182_read_state6)
    begin
                ap_block_pp0_stage0_subdone <= (((or_cond_i_reg_1499_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op182_read_state6 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op171_read_state6 = ap_const_boolean_1)))));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter2_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op171_read_state6, ap_predicate_op182_read_state6)
    begin
                ap_block_state6_pp0_stage0_iter2 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op182_read_state6 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op171_read_state6 = ap_const_boolean_1)));
    end process;

        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp0_stage0_iter5_assign_proc : process(p_dst_data_stream_V_full_n, or_cond_i_reg_1499_pp0_iter4_reg)
    begin
                ap_block_state9_pp0_stage0_iter5 <= ((or_cond_i_reg_1499_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_1019_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, exitcond460_i_reg_1473_pp0_iter1_reg, or_cond_i_i_reg_1482_pp0_iter1_reg)
    begin
                ap_condition_1019 <= ((or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter2_state6_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter2_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter2_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond461_i_fu_400_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((exitcond461_i_fu_400_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_operation_145_assign_proc : process(exitcond460_i_reg_1473)
    begin
                ap_enable_operation_145 <= (exitcond460_i_reg_1473 = ap_const_lv1_0);
    end process;


    ap_enable_operation_148_assign_proc : process(exitcond460_i_reg_1473)
    begin
                ap_enable_operation_148 <= (exitcond460_i_reg_1473 = ap_const_lv1_0);
    end process;


    ap_enable_operation_150_assign_proc : process(ap_predicate_op150_load_state5)
    begin
                ap_enable_operation_150 <= (ap_predicate_op150_load_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_162_assign_proc : process(exitcond460_i_reg_1473_pp0_iter1_reg)
    begin
                ap_enable_operation_162 <= (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_165_assign_proc : process(exitcond460_i_reg_1473_pp0_iter1_reg)
    begin
                ap_enable_operation_165 <= (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_168_assign_proc : process(ap_predicate_op168_load_state6)
    begin
                ap_enable_operation_168 <= (ap_predicate_op168_load_state6 = ap_const_boolean_1);
    end process;


    ap_enable_operation_172_assign_proc : process(ap_predicate_op172_store_state6)
    begin
                ap_enable_operation_172 <= (ap_predicate_op172_store_state6 = ap_const_boolean_1);
    end process;


    ap_enable_operation_174_assign_proc : process(ap_predicate_op174_store_state6)
    begin
                ap_enable_operation_174 <= (ap_predicate_op174_store_state6 = ap_const_boolean_1);
    end process;


    ap_enable_operation_176_assign_proc : process(ap_predicate_op176_store_state6)
    begin
                ap_enable_operation_176 <= (ap_predicate_op176_store_state6 = ap_const_boolean_1);
    end process;


    ap_enable_operation_180_assign_proc : process(ap_predicate_op180_store_state6)
    begin
                ap_enable_operation_180 <= (ap_predicate_op180_store_state6 = ap_const_boolean_1);
    end process;


    ap_enable_operation_181_assign_proc : process(ap_predicate_op181_store_state6)
    begin
                ap_enable_operation_181 <= (ap_predicate_op181_store_state6 = ap_const_boolean_1);
    end process;


    ap_enable_operation_183_assign_proc : process(ap_predicate_op183_store_state6)
    begin
                ap_enable_operation_183 <= (ap_predicate_op183_store_state6 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state5_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state5_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state6_pp0_iter2_stage0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage0)
    begin
                ap_enable_state6_pp0_iter2_stage0 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op150_load_state5_assign_proc : process(exitcond460_i_reg_1473, brmerge_reg_1492)
    begin
                ap_predicate_op150_load_state5 <= ((brmerge_reg_1492 = ap_const_lv1_1) and (exitcond460_i_reg_1473 = ap_const_lv1_0));
    end process;


    ap_predicate_op168_load_state6_assign_proc : process(exitcond460_i_reg_1473_pp0_iter1_reg, brmerge_reg_1492_pp0_iter1_reg)
    begin
                ap_predicate_op168_load_state6 <= ((brmerge_reg_1492_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op171_read_state6_assign_proc : process(exitcond460_i_reg_1473_pp0_iter1_reg, or_cond_i_i_reg_1482_pp0_iter1_reg, icmp_reg_1418)
    begin
                ap_predicate_op171_read_state6 <= ((or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_0) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op172_store_state6_assign_proc : process(exitcond460_i_reg_1473_pp0_iter1_reg, or_cond_i_i_reg_1482_pp0_iter1_reg, icmp_reg_1418, tmp_9_reg_1423)
    begin
                ap_predicate_op172_store_state6 <= ((tmp_9_reg_1423 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_0) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op174_store_state6_assign_proc : process(exitcond460_i_reg_1473_pp0_iter1_reg, or_cond_i_i_reg_1482_pp0_iter1_reg, icmp_reg_1418, tmp_203_1_reg_1427)
    begin
                ap_predicate_op174_store_state6 <= ((tmp_203_1_reg_1427 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_0) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op176_store_state6_assign_proc : process(exitcond460_i_reg_1473_pp0_iter1_reg, or_cond_i_i_reg_1482_pp0_iter1_reg, icmp_reg_1418, tmp_9_reg_1423)
    begin
                ap_predicate_op176_store_state6 <= ((tmp_9_reg_1423 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_0) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op180_store_state6_assign_proc : process(exitcond460_i_reg_1473_pp0_iter1_reg, or_cond_i_i_reg_1482_pp0_iter1_reg, icmp_reg_1418, tmp_7_reg_1413)
    begin
                ap_predicate_op180_store_state6 <= ((tmp_7_reg_1413 = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op181_store_state6_assign_proc : process(exitcond460_i_reg_1473_pp0_iter1_reg, or_cond_i_i_reg_1482_pp0_iter1_reg, icmp_reg_1418, tmp_7_reg_1413)
    begin
                ap_predicate_op181_store_state6 <= ((tmp_7_reg_1413 = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op182_read_state6_assign_proc : process(exitcond460_i_reg_1473_pp0_iter1_reg, or_cond_i_i_reg_1482_pp0_iter1_reg, icmp_reg_1418, tmp_7_reg_1413)
    begin
                ap_predicate_op182_read_state6 <= ((tmp_7_reg_1413 = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op183_store_state6_assign_proc : process(exitcond460_i_reg_1473_pp0_iter1_reg, or_cond_i_i_reg_1482_pp0_iter1_reg, icmp_reg_1418, tmp_7_reg_1413)
    begin
                ap_predicate_op183_store_state6 <= ((tmp_7_reg_1413 = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond461_i_fu_400_p2)
    begin
        if (((exitcond461_i_fu_400_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge2_i_i_fu_1162_p2 <= (tmp_52_fu_1142_p3 xor p_Result_s_fu_1130_p3);
    brmerge3_i_i_fu_1174_p2 <= (tmp_52_fu_1142_p3 or p_Result_not_fu_1168_p2);
    brmerge_fu_839_p2 <= (tmp_17_fu_762_p2 or tmp_159_0_not_reg_1453);
    col_assign_1_fu_849_p2 <= std_logic_vector(unsigned(tmp_2_reg_1358) - unsigned(x_reg_1486));
    col_buf_0_val_0_0_fu_892_p3 <= 
        k_buf_0_val_3_q0 when (brmerge_reg_1492_pp0_iter1_reg(0) = '1') else 
        tmp_20_fu_881_p5;
    col_buf_0_val_1_0_fu_910_p3 <= 
        k_buf_0_val_4_q0 when (brmerge_reg_1492_pp0_iter1_reg(0) = '1') else 
        tmp_21_fu_899_p5;
    col_buf_0_val_2_0_fu_928_p3 <= 
        k_buf_0_val_5_q0 when (brmerge_reg_1492_pp0_iter1_reg(0) = '1') else 
        tmp_22_fu_917_p5;
    exitcond460_i_fu_715_p2 <= "1" when (t_V_4_reg_317 = tmp_s_reg_1341) else "0";
    exitcond461_i_fu_400_p2 <= "1" when (t_V_reg_306 = tmp_1_reg_1346) else "0";
    grp_fu_1204_p0 <= tmp_244_0_1_cast_reg_1370(2 - 1 downto 0);
    grp_fu_1204_p1 <= grp_fu_1204_p10(8 - 1 downto 0);
    grp_fu_1204_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_4_fu_148),10));
    grp_fu_1211_p0 <= tmp_244_0_2_cast_reg_1375(2 - 1 downto 0);
    grp_fu_1211_p1 <= grp_fu_1211_p10(8 - 1 downto 0);
    grp_fu_1211_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_8_reg_1540),10));
    grp_fu_1218_p0 <= tmp_244_1_cast_reg_1380(3 - 1 downto 0);
    grp_fu_1218_p1 <= grp_fu_1218_p10(8 - 1 downto 0);
    grp_fu_1218_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_3_fu_144),11));
    grp_fu_1225_p0 <= tmp_244_2_cast_reg_1390(2 - 1 downto 0);
    grp_fu_1225_p1 <= grp_fu_1225_p10(8 - 1 downto 0);
    grp_fu_1225_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_1_fu_136),10));
    grp_fu_1225_p2 <= grp_fu_1225_p20(8 - 1 downto 0);
    grp_fu_1225_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_6_reg_1528),10));
    grp_fu_1233_p0 <= tmp_244_2_1_cast_reg_1395(3 - 1 downto 0);
    grp_fu_1233_p1 <= grp_fu_1233_p10(8 - 1 downto 0);
    grp_fu_1233_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_fu_132),11));
    grp_fu_1240_p0 <= tmp_244_1_2_cast_reg_1385(4 - 1 downto 0);
    grp_fu_1240_p1 <= grp_fu_1240_p10(8 - 1 downto 0);
    grp_fu_1240_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_7_reg_1534_pp0_iter3_reg),12));
    i_V_fu_405_p2 <= std_logic_vector(unsigned(t_V_reg_306) + unsigned(ap_const_lv32_1));
    icmp3_fu_736_p2 <= "0" when (tmp_45_fu_726_p4 = ap_const_lv31_0) else "1";
    icmp_fu_426_p2 <= "0" when (tmp_35_fu_416_p4 = ap_const_lv31_0) else "1";
    j_V_fu_720_p2 <= std_logic_vector(unsigned(t_V_4_reg_317) + unsigned(ap_const_lv32_1));
    k_buf_0_val_3_address0 <= tmp_19_fu_853_p1(11 - 1 downto 0);
    k_buf_0_val_3_address1 <= k_buf_0_val_3_addr_reg_1503;

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond460_i_reg_1473_pp0_iter1_reg, or_cond_i_i_reg_1482_pp0_iter1_reg, icmp_reg_1418, tmp_7_reg_1413, tmp_9_reg_1423, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_7_reg_1413 = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_9_reg_1423 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_0) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond460_i_reg_1473_pp0_iter1_reg, or_cond_i_i_reg_1482_pp0_iter1_reg, icmp_reg_1418, tmp_7_reg_1413, tmp_9_reg_1423, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_7_reg_1413 = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_9_reg_1423 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_0) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_19_fu_853_p1(11 - 1 downto 0);
    k_buf_0_val_4_address1 <= k_buf_0_val_4_addr_reg_1516;

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond460_i_reg_1473_pp0_iter1_reg, or_cond_i_i_reg_1482_pp0_iter1_reg, icmp_reg_1418, tmp_7_reg_1413, tmp_203_1_reg_1427, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_7_reg_1413 = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_203_1_reg_1427 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_0) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(p_src_data_stream_V_dout, icmp_reg_1418, tmp_7_reg_1413, tmp_203_1_reg_1427, k_buf_0_val_3_q0, ap_condition_1019)
    begin
        if ((ap_const_boolean_1 = ap_condition_1019)) then
            if (((tmp_7_reg_1413 = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_1))) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_q0;
            elsif (((tmp_203_1_reg_1427 = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_0))) then 
                k_buf_0_val_4_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond460_i_reg_1473_pp0_iter1_reg, or_cond_i_i_reg_1482_pp0_iter1_reg, icmp_reg_1418, tmp_7_reg_1413, tmp_203_1_reg_1427, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_7_reg_1413 = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_203_1_reg_1427 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_0) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_19_fu_853_p1(11 - 1 downto 0);
    k_buf_0_val_5_address1 <= k_buf_0_val_5_addr_reg_1522;

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond460_i_reg_1473_pp0_iter1_reg, or_cond_i_i_reg_1482_pp0_iter1_reg, icmp_reg_1418, tmp_7_reg_1413, tmp_9_reg_1423, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_7_reg_1413 = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_9_reg_1423 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_0) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(p_src_data_stream_V_dout, icmp_reg_1418, tmp_7_reg_1413, tmp_9_reg_1423, k_buf_0_val_4_q0, ap_condition_1019)
    begin
        if ((ap_const_boolean_1 = ap_condition_1019)) then
            if (((tmp_7_reg_1413 = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_1))) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_q0;
            elsif (((tmp_9_reg_1423 = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_0))) then 
                k_buf_0_val_5_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond460_i_reg_1473_pp0_iter1_reg, or_cond_i_i_reg_1482_pp0_iter1_reg, icmp_reg_1418, tmp_7_reg_1413, tmp_9_reg_1423, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_7_reg_1413 = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_9_reg_1423 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_0) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond_i496_i_1_fu_537_p2 <= (tmp_229_1_fu_532_p2 and rev11_fu_526_p2);
    or_cond_i496_i_2_fu_600_p2 <= (tmp_229_2_fu_595_p2 and rev12_fu_589_p2);
    or_cond_i496_i_fu_474_p2 <= (tmp_13_fu_469_p2 and rev_fu_463_p2);
    or_cond_i_fu_844_p2 <= (icmp_reg_1418 and icmp3_fu_736_p2);
    or_cond_i_i_fu_767_p2 <= (tmp_17_fu_762_p2 and rev13_fu_756_p2);
    p_Result_not_fu_1168_p2 <= (p_Result_s_fu_1130_p3 xor ap_const_lv1_1);
    p_Result_s_fu_1130_p3 <= p_Val2_s_fu_1125_p2(11 downto 11);
        p_Val2_1_fu_1138_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_fu_1125_p2),16));

    p_Val2_5_fu_1196_p3 <= 
        p_mux_i_i_fu_1180_p3 when (brmerge3_i_i_fu_1174_p2(0) = '1') else 
        p_i_i_fu_1188_p3;
    p_Val2_s_fu_1125_p2 <= std_logic_vector(signed(grp_fu_1240_p3) + signed(tmp24_cast_fu_1122_p1));
    p_assign_1_fu_781_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) - unsigned(t_V_4_reg_317));
    p_assign_2_fu_800_p2 <= std_logic_vector(unsigned(tmp_6_reg_1400) - unsigned(p_p2_i_i_fu_787_p3));
    p_assign_3_fu_805_p3 <= 
        ImagLoc_x_fu_742_p2 when (or_cond_i_i_fu_767_p2(0) = '1') else 
        p_assign_2_fu_800_p2;
    p_assign_6_1_fu_512_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(t_V_reg_306));
    p_assign_6_2_fu_575_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFD) + signed(t_V_reg_306));
    p_assign_7_1_fu_551_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) - unsigned(t_V_reg_306));
    p_assign_7_2_fu_614_p2 <= std_logic_vector(unsigned(ap_const_lv32_3) - unsigned(t_V_reg_306));
    p_assign_7_fu_488_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) - unsigned(t_V_reg_306));
    p_assign_8_1_fu_570_p2 <= std_logic_vector(unsigned(tmp_4_reg_1363) - unsigned(p_p2_i497_i_1_fu_557_p3));
    p_assign_8_2_fu_633_p2 <= std_logic_vector(unsigned(tmp_4_reg_1363) - unsigned(p_p2_i497_i_2_fu_620_p3));
    p_assign_8_fu_507_p2 <= std_logic_vector(unsigned(tmp_4_reg_1363) - unsigned(p_p2_i497_i_fu_494_p3));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, or_cond_i_reg_1499_pp0_iter4_reg)
    begin
        if (((or_cond_i_reg_1499_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= p_Val2_5_reg_1560;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, or_cond_i_reg_1499_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((or_cond_i_reg_1499_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_i_i_fu_1188_p3 <= 
        ap_const_lv16_8000 when (underflow_fu_1156_p2(0) = '1') else 
        p_Val2_1_fu_1138_p1;
    p_mux_i_i_fu_1180_p3 <= 
        ap_const_lv16_7FFF when (brmerge2_i_i_fu_1162_p2(0) = '1') else 
        p_Val2_1_fu_1138_p1;
    p_neg465_i_fu_340_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(p_src_rows_V_read));
    p_not1_i_i_fu_1150_p2 <= (tmp_52_fu_1142_p3 xor ap_const_lv1_1);
    p_p2_i497_i_1_fu_557_p3 <= 
        p_assign_7_1_fu_551_p2 when (tmp_39_fu_543_p3(0) = '1') else 
        p_assign_6_1_fu_512_p2;
    p_p2_i497_i_1_p_assig_fu_654_p3 <= 
        p_p2_i497_i_1_fu_557_p3 when (tmp_238_1_fu_565_p2(0) = '1') else 
        p_assign_8_1_fu_570_p2;
    p_p2_i497_i_2_fu_620_p3 <= 
        p_assign_7_2_fu_614_p2 when (tmp_41_fu_606_p3(0) = '1') else 
        p_assign_6_2_fu_575_p2;
    p_p2_i497_i_2_p_assig_fu_670_p3 <= 
        p_p2_i497_i_2_fu_620_p3 when (tmp_238_2_fu_628_p2(0) = '1') else 
        p_assign_8_2_fu_633_p2;
    p_p2_i497_i_fu_494_p3 <= 
        p_assign_7_fu_488_p2 when (tmp_37_fu_480_p3(0) = '1') else 
        tmp_11_fu_449_p2;
    p_p2_i497_i_p_assign_8_fu_638_p3 <= 
        p_p2_i497_i_fu_494_p3 when (tmp_15_fu_502_p2(0) = '1') else 
        p_assign_8_fu_507_p2;
    p_p2_i_i_fu_787_p3 <= 
        p_assign_1_fu_781_p2 when (tmp_47_fu_773_p3(0) = '1') else 
        ImagLoc_x_fu_742_p2;

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, exitcond460_i_reg_1473_pp0_iter1_reg, or_cond_i_i_reg_1482_pp0_iter1_reg, icmp_reg_1418, tmp_7_reg_1413)
    begin
        if ((((tmp_7_reg_1413 = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_1) and (or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((or_cond_i_i_reg_1482_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1418 = ap_const_lv1_0) and (exitcond460_i_reg_1473_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op171_read_state6, ap_predicate_op182_read_state6, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op182_read_state6 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op171_read_state6 = ap_const_boolean_1)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_0_cast_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_5_fu_152),9));
    r_V_s_fu_1035_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(r_V_0_cast_fu_1031_p1));
    rev11_fu_526_p2 <= (tmp_38_fu_518_p3 xor ap_const_lv1_1);
    rev12_fu_589_p2 <= (tmp_40_fu_581_p3 xor ap_const_lv1_1);
    rev13_fu_756_p2 <= (tmp_46_fu_748_p3 xor ap_const_lv1_1);
    rev_fu_463_p2 <= (tmp_36_fu_455_p3 xor ap_const_lv1_1);
    row_assign_10_1_fu_699_p2 <= std_logic_vector(unsigned(p_neg465_i_reg_1351) - unsigned(y_1_reg_1443));
    row_assign_10_2_fu_707_p2 <= std_logic_vector(unsigned(p_neg465_i_reg_1351) - unsigned(y_2_reg_1448));
    row_assign_s_fu_691_p2 <= std_logic_vector(unsigned(p_neg465_i_reg_1351) - unsigned(y_reg_1438));
    sel_tmp7_fu_819_p2 <= (tmp_46_fu_748_p3 or tmp_19_not_fu_813_p2);
    sel_tmp8_fu_825_p2 <= (tmp_18_fu_795_p2 and sel_tmp7_fu_819_p2);
    src_kernel_win_0_va_6_fu_982_p3 <= 
        tmp_23_fu_971_p5 when (tmp_10_reg_1431(0) = '1') else 
        col_buf_0_val_0_0_fu_892_p3;
    src_kernel_win_0_va_7_fu_1000_p3 <= 
        tmp_24_fu_989_p5 when (tmp_10_reg_1431(0) = '1') else 
        col_buf_0_val_1_0_fu_910_p3;
    src_kernel_win_0_va_8_fu_1018_p3 <= 
        tmp_25_fu_1007_p5 when (tmp_10_reg_1431(0) = '1') else 
        col_buf_0_val_2_0_fu_928_p3;
        tmp24_cast_fu_1122_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp24_reg_1555),12));

    tmp_10_fu_444_p2 <= "1" when (unsigned(t_V_reg_306) > unsigned(p_src_rows_V_read)) else "0";
    tmp_11_fu_449_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_reg_306));
    tmp_13_fu_469_p2 <= "1" when (signed(tmp_11_fu_449_p2) < signed(p_src_rows_V_read)) else "0";
    tmp_159_0_not_fu_686_p2 <= (tmp_7_reg_1413 xor ap_const_lv1_1);
    tmp_15_fu_502_p2 <= "1" when (signed(p_p2_i497_i_fu_494_p3) < signed(p_src_rows_V_read)) else "0";
    tmp_17_fu_762_p2 <= "1" when (signed(ImagLoc_x_fu_742_p2) < signed(p_src_cols_V_read)) else "0";
    tmp_18_fu_795_p2 <= "1" when (signed(p_p2_i_i_fu_787_p3) < signed(p_src_cols_V_read)) else "0";
    tmp_19_fu_853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_reg_1486),64));
    tmp_19_not_fu_813_p2 <= (tmp_17_fu_762_p2 xor ap_const_lv1_1);
    tmp_1_fu_334_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(p_src_rows_V_read));
    tmp_203_1_fu_438_p2 <= "1" when (t_V_reg_306 = ap_const_lv32_0) else "0";
    tmp_229_1_fu_532_p2 <= "1" when (signed(p_assign_6_1_fu_512_p2) < signed(p_src_rows_V_read)) else "0";
    tmp_229_2_fu_595_p2 <= "1" when (signed(p_assign_6_2_fu_575_p2) < signed(p_src_rows_V_read)) else "0";
    tmp_238_1_fu_565_p2 <= "1" when (signed(p_p2_i497_i_1_fu_557_p3) < signed(p_src_rows_V_read)) else "0";
    tmp_238_2_fu_628_p2 <= "1" when (signed(p_p2_i497_i_2_fu_620_p3) < signed(p_src_rows_V_read)) else "0";
        tmp_244_0_1_cast_fu_364_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_1_read),10));

        tmp_244_0_2_cast_fu_368_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_2_read),10));

    tmp_244_1_2_cast_fu_376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_1_V_2_read),12));
        tmp_244_1_cast_fu_372_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_0_read),11));

    tmp_244_2_1_cast_fu_384_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_2_V_1_read),11));
        tmp_244_2_cast_fu_380_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_0_read),10));

    tmp_2_fu_346_p2 <= std_logic_vector(unsigned(ap_const_lv32_3) + unsigned(p_src_cols_V_read));
    tmp_33_fu_352_p2 <= std_logic_vector(shift_left(unsigned(p_src_rows_V_read),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_34_fu_388_p2 <= std_logic_vector(shift_left(unsigned(p_src_cols_V_read),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_35_fu_416_p4 <= t_V_reg_306(31 downto 1);
    tmp_36_fu_455_p3 <= tmp_11_fu_449_p2(31 downto 31);
    tmp_37_fu_480_p3 <= tmp_11_fu_449_p2(31 downto 31);
    tmp_38_fu_518_p3 <= p_assign_6_1_fu_512_p2(31 downto 31);
    tmp_39_fu_543_p3 <= p_assign_6_1_fu_512_p2(31 downto 31);
    tmp_40_fu_581_p3 <= p_assign_6_2_fu_575_p2(31 downto 31);
    tmp_41_fu_606_p3 <= p_assign_6_2_fu_575_p2(31 downto 31);
    tmp_42_fu_695_p1 <= row_assign_s_fu_691_p2(2 - 1 downto 0);
    tmp_43_fu_703_p1 <= row_assign_10_1_fu_699_p2(2 - 1 downto 0);
    tmp_44_fu_711_p1 <= row_assign_10_2_fu_707_p2(2 - 1 downto 0);
    tmp_45_fu_726_p4 <= t_V_4_reg_317(31 downto 1);
    tmp_46_fu_748_p3 <= ImagLoc_x_fu_742_p2(31 downto 31);
    tmp_47_fu_773_p3 <= ImagLoc_x_fu_742_p2(31 downto 31);
    tmp_48_fu_859_p1 <= col_assign_1_fu_849_p2(2 - 1 downto 0);
    tmp_4_fu_358_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(tmp_33_fu_352_p2));
    tmp_52_fu_1142_p3 <= p_Val2_s_fu_1125_p2(11 downto 11);
    tmp_6_fu_394_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(tmp_34_fu_388_p2));
    tmp_7_fu_411_p2 <= "1" when (unsigned(t_V_reg_306) < unsigned(p_src_rows_V_read)) else "0";
    tmp_9_fu_432_p2 <= "1" when (t_V_reg_306 = ap_const_lv32_1) else "0";
    tmp_s_fu_328_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(p_src_cols_V_read));
    underflow_fu_1156_p2 <= (p_not1_i_i_fu_1150_p2 and p_Result_s_fu_1130_p3);
    x_fu_831_p3 <= 
        p_p2_i_i_fu_787_p3 when (sel_tmp8_fu_825_p2(0) = '1') else 
        p_assign_3_fu_805_p3;
    y_1_fu_662_p3 <= 
        p_assign_6_1_fu_512_p2 when (or_cond_i496_i_1_fu_537_p2(0) = '1') else 
        p_p2_i497_i_1_p_assig_fu_654_p3;
    y_2_fu_678_p3 <= 
        p_assign_6_2_fu_575_p2 when (or_cond_i496_i_2_fu_600_p2(0) = '1') else 
        p_p2_i497_i_2_p_assig_fu_670_p3;
    y_fu_646_p3 <= 
        tmp_11_fu_449_p2 when (or_cond_i496_i_fu_474_p2(0) = '1') else 
        p_p2_i497_i_p_assign_8_fu_638_p3;
end behav;
