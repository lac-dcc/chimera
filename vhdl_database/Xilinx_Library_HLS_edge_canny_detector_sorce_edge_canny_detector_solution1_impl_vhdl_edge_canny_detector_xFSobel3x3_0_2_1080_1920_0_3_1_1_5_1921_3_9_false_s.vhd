-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity edge_canny_detector_xFSobel3x3_0_2_1080_1920_0_3_1_1_5_1921_3_9_false_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    gaussian_mat_4209_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    gaussian_mat_4209_empty_n : IN STD_LOGIC;
    gaussian_mat_4209_read : OUT STD_LOGIC;
    gradx_mat_4210_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    gradx_mat_4210_full_n : IN STD_LOGIC;
    gradx_mat_4210_write : OUT STD_LOGIC;
    grady_mat_4213_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    grady_mat_4213_full_n : IN STD_LOGIC;
    grady_mat_4213_write : OUT STD_LOGIC );
end;


architecture behav of edge_canny_detector_xFSobel3x3_0_2_1080_1920_0_3_1_1_5_1921_3_9_false_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv11_780 : STD_LOGIC_VECTOR (10 downto 0) := "11110000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv11_439 : STD_LOGIC_VECTOR (10 downto 0) := "10000111001";
    constant ap_const_lv11_438 : STD_LOGIC_VECTOR (10 downto 0) := "10000111000";
    constant ap_const_lv11_437 : STD_LOGIC_VECTOR (10 downto 0) := "10000110111";
    constant ap_const_lv12_BC9 : STD_LOGIC_VECTOR (11 downto 0) := "101111001001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv11_781 : STD_LOGIC_VECTOR (10 downto 0) := "11110000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal gaussian_mat_4209_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal icmp_ln878_5_reg_1076 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln203_reg_1087 : STD_LOGIC_VECTOR (0 downto 0);
    signal gradx_mat_4210_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp3_iter4 : STD_LOGIC := '0';
    signal icmp_ln878_5_reg_1076_pp3_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_reg_1109 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_reg_1109_pp3_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grady_mat_4213_blk_n : STD_LOGIC;
    signal col_V_reg_275 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_V_4_reg_287 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_V_7_reg_343 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_V_7_reg_343_pp3_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state12_pp3_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op134_read_state13 : BOOLEAN;
    signal ap_block_state13_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state14_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_state15_pp3_stage0_iter3 : BOOLEAN;
    signal ap_predicate_op207_write_state16 : BOOLEAN;
    signal ap_predicate_op208_write_state16 : BOOLEAN;
    signal ap_block_state16_pp3_stage0_iter4 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal src_buf_V_2_0_reg_355 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_2_0_0_reg_367 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_1_2_3_reg_379 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_1_0_0_reg_391 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_0_2_3_reg_403 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_0_0_0_reg_415 : STD_LOGIC_VECTOR (7 downto 0);
    signal init_row_ind_fu_463_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal row_ind_V_0_0_load_reg_959 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_1_0_load_reg_964 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_2_0_load_reg_971 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln534_fu_503_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal zext_ln456_fu_506_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln456_reg_985 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln878_2_fu_509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal trunc_ln466_fu_514_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln466_reg_994 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln480_fu_518_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln480_reg_998 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_V_6_fu_521_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_V_6_reg_1003 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_state5_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln878_3_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_3_reg_1008 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln456_fu_540_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal col_V_5_fu_546_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ap_block_state8_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln878_4_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_4_reg_1022 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_V_0_addr_reg_1026 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln485_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal cmp_i_i283_i_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i283_i_reg_1046 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_i210_i_fu_609_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_i210_i_reg_1051 : STD_LOGIC_VECTOR (1 downto 0);
    signal spec_select54_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal spec_select54_reg_1056 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln343_fu_627_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln343_reg_1061 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln343_1_fu_631_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln343_1_reg_1066 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_V_8_fu_635_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_V_8_reg_1071 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal icmp_ln878_5_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_5_reg_1076_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_5_reg_1076_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_6_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_6_reg_1080 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_6_reg_1080_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_6_reg_1080_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln203_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf_V_1_1_fu_754_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_1_1_reg_1113 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal src_buf_V_0_1_fu_761_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_0_1_reg_1120 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_2_0_2_fu_768_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_2_0_2_reg_1127 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_V_2_fu_930_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state5 : STD_LOGIC;
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state8 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp3_exit_iter3_state15 : STD_LOGIC;
    signal buf_V_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_V_0_ce0 : STD_LOGIC;
    signal buf_V_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_V_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_V_0_ce1 : STD_LOGIC;
    signal buf_V_0_we1 : STD_LOGIC;
    signal buf_V_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_V_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_V_1_ce0 : STD_LOGIC;
    signal buf_V_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_V_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_V_1_ce1 : STD_LOGIC;
    signal buf_V_1_we1 : STD_LOGIC;
    signal buf_V_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_V_2_ce0 : STD_LOGIC;
    signal buf_V_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_V_2_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_V_2_ce1 : STD_LOGIC;
    signal buf_V_2_we1 : STD_LOGIC;
    signal ap_phi_mux_row_ind_V_0_2_phi_fu_258_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_ind_V_0_2_reg_254 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln878_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal init_buf_reg_265 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_col_V_phi_fu_279_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_ind_V_2_reg_319 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_1_1_reg_298 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal row_ind_V_0_reg_308 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_V_reg_331 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_col_V_7_phi_fu_347_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_src_buf_V_2_0_phi_fu_359_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_V_1_2_3_phi_fu_383_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_V_0_2_3_phi_fu_407_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp3_iter0_src_buf_V_1_0_1_reg_427 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp3_iter1_src_buf_V_1_0_1_reg_427 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp3_iter2_src_buf_V_1_0_1_reg_427 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp3_iter3_src_buf_V_1_0_1_reg_427 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp3_iter4_src_buf_V_1_0_1_reg_427 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp3_iter0_src_buf_V_0_0_11_reg_439 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp3_iter1_src_buf_V_0_0_11_reg_439 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp3_iter2_src_buf_V_0_0_11_reg_439 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp3_iter3_src_buf_V_0_0_11_reg_439 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp3_iter4_src_buf_V_0_0_11_reg_439 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp3_iter0_storemerge_reg_451 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp3_iter1_storemerge_reg_451 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp3_iter2_storemerge_reg_451 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp3_iter3_storemerge_reg_451 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp3_iter4_storemerge_reg_451 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln534_3_fu_533_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_i90_fu_558_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal zext_ln534_4_fu_658_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_i152_i_fu_669_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal row_ind_V_0_0_fu_96 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln301_fu_484_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_1_0_fu_100 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_2_0_fu_104 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp3_stage0_01001 : BOOLEAN;
    signal trunc_ln456_fu_665_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_565_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_V_cast_fu_595_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_fu_599_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_i_i227_i_fu_603_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal cmp_i_i253_i_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i198_i_2_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_704_p5 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1_fu_719_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_fu_735_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_719_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_735_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_1_2_fu_693_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_0_2_fu_682_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal arrayidx261_i534_load_0_2_fu_747_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_fu_775_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_1_fu_787_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1346_1_fu_801_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1346_fu_798_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1346_3_fu_814_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1346_2_fu_810_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_fu_804_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_1_fu_818_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1497_1_fu_794_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1497_fu_783_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal g_x_V_3_fu_832_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln69_fu_838_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln100_fu_824_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal g_x_V_4_fu_842_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln69_fu_828_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal g_x_V_fu_848_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_2_fu_859_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_3_fu_871_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_2_fu_883_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_3_fu_889_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln121_fu_895_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln69_1_fu_899_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal g_y_V_3_fu_903_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln69_1_fu_909_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1497_2_fu_867_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal g_y_V_4_fu_913_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1497_3_fu_879_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal g_y_V_fu_919_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component edge_canny_detector_mux_32_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component edge_canny_detector_mux_32_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s_buf_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buf_V_0_U : component edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s_buf_V_0
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_0_address0,
        ce0 => buf_V_0_ce0,
        q0 => buf_V_0_q0,
        address1 => buf_V_0_address1,
        ce1 => buf_V_0_ce1,
        we1 => buf_V_0_we1,
        d1 => buf_V_0_d1);

    buf_V_1_U : component edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s_buf_V_0
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_1_address0,
        ce0 => buf_V_1_ce0,
        q0 => buf_V_1_q0,
        address1 => buf_V_1_address1,
        ce1 => buf_V_1_ce1,
        we1 => buf_V_1_we1,
        d1 => gaussian_mat_4209_dout);

    buf_V_2_U : component edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s_buf_V_0
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_2_address0,
        ce0 => buf_V_2_ce0,
        q0 => buf_V_2_q0,
        address1 => buf_V_2_address1,
        ce1 => buf_V_2_ce1,
        we1 => buf_V_2_we1,
        d1 => gaussian_mat_4209_dout);

    mux_32_8_1_1_U36 : component edge_canny_detector_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_V_0_q0,
        din1 => buf_V_1_q0,
        din2 => buf_V_2_q0,
        din3 => trunc_ln480_reg_998,
        dout => tmp_fu_565_p5);

    mux_32_8_1_1_U37 : component edge_canny_detector_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_V_0_q0,
        din1 => buf_V_1_q0,
        din2 => buf_V_2_q0,
        din3 => trunc_ln343_reg_1061,
        dout => src_buf_V_0_2_fu_682_p5);

    mux_32_8_1_1_U38 : component edge_canny_detector_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_V_0_q0,
        din1 => buf_V_1_q0,
        din2 => buf_V_2_q0,
        din3 => trunc_ln343_1_reg_1066,
        dout => src_buf_V_1_2_fu_693_p5);

    mux_32_13_1_1_U39 : component edge_canny_detector_mux_32_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        din2_WIDTH => 13,
        din3_WIDTH => 2,
        dout_WIDTH => 13)
    port map (
        din0 => row_ind_V_2_reg_319,
        din1 => row_ind_V_0_reg_308,
        din2 => row_ind_V_1_1_reg_298,
        din3 => sub_i210_i_reg_1051,
        dout => tmp_s_fu_704_p5);

    mux_32_8_1_1_U40 : component edge_canny_detector_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_V_0_q0,
        din1 => buf_V_1_q0,
        din2 => buf_V_2_q0,
        din3 => tmp_1_fu_719_p4,
        dout => tmp_1_fu_719_p5);

    mux_32_8_1_1_U41 : component edge_canny_detector_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_V_0_q0,
        din1 => buf_V_1_q0,
        din2 => buf_V_2_q0,
        din3 => tmp_2_fu_735_p4,
        dout => tmp_2_fu_735_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln878_2_fu_509_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state5);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln878_2_fu_509_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state8) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln878_2_fu_509_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state8))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state8);
                elsif ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln878_2_fu_509_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp3_flush_enable)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln485_fu_577_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
                elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_const_logic_1 = ap_condition_pp3_exit_iter3_state15)) or ((icmp_ln485_fu_577_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                    ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter3_state15))) then 
                    ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter2;
                elsif ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
                elsif (((icmp_ln485_fu_577_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp3_iter4_src_buf_V_0_0_11_reg_439_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then
                if (((icmp_ln882_reg_1109 = ap_const_lv1_1) and (icmp_ln878_5_reg_1076_pp3_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp3_iter4_src_buf_V_0_0_11_reg_439 <= src_buf_V_0_1_fu_761_p3;
                elsif (((icmp_ln882_reg_1109 = ap_const_lv1_0) and (icmp_ln878_5_reg_1076_pp3_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp3_iter4_src_buf_V_0_0_11_reg_439 <= ap_phi_mux_src_buf_V_0_2_3_phi_fu_407_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp3_iter4_src_buf_V_0_0_11_reg_439 <= ap_phi_reg_pp3_iter3_src_buf_V_0_0_11_reg_439;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp3_iter4_src_buf_V_1_0_1_reg_427_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then
                if (((icmp_ln882_reg_1109 = ap_const_lv1_1) and (icmp_ln878_5_reg_1076_pp3_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp3_iter4_src_buf_V_1_0_1_reg_427 <= src_buf_V_1_1_fu_754_p3;
                elsif (((icmp_ln882_reg_1109 = ap_const_lv1_0) and (icmp_ln878_5_reg_1076_pp3_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp3_iter4_src_buf_V_1_0_1_reg_427 <= ap_phi_mux_src_buf_V_1_2_3_phi_fu_383_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp3_iter4_src_buf_V_1_0_1_reg_427 <= ap_phi_reg_pp3_iter3_src_buf_V_1_0_1_reg_427;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp3_iter4_storemerge_reg_451_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then
                if (((icmp_ln882_reg_1109 = ap_const_lv1_1) and (icmp_ln878_5_reg_1076_pp3_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp3_iter4_storemerge_reg_451 <= src_buf_V_2_0_2_fu_768_p3;
                elsif (((icmp_ln882_reg_1109 = ap_const_lv1_0) and (icmp_ln878_5_reg_1076_pp3_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp3_iter4_storemerge_reg_451 <= ap_phi_mux_src_buf_V_2_0_phi_fu_359_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp3_iter4_storemerge_reg_451 <= ap_phi_reg_pp3_iter3_storemerge_reg_451;
                end if;
            end if; 
        end if;
    end process;

    col_V_4_reg_287_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln878_2_fu_509_p2 = ap_const_lv1_0))) then 
                col_V_4_reg_287 <= ap_const_lv11_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln878_4_fu_552_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                col_V_4_reg_287 <= col_V_5_fu_546_p2;
            end if; 
        end if;
    end process;

    col_V_7_reg_343_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_5_reg_1076 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                col_V_7_reg_343 <= col_V_8_reg_1071;
            elsif (((icmp_ln485_fu_577_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                col_V_7_reg_343 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    col_V_reg_275_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln878_3_reg_1008 = ap_const_lv1_0))) then 
                col_V_reg_275 <= col_V_6_reg_1003;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln878_2_fu_509_p2 = ap_const_lv1_1))) then 
                col_V_reg_275 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    init_buf_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                init_buf_reg_265 <= zext_ln534_fu_503_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                init_buf_reg_265 <= add_ln456_fu_540_p2;
            end if; 
        end if;
    end process;

    row_V_reg_331_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                row_V_reg_331 <= ap_const_lv11_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                row_V_reg_331 <= row_V_2_fu_930_p2;
            end if; 
        end if;
    end process;

    row_ind_V_0_2_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_fu_478_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                row_ind_V_0_2_reg_254 <= init_row_ind_fu_463_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                row_ind_V_0_2_reg_254 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    row_ind_V_0_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                row_ind_V_0_reg_308 <= row_ind_V_1_0_load_reg_964;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                row_ind_V_0_reg_308 <= row_ind_V_1_1_reg_298;
            end if; 
        end if;
    end process;

    row_ind_V_1_1_reg_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                row_ind_V_1_1_reg_298 <= row_ind_V_2_0_load_reg_971;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                row_ind_V_1_1_reg_298 <= row_ind_V_2_reg_319;
            end if; 
        end if;
    end process;

    row_ind_V_2_reg_319_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                row_ind_V_2_reg_319 <= row_ind_V_0_0_load_reg_959;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                row_ind_V_2_reg_319 <= row_ind_V_0_reg_308;
            end if; 
        end if;
    end process;

    src_buf_V_0_0_0_reg_415_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_5_reg_1076_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                src_buf_V_0_0_0_reg_415 <= ap_phi_reg_pp3_iter4_src_buf_V_0_0_11_reg_439;
            elsif (((icmp_ln485_fu_577_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                src_buf_V_0_0_0_reg_415 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_V_0_2_3_reg_403_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_5_reg_1076_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                src_buf_V_0_2_3_reg_403 <= src_buf_V_0_1_reg_1120;
            elsif (((icmp_ln485_fu_577_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                src_buf_V_0_2_3_reg_403 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_V_1_0_0_reg_391_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_5_reg_1076_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                src_buf_V_1_0_0_reg_391 <= ap_phi_reg_pp3_iter4_src_buf_V_1_0_1_reg_427;
            elsif (((icmp_ln485_fu_577_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                src_buf_V_1_0_0_reg_391 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_V_1_2_3_reg_379_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_5_reg_1076_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                src_buf_V_1_2_3_reg_379 <= src_buf_V_1_1_reg_1113;
            elsif (((icmp_ln485_fu_577_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                src_buf_V_1_2_3_reg_379 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_V_2_0_0_reg_367_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_5_reg_1076_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                src_buf_V_2_0_0_reg_367 <= ap_phi_reg_pp3_iter4_storemerge_reg_451;
            elsif (((icmp_ln485_fu_577_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                src_buf_V_2_0_0_reg_367 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_V_2_0_reg_355_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_5_reg_1076_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                src_buf_V_2_0_reg_355 <= src_buf_V_2_0_2_reg_1127;
            elsif (((icmp_ln485_fu_577_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                src_buf_V_2_0_reg_355 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln878_5_fu_641_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                and_ln203_reg_1087 <= and_ln203_fu_653_p2;
                icmp_ln878_6_reg_1080 <= icmp_ln878_6_fu_647_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                ap_phi_reg_pp3_iter1_src_buf_V_0_0_11_reg_439 <= ap_phi_reg_pp3_iter0_src_buf_V_0_0_11_reg_439;
                ap_phi_reg_pp3_iter1_src_buf_V_1_0_1_reg_427 <= ap_phi_reg_pp3_iter0_src_buf_V_1_0_1_reg_427;
                ap_phi_reg_pp3_iter1_storemerge_reg_451 <= ap_phi_reg_pp3_iter0_storemerge_reg_451;
                col_V_8_reg_1071 <= col_V_8_fu_635_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                ap_phi_reg_pp3_iter2_src_buf_V_0_0_11_reg_439 <= ap_phi_reg_pp3_iter1_src_buf_V_0_0_11_reg_439;
                ap_phi_reg_pp3_iter2_src_buf_V_1_0_1_reg_427 <= ap_phi_reg_pp3_iter1_src_buf_V_1_0_1_reg_427;
                ap_phi_reg_pp3_iter2_storemerge_reg_451 <= ap_phi_reg_pp3_iter1_storemerge_reg_451;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp3_iter3_src_buf_V_0_0_11_reg_439 <= ap_phi_reg_pp3_iter2_src_buf_V_0_0_11_reg_439;
                ap_phi_reg_pp3_iter3_src_buf_V_1_0_1_reg_427 <= ap_phi_reg_pp3_iter2_src_buf_V_1_0_1_reg_427;
                ap_phi_reg_pp3_iter3_storemerge_reg_451 <= ap_phi_reg_pp3_iter2_storemerge_reg_451;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln878_4_fu_552_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                buf_V_0_addr_reg_1026 <= conv_i90_fu_558_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln485_fu_577_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                cmp_i_i283_i_reg_1046 <= cmp_i_i283_i_fu_583_p2;
                spec_select54_reg_1056 <= spec_select54_fu_621_p2;
                sub_i210_i_reg_1051 <= sub_i210_i_fu_609_p2;
                trunc_ln343_1_reg_1066 <= trunc_ln343_1_fu_631_p1;
                trunc_ln343_reg_1061 <= trunc_ln343_fu_627_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                col_V_6_reg_1003 <= col_V_6_fu_521_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                col_V_7_reg_343_pp3_iter1_reg <= col_V_7_reg_343;
                icmp_ln878_5_reg_1076 <= icmp_ln878_5_fu_641_p2;
                icmp_ln878_5_reg_1076_pp3_iter1_reg <= icmp_ln878_5_reg_1076;
                icmp_ln878_6_reg_1080_pp3_iter1_reg <= icmp_ln878_6_reg_1080;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln878_3_reg_1008 <= icmp_ln878_3_fu_527_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln878_4_reg_1022 <= icmp_ln878_4_fu_552_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp3_stage0_11001)) then
                icmp_ln878_5_reg_1076_pp3_iter2_reg <= icmp_ln878_5_reg_1076_pp3_iter1_reg;
                icmp_ln878_5_reg_1076_pp3_iter3_reg <= icmp_ln878_5_reg_1076_pp3_iter2_reg;
                icmp_ln878_6_reg_1080_pp3_iter2_reg <= icmp_ln878_6_reg_1080_pp3_iter1_reg;
                icmp_ln882_reg_1109_pp3_iter3_reg <= icmp_ln882_reg_1109;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln878_5_reg_1076_pp3_iter1_reg = ap_const_lv1_0))) then
                icmp_ln882_reg_1109 <= icmp_ln882_fu_676_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_fu_478_p2 = ap_const_lv1_0) and (ap_phi_mux_row_ind_V_0_2_phi_fu_258_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_V_0_0_fu_96(1 downto 0) <= zext_ln301_fu_484_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    row_ind_V_0_0_load_reg_959(1 downto 0) <= row_ind_V_0_0_fu_96(1 downto 0);
                    row_ind_V_1_0_load_reg_964(1 downto 0) <= row_ind_V_1_0_fu_100(1 downto 0);
                    row_ind_V_2_0_load_reg_971(1 downto 0) <= row_ind_V_2_0_fu_104(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_fu_478_p2 = ap_const_lv1_0) and (ap_phi_mux_row_ind_V_0_2_phi_fu_258_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_V_1_0_fu_100(1 downto 0) <= zext_ln301_fu_484_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_row_ind_V_0_2_phi_fu_258_p4 = ap_const_lv2_1)) and not((ap_phi_mux_row_ind_V_0_2_phi_fu_258_p4 = ap_const_lv2_0)) and (icmp_ln878_fu_478_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_V_2_0_fu_104(1 downto 0) <= zext_ln301_fu_484_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (icmp_ln878_5_reg_1076_pp3_iter2_reg = ap_const_lv1_0))) then
                src_buf_V_0_1_reg_1120 <= src_buf_V_0_1_fu_761_p3;
                src_buf_V_1_1_reg_1113 <= src_buf_V_1_1_fu_754_p3;
                src_buf_V_2_0_2_reg_1127 <= src_buf_V_2_0_2_fu_768_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln878_2_fu_509_p2 = ap_const_lv1_1))) then
                trunc_ln466_reg_994 <= trunc_ln466_fu_514_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln878_2_fu_509_p2 = ap_const_lv1_0))) then
                trunc_ln480_reg_998 <= trunc_ln480_fu_518_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    zext_ln456_reg_985(1 downto 0) <= zext_ln456_fu_506_p1(1 downto 0);
            end if;
        end if;
    end process;
    row_ind_V_0_0_load_reg_959(12 downto 2) <= "00000000000";
    row_ind_V_1_0_load_reg_964(12 downto 2) <= "00000000000";
    row_ind_V_2_0_load_reg_971(12 downto 2) <= "00000000000";
    zext_ln456_reg_985(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    row_ind_V_0_0_fu_96(12 downto 2) <= "00000000000";
    row_ind_V_1_0_fu_100(12 downto 2) <= "00000000000";
    row_ind_V_2_0_fu_104(12 downto 2) <= "00000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln878_2_fu_509_p2, ap_CS_fsm_state4, ap_enable_reg_pp1_iter0, icmp_ln878_3_fu_527_p2, ap_enable_reg_pp2_iter0, icmp_ln878_4_fu_552_p2, icmp_ln485_fu_577_p2, ap_CS_fsm_state11, ap_enable_reg_pp3_iter3, ap_block_pp1_stage0_subdone, ap_block_pp2_stage0_subdone, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter2, icmp_ln878_fu_478_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln878_fu_478_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln878_2_fu_509_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln878_3_fu_527_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln878_3_fu_527_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln878_4_fu_552_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln878_4_fu_552_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((icmp_ln485_fu_577_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    add_ln456_fu_540_p2 <= std_logic_vector(unsigned(init_buf_reg_265) + unsigned(ap_const_lv64_1));
    and_ln203_fu_653_p2 <= (icmp_ln878_6_fu_647_p2 and cmp_i_i283_i_reg_1046);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(9);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(7);
    ap_CS_fsm_state11 <= ap_CS_fsm(8);
    ap_CS_fsm_state17 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(gaussian_mat_4209_empty_n, ap_enable_reg_pp1_iter1)
    begin
                ap_block_pp1_stage0_11001 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (gaussian_mat_4209_empty_n = ap_const_logic_0));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(gaussian_mat_4209_empty_n, ap_enable_reg_pp1_iter1)
    begin
                ap_block_pp1_stage0_subdone <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (gaussian_mat_4209_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp3_stage0_01001_assign_proc : process(gaussian_mat_4209_empty_n, gradx_mat_4210_full_n, grady_mat_4213_full_n, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter4, ap_predicate_op134_read_state13, ap_predicate_op207_write_state16, ap_predicate_op208_write_state16)
    begin
                ap_block_pp3_stage0_01001 <= (((ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (((grady_mat_4213_full_n = ap_const_logic_0) and (ap_predicate_op208_write_state16 = ap_const_boolean_1)) or ((gradx_mat_4210_full_n = ap_const_logic_0) and (ap_predicate_op207_write_state16 = ap_const_boolean_1)))) or ((ap_predicate_op134_read_state13 = ap_const_boolean_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (gaussian_mat_4209_empty_n = ap_const_logic_0)));
    end process;


    ap_block_pp3_stage0_11001_assign_proc : process(gaussian_mat_4209_empty_n, gradx_mat_4210_full_n, grady_mat_4213_full_n, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter4, ap_predicate_op134_read_state13, ap_predicate_op207_write_state16, ap_predicate_op208_write_state16)
    begin
                ap_block_pp3_stage0_11001 <= (((ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (((grady_mat_4213_full_n = ap_const_logic_0) and (ap_predicate_op208_write_state16 = ap_const_boolean_1)) or ((gradx_mat_4210_full_n = ap_const_logic_0) and (ap_predicate_op207_write_state16 = ap_const_boolean_1)))) or ((ap_predicate_op134_read_state13 = ap_const_boolean_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (gaussian_mat_4209_empty_n = ap_const_logic_0)));
    end process;


    ap_block_pp3_stage0_subdone_assign_proc : process(gaussian_mat_4209_empty_n, gradx_mat_4210_full_n, grady_mat_4213_full_n, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter4, ap_predicate_op134_read_state13, ap_predicate_op207_write_state16, ap_predicate_op208_write_state16)
    begin
                ap_block_pp3_stage0_subdone <= (((ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (((grady_mat_4213_full_n = ap_const_logic_0) and (ap_predicate_op208_write_state16 = ap_const_boolean_1)) or ((gradx_mat_4210_full_n = ap_const_logic_0) and (ap_predicate_op207_write_state16 = ap_const_boolean_1)))) or ((ap_predicate_op134_read_state13 = ap_const_boolean_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (gaussian_mat_4209_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state12_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state13_pp3_stage0_iter1_assign_proc : process(gaussian_mat_4209_empty_n, ap_predicate_op134_read_state13)
    begin
                ap_block_state13_pp3_stage0_iter1 <= ((ap_predicate_op134_read_state13 = ap_const_boolean_1) and (gaussian_mat_4209_empty_n = ap_const_logic_0));
    end process;

        ap_block_state14_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp3_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state16_pp3_stage0_iter4_assign_proc : process(gradx_mat_4210_full_n, grady_mat_4213_full_n, ap_predicate_op207_write_state16, ap_predicate_op208_write_state16)
    begin
                ap_block_state16_pp3_stage0_iter4 <= (((grady_mat_4213_full_n = ap_const_logic_0) and (ap_predicate_op208_write_state16 = ap_const_boolean_1)) or ((gradx_mat_4210_full_n = ap_const_logic_0) and (ap_predicate_op207_write_state16 = ap_const_boolean_1)));
    end process;

        ap_block_state5_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp1_stage0_iter1_assign_proc : process(gaussian_mat_4209_empty_n)
    begin
                ap_block_state6_pp1_stage0_iter1 <= (gaussian_mat_4209_empty_n = ap_const_logic_0);
    end process;

        ap_block_state8_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp1_exit_iter0_state5_assign_proc : process(icmp_ln878_3_fu_527_p2)
    begin
        if ((icmp_ln878_3_fu_527_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state8_assign_proc : process(icmp_ln878_4_fu_552_p2)
    begin
        if ((icmp_ln878_4_fu_552_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter3_state15_assign_proc : process(ap_enable_reg_pp3_iter3, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            ap_condition_pp3_exit_iter3_state15 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter3_state15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_flush_enable_assign_proc : process(ap_CS_fsm_pp3_stage0, icmp_ln878_5_fu_641_p2, ap_block_pp3_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln878_5_fu_641_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            ap_condition_pp3_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp3_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln485_fu_577_p2, ap_CS_fsm_state11)
    begin
        if ((((icmp_ln485_fu_577_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter4, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter3, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_enable_reg_pp3_iter4 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_col_V_7_phi_fu_347_p4_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, icmp_ln878_5_reg_1076, col_V_7_reg_343, col_V_8_reg_1071)
    begin
        if (((icmp_ln878_5_reg_1076 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            ap_phi_mux_col_V_7_phi_fu_347_p4 <= col_V_8_reg_1071;
        else 
            ap_phi_mux_col_V_7_phi_fu_347_p4 <= col_V_7_reg_343;
        end if; 
    end process;


    ap_phi_mux_col_V_phi_fu_279_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, col_V_reg_275, col_V_6_reg_1003, icmp_ln878_3_reg_1008)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln878_3_reg_1008 = ap_const_lv1_0))) then 
            ap_phi_mux_col_V_phi_fu_279_p4 <= col_V_6_reg_1003;
        else 
            ap_phi_mux_col_V_phi_fu_279_p4 <= col_V_reg_275;
        end if; 
    end process;

    ap_phi_mux_row_ind_V_0_2_phi_fu_258_p4 <= row_ind_V_0_2_reg_254;

    ap_phi_mux_src_buf_V_0_2_3_phi_fu_407_p4_assign_proc : process(ap_block_pp3_stage0, ap_enable_reg_pp3_iter4, icmp_ln878_5_reg_1076_pp3_iter3_reg, src_buf_V_0_2_3_reg_403, src_buf_V_0_1_reg_1120)
    begin
        if (((icmp_ln878_5_reg_1076_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            ap_phi_mux_src_buf_V_0_2_3_phi_fu_407_p4 <= src_buf_V_0_1_reg_1120;
        else 
            ap_phi_mux_src_buf_V_0_2_3_phi_fu_407_p4 <= src_buf_V_0_2_3_reg_403;
        end if; 
    end process;


    ap_phi_mux_src_buf_V_1_2_3_phi_fu_383_p4_assign_proc : process(ap_block_pp3_stage0, ap_enable_reg_pp3_iter4, icmp_ln878_5_reg_1076_pp3_iter3_reg, src_buf_V_1_2_3_reg_379, src_buf_V_1_1_reg_1113)
    begin
        if (((icmp_ln878_5_reg_1076_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            ap_phi_mux_src_buf_V_1_2_3_phi_fu_383_p4 <= src_buf_V_1_1_reg_1113;
        else 
            ap_phi_mux_src_buf_V_1_2_3_phi_fu_383_p4 <= src_buf_V_1_2_3_reg_379;
        end if; 
    end process;


    ap_phi_mux_src_buf_V_2_0_phi_fu_359_p4_assign_proc : process(ap_block_pp3_stage0, ap_enable_reg_pp3_iter4, icmp_ln878_5_reg_1076_pp3_iter3_reg, src_buf_V_2_0_reg_355, src_buf_V_2_0_2_reg_1127)
    begin
        if (((icmp_ln878_5_reg_1076_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            ap_phi_mux_src_buf_V_2_0_phi_fu_359_p4 <= src_buf_V_2_0_2_reg_1127;
        else 
            ap_phi_mux_src_buf_V_2_0_phi_fu_359_p4 <= src_buf_V_2_0_reg_355;
        end if; 
    end process;

    ap_phi_reg_pp3_iter0_src_buf_V_0_0_11_reg_439 <= "XXXXXXXX";
    ap_phi_reg_pp3_iter0_src_buf_V_1_0_1_reg_427 <= "XXXXXXXX";
    ap_phi_reg_pp3_iter0_storemerge_reg_451 <= "XXXXXXXX";

    ap_predicate_op134_read_state13_assign_proc : process(icmp_ln878_5_reg_1076, and_ln203_reg_1087)
    begin
                ap_predicate_op134_read_state13 <= ((ap_const_lv1_1 = and_ln203_reg_1087) and (icmp_ln878_5_reg_1076 = ap_const_lv1_0));
    end process;


    ap_predicate_op207_write_state16_assign_proc : process(icmp_ln878_5_reg_1076_pp3_iter3_reg, icmp_ln882_reg_1109_pp3_iter3_reg)
    begin
                ap_predicate_op207_write_state16 <= ((icmp_ln882_reg_1109_pp3_iter3_reg = ap_const_lv1_0) and (icmp_ln878_5_reg_1076_pp3_iter3_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op208_write_state16_assign_proc : process(icmp_ln878_5_reg_1076_pp3_iter3_reg, icmp_ln882_reg_1109_pp3_iter3_reg)
    begin
                ap_predicate_op208_write_state16 <= ((icmp_ln882_reg_1109_pp3_iter3_reg = ap_const_lv1_0) and (icmp_ln878_5_reg_1076_pp3_iter3_reg = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(icmp_ln485_fu_577_p2, ap_CS_fsm_state11)
    begin
        if (((icmp_ln485_fu_577_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    arrayidx261_i534_load_0_2_fu_747_p3 <= 
        tmp_1_fu_719_p5 when (spec_select54_reg_1056(0) = '1') else 
        tmp_2_fu_735_p5;

    buf_V_0_address0_assign_proc : process(ap_block_pp3_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2, conv_i90_fu_558_p1, ap_block_pp2_stage0, conv_i152_i_fu_669_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            buf_V_0_address0 <= conv_i152_i_fu_669_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            buf_V_0_address0 <= conv_i90_fu_558_p1(11 - 1 downto 0);
        else 
            buf_V_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_V_0_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, ap_CS_fsm_pp2_stage0, buf_V_0_addr_reg_1026, ap_enable_reg_pp2_iter1, zext_ln534_3_fu_533_p1, ap_block_pp2_stage0, zext_ln534_4_fu_658_p1)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_V_0_address1 <= zext_ln534_4_fu_658_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            buf_V_0_address1 <= buf_V_0_addr_reg_1026;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_V_0_address1 <= zext_ln534_3_fu_533_p1(11 - 1 downto 0);
        else 
            buf_V_0_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_V_0_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0_11001, ap_enable_reg_pp3_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)))) then 
            buf_V_0_ce0 <= ap_const_logic_1;
        else 
            buf_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_0_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_V_0_ce1 <= ap_const_logic_1;
        else 
            buf_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_0_d1_assign_proc : process(gaussian_mat_4209_dout, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, tmp_fu_565_p5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            buf_V_0_d1 <= tmp_fu_565_p5;
        elsif ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_V_0_d1 <= gaussian_mat_4209_dout;
        else 
            buf_V_0_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_V_0_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, icmp_ln878_5_reg_1076, and_ln203_reg_1087, ap_block_pp3_stage0_11001, trunc_ln466_reg_994, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, icmp_ln878_4_reg_1022, ap_enable_reg_pp2_iter1, trunc_ln456_fu_665_p1)
    begin
        if ((((ap_const_lv1_1 = and_ln203_reg_1087) and (icmp_ln878_5_reg_1076 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (trunc_ln456_fu_665_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln878_4_reg_1022 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln466_reg_994 = ap_const_lv2_0)))) then 
            buf_V_0_we1 <= ap_const_logic_1;
        else 
            buf_V_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_1_address0_assign_proc : process(ap_block_pp3_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2, conv_i90_fu_558_p1, ap_block_pp2_stage0, conv_i152_i_fu_669_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            buf_V_1_address0 <= conv_i152_i_fu_669_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            buf_V_1_address0 <= conv_i90_fu_558_p1(11 - 1 downto 0);
        else 
            buf_V_1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_V_1_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, zext_ln534_3_fu_533_p1, zext_ln534_4_fu_658_p1)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_V_1_address1 <= zext_ln534_4_fu_658_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_V_1_address1 <= zext_ln534_3_fu_533_p1(11 - 1 downto 0);
        else 
            buf_V_1_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_V_1_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0_11001, ap_enable_reg_pp3_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)))) then 
            buf_V_1_ce0 <= ap_const_logic_1;
        else 
            buf_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_1_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_V_1_ce1 <= ap_const_logic_1;
        else 
            buf_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_1_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, icmp_ln878_5_reg_1076, and_ln203_reg_1087, ap_block_pp3_stage0_11001, trunc_ln466_reg_994, ap_block_pp1_stage0_11001, trunc_ln456_fu_665_p1)
    begin
        if ((((ap_const_lv1_1 = and_ln203_reg_1087) and (icmp_ln878_5_reg_1076 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (trunc_ln456_fu_665_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln466_reg_994 = ap_const_lv2_1)))) then 
            buf_V_1_we1 <= ap_const_logic_1;
        else 
            buf_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_2_address0_assign_proc : process(ap_block_pp3_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2, conv_i90_fu_558_p1, ap_block_pp2_stage0, conv_i152_i_fu_669_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            buf_V_2_address0 <= conv_i152_i_fu_669_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            buf_V_2_address0 <= conv_i90_fu_558_p1(11 - 1 downto 0);
        else 
            buf_V_2_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_V_2_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, zext_ln534_3_fu_533_p1, zext_ln534_4_fu_658_p1)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_V_2_address1 <= zext_ln534_4_fu_658_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_V_2_address1 <= zext_ln534_3_fu_533_p1(11 - 1 downto 0);
        else 
            buf_V_2_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_V_2_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0_11001, ap_enable_reg_pp3_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)))) then 
            buf_V_2_ce0 <= ap_const_logic_1;
        else 
            buf_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_2_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_V_2_ce1 <= ap_const_logic_1;
        else 
            buf_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_2_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, icmp_ln878_5_reg_1076, and_ln203_reg_1087, ap_block_pp3_stage0_11001, trunc_ln466_reg_994, ap_block_pp1_stage0_11001, trunc_ln456_fu_665_p1)
    begin
        if (((not((trunc_ln456_fu_665_p1 = ap_const_lv2_0)) and not((trunc_ln456_fu_665_p1 = ap_const_lv2_1)) and (ap_const_lv1_1 = and_ln203_reg_1087) and (icmp_ln878_5_reg_1076 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or (not((trunc_ln466_reg_994 = ap_const_lv2_0)) and not((trunc_ln466_reg_994 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_V_2_we1 <= ap_const_logic_1;
        else 
            buf_V_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i198_i_2_fu_615_p2 <= "1" when (signed(sub_i_i227_i_fu_603_p2) > signed(ap_const_lv12_0)) else "0";
    cmp_i_i253_i_fu_589_p2 <= "1" when (unsigned(row_V_reg_331) > unsigned(ap_const_lv11_437)) else "0";
    cmp_i_i283_i_fu_583_p2 <= "1" when (unsigned(row_V_reg_331) < unsigned(ap_const_lv11_438)) else "0";
    col_V_5_fu_546_p2 <= std_logic_vector(unsigned(col_V_4_reg_287) + unsigned(ap_const_lv11_1));
    col_V_6_fu_521_p2 <= std_logic_vector(unsigned(ap_phi_mux_col_V_phi_fu_279_p4) + unsigned(ap_const_lv11_1));
    col_V_8_fu_635_p2 <= std_logic_vector(unsigned(ap_phi_mux_col_V_7_phi_fu_347_p4) + unsigned(ap_const_lv11_1));
    conv_i152_i_fu_669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_V_7_reg_343_pp3_iter1_reg),64));
    conv_i90_fu_558_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_V_4_reg_287),64));
    empty_fu_599_p1 <= row_V_reg_331(2 - 1 downto 0);
    g_x_V_3_fu_832_p2 <= std_logic_vector(unsigned(zext_ln1497_1_fu_794_p1) - unsigned(zext_ln1497_fu_783_p1));
    g_x_V_4_fu_842_p2 <= std_logic_vector(signed(sext_ln69_fu_838_p1) + signed(zext_ln100_fu_824_p1));
    g_x_V_fu_848_p2 <= std_logic_vector(unsigned(g_x_V_4_fu_842_p2) - unsigned(zext_ln69_fu_828_p1));
    g_y_V_3_fu_903_p2 <= std_logic_vector(unsigned(zext_ln121_fu_895_p1) - unsigned(zext_ln69_1_fu_899_p1));
    g_y_V_4_fu_913_p2 <= std_logic_vector(signed(sext_ln69_1_fu_909_p1) - signed(zext_ln1497_2_fu_867_p1));
    g_y_V_fu_919_p2 <= std_logic_vector(unsigned(g_y_V_4_fu_913_p2) + unsigned(zext_ln1497_3_fu_879_p1));

    gaussian_mat_4209_blk_n_assign_proc : process(gaussian_mat_4209_empty_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, icmp_ln878_5_reg_1076, and_ln203_reg_1087)
    begin
        if ((((ap_const_lv1_1 = and_ln203_reg_1087) and (icmp_ln878_5_reg_1076 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            gaussian_mat_4209_blk_n <= gaussian_mat_4209_empty_n;
        else 
            gaussian_mat_4209_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gaussian_mat_4209_read_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_predicate_op134_read_state13, ap_block_pp3_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_predicate_op134_read_state13 = ap_const_boolean_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            gaussian_mat_4209_read <= ap_const_logic_1;
        else 
            gaussian_mat_4209_read <= ap_const_logic_0;
        end if; 
    end process;


    gradx_mat_4210_blk_n_assign_proc : process(gradx_mat_4210_full_n, ap_block_pp3_stage0, ap_enable_reg_pp3_iter4, icmp_ln878_5_reg_1076_pp3_iter3_reg, icmp_ln882_reg_1109_pp3_iter3_reg)
    begin
        if (((icmp_ln882_reg_1109_pp3_iter3_reg = ap_const_lv1_0) and (icmp_ln878_5_reg_1076_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            gradx_mat_4210_blk_n <= gradx_mat_4210_full_n;
        else 
            gradx_mat_4210_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        gradx_mat_4210_din <= std_logic_vector(IEEE.numeric_std.resize(signed(g_x_V_fu_848_p2),16));


    gradx_mat_4210_write_assign_proc : process(ap_enable_reg_pp3_iter4, ap_predicate_op207_write_state16, ap_block_pp3_stage0_11001)
    begin
        if (((ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_predicate_op207_write_state16 = ap_const_boolean_1))) then 
            gradx_mat_4210_write <= ap_const_logic_1;
        else 
            gradx_mat_4210_write <= ap_const_logic_0;
        end if; 
    end process;


    grady_mat_4213_blk_n_assign_proc : process(grady_mat_4213_full_n, ap_block_pp3_stage0, ap_enable_reg_pp3_iter4, icmp_ln878_5_reg_1076_pp3_iter3_reg, icmp_ln882_reg_1109_pp3_iter3_reg)
    begin
        if (((icmp_ln882_reg_1109_pp3_iter3_reg = ap_const_lv1_0) and (icmp_ln878_5_reg_1076_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            grady_mat_4213_blk_n <= grady_mat_4213_full_n;
        else 
            grady_mat_4213_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        grady_mat_4213_din <= std_logic_vector(IEEE.numeric_std.resize(signed(g_y_V_fu_919_p2),16));


    grady_mat_4213_write_assign_proc : process(ap_enable_reg_pp3_iter4, ap_predicate_op208_write_state16, ap_block_pp3_stage0_11001)
    begin
        if (((ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_predicate_op208_write_state16 = ap_const_boolean_1))) then 
            grady_mat_4213_write <= ap_const_logic_1;
        else 
            grady_mat_4213_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln485_fu_577_p2 <= "1" when (row_V_reg_331 = ap_const_lv11_439) else "0";
    icmp_ln878_2_fu_509_p2 <= "1" when (signed(init_buf_reg_265) < signed(zext_ln456_reg_985)) else "0";
    icmp_ln878_3_fu_527_p2 <= "1" when (ap_phi_mux_col_V_phi_fu_279_p4 = ap_const_lv11_780) else "0";
    icmp_ln878_4_fu_552_p2 <= "1" when (col_V_4_reg_287 = ap_const_lv11_780) else "0";
    icmp_ln878_5_fu_641_p2 <= "1" when (ap_phi_mux_col_V_7_phi_fu_347_p4 = ap_const_lv11_781) else "0";
    icmp_ln878_6_fu_647_p2 <= "1" when (unsigned(ap_phi_mux_col_V_7_phi_fu_347_p4) < unsigned(ap_const_lv11_780)) else "0";
    icmp_ln878_fu_478_p2 <= "1" when (row_ind_V_0_2_reg_254 = ap_const_lv2_3) else "0";
    icmp_ln882_fu_676_p2 <= "1" when (col_V_7_reg_343_pp3_iter1_reg = ap_const_lv11_0) else "0";
    init_row_ind_fu_463_p2 <= std_logic_vector(unsigned(row_ind_V_0_2_reg_254) + unsigned(ap_const_lv2_1));
    r_1_fu_787_p3 <= (src_buf_V_1_1_reg_1113 & ap_const_lv1_0);
    r_2_fu_859_p3 <= (src_buf_V_0_2_3_reg_403 & ap_const_lv1_0);
    r_3_fu_871_p3 <= (src_buf_V_2_0_reg_355 & ap_const_lv1_0);
    r_fu_775_p3 <= (src_buf_V_1_0_0_reg_391 & ap_const_lv1_0);
    ret_1_fu_818_p2 <= std_logic_vector(unsigned(zext_ln1346_3_fu_814_p1) + unsigned(zext_ln1346_2_fu_810_p1));
    ret_2_fu_883_p2 <= std_logic_vector(unsigned(zext_ln1346_3_fu_814_p1) + unsigned(zext_ln1346_1_fu_801_p1));
    ret_3_fu_889_p2 <= std_logic_vector(unsigned(zext_ln1346_2_fu_810_p1) + unsigned(zext_ln1346_fu_798_p1));
    ret_fu_804_p2 <= std_logic_vector(unsigned(zext_ln1346_1_fu_801_p1) + unsigned(zext_ln1346_fu_798_p1));
    row_V_2_fu_930_p2 <= std_logic_vector(unsigned(row_V_reg_331) + unsigned(ap_const_lv11_1));
    row_V_cast_fu_595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_V_reg_331),12));
        sext_ln69_1_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(g_y_V_3_fu_903_p2),11));

        sext_ln69_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(g_x_V_3_fu_832_p2),11));

    spec_select54_fu_621_p2 <= (cmp_i_i253_i_fu_589_p2 and cmp_i_i198_i_2_fu_615_p2);
    src_buf_V_0_1_fu_761_p3 <= 
        src_buf_V_0_2_fu_682_p5 when (icmp_ln878_6_reg_1080_pp3_iter2_reg(0) = '1') else 
        ap_phi_mux_src_buf_V_0_2_3_phi_fu_407_p4;
    src_buf_V_1_1_fu_754_p3 <= 
        src_buf_V_1_2_fu_693_p5 when (icmp_ln878_6_reg_1080_pp3_iter2_reg(0) = '1') else 
        ap_phi_mux_src_buf_V_1_2_3_phi_fu_383_p4;
    src_buf_V_2_0_2_fu_768_p3 <= 
        arrayidx261_i534_load_0_2_fu_747_p3 when (icmp_ln878_6_reg_1080_pp3_iter2_reg(0) = '1') else 
        ap_phi_mux_src_buf_V_2_0_phi_fu_359_p4;
    sub_i210_i_fu_609_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) - unsigned(empty_fu_599_p1));
    sub_i_i227_i_fu_603_p2 <= std_logic_vector(unsigned(row_V_cast_fu_595_p1) + unsigned(ap_const_lv12_BC9));
    tmp_1_fu_719_p4 <= tmp_s_fu_704_p5(2 - 1 downto 0);
    tmp_2_fu_735_p4 <= row_ind_V_1_1_reg_298(2 - 1 downto 0);
    trunc_ln343_1_fu_631_p1 <= row_ind_V_0_reg_308(2 - 1 downto 0);
    trunc_ln343_fu_627_p1 <= row_ind_V_2_reg_319(2 - 1 downto 0);
    trunc_ln456_fu_665_p1 <= row_ind_V_1_1_reg_298(2 - 1 downto 0);
    trunc_ln466_fu_514_p1 <= init_buf_reg_265(2 - 1 downto 0);
    trunc_ln480_fu_518_p1 <= row_ind_V_1_0_load_reg_964(2 - 1 downto 0);
    zext_ln100_fu_824_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_fu_804_p2),11));
    zext_ln121_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_2_fu_883_p2),10));
    zext_ln1346_1_fu_801_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_2_0_2_reg_1127),9));
    zext_ln1346_2_fu_810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_0_0_0_reg_415),9));
    zext_ln1346_3_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_2_0_0_reg_367),9));
    zext_ln1346_fu_798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_0_1_reg_1120),9));
    zext_ln1497_1_fu_794_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_1_fu_787_p3),10));
    zext_ln1497_2_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_2_fu_859_p3),11));
    zext_ln1497_3_fu_879_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_3_fu_871_p3),11));
    zext_ln1497_fu_783_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_fu_775_p3),10));
    zext_ln301_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_ind_V_0_2_reg_254),13));
    zext_ln456_fu_506_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_ind_V_2_0_load_reg_971),64));
    zext_ln534_3_fu_533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_V_reg_275),64));
    zext_ln534_4_fu_658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_V_7_reg_343),64));
    zext_ln534_fu_503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_ind_V_1_0_load_reg_964),64));
    zext_ln69_1_fu_899_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_3_fu_889_p2),10));
    zext_ln69_fu_828_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_1_fu_818_p2),11));
end behav;
