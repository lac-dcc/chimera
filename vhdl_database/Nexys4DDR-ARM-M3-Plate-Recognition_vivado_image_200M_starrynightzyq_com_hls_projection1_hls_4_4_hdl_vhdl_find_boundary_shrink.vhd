-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity find_boundary_shrink is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    Hdist_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    Hdist_rows_V_empty_n : IN STD_LOGIC;
    Hdist_rows_V_read : OUT STD_LOGIC;
    Hdist_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    Hdist_data_stream_0_V_empty_n : IN STD_LOGIC;
    Hdist_data_stream_0_V_read : OUT STD_LOGIC;
    threshold_height_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    threshold_height_empty_n : IN STD_LOGIC;
    threshold_height_read : OUT STD_LOGIC;
    shrink_y_min_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    shrink_y_min_empty_n : IN STD_LOGIC;
    shrink_y_min_read : OUT STD_LOGIC;
    shrink_y_max_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    shrink_y_max_empty_n : IN STD_LOGIC;
    shrink_y_max_read : OUT STD_LOGIC;
    bound_y_min : OUT STD_LOGIC_VECTOR (15 downto 0);
    bound_y_min_ap_vld : OUT STD_LOGIC;
    bound_y_max : OUT STD_LOGIC_VECTOR (15 downto 0);
    bound_y_max_ap_vld : OUT STD_LOGIC );
end;


architecture behav of find_boundary_shrink is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv31_7FFFFFFF : STD_LOGIC_VECTOR (30 downto 0) := "1111111111111111111111111111111";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal Hdist_rows_V_blk_n : STD_LOGIC;
    signal Hdist_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_reg_603 : STD_LOGIC_VECTOR (0 downto 0);
    signal threshold_height_blk_n : STD_LOGIC;
    signal shrink_y_min_blk_n : STD_LOGIC;
    signal shrink_y_max_blk_n : STD_LOGIC;
    signal inBlock_i_i_reg_186 : STD_LOGIC_VECTOR (0 downto 0);
    signal bound_min_r_1_i_i_reg_198 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_max_r_1_i_i_reg_210 : STD_LOGIC_VECTOR (15 downto 0);
    signal character_num_i_i_reg_222 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_i_i_reg_234 : STD_LOGIC_VECTOR (30 downto 0);
    signal shrink_y_min_read_reg_534 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal shrink_y_max_read_reg_540 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_threshold_fu_245_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_threshold_reg_546 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_249_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_11_reg_552 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_12_reg_557 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_fu_263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_562 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal length_fu_268_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal length_reg_567 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_i_i_fu_274_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_i_i_reg_573 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_5_cast_i_i_fu_280_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_5_cast_i_i_reg_578 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_6_cast_i_i_fu_283_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_6_cast_i_i_reg_583 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_7_i_i_fu_286_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_i_i_reg_588 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_i_i_fu_289_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_i_i_reg_593 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_292_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_reg_598 : STD_LOGIC_VECTOR (15 downto 0);
    signal exitcond_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_reg_603_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_603_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_603_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_603_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_301_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_12_i_i_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_i_i_reg_612 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_i_i_reg_612_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_i_i_reg_612_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_i_i_reg_612_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal bound_min_r_1_fu_313_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_min_r_1_reg_621 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_min_r_1_reg_621_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_min_r_1_reg_621_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_min_r_1_reg_621_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_i_i_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_i_i_reg_627 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_i_i_reg_627_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_i_i_reg_627_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_i_i_reg_627_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_i_i_reg_627_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_i_i_reg_627_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_631 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_i_i_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_i_reg_637 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_reg_642 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_647 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_i_i_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_i_i_reg_652 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_reg_657 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBlock_3_i_i_fu_411_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBlock_3_i_i_reg_662 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal bound_max_r_1_3_i_i_fu_427_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_max_r_1_3_i_i_reg_667 : STD_LOGIC_VECTOR (15 downto 0);
    signal character_num_3_i_i_fu_443_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal character_num_3_i_i_reg_674 : STD_LOGIC_VECTOR (7 downto 0);
    signal bound_min_r_1_3_i_i_fu_471_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_min_r_1_3_i_i_reg_679 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal tmp_18_i_i_fu_510_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_18_i_i_reg_686 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_20_i_i_fu_515_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_i_i_reg_691 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_phi_mux_inBlock_i_i_phi_fu_190_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_bound_min_r_1_i_i_phi_fu_202_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_bound_max_r_1_i_i_phi_fu_214_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_character_num_i_i_phi_fu_226_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal not_i_i_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_inBlock_i_i_fu_335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBlock_0_not_i_i_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_character_num_i_i_fu_348_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal brmerge_i_i_fu_377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bound_max_r_fu_388_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_bound_max_r_1_i_i_fu_341_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp9_fu_419_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal character_num_fu_393_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp1_fu_435_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_bound_min_r_1_i_i_fu_451_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_bound_min_r_1_i_i_40_fu_458_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp5_fu_464_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_cast_i_i_fu_478_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_25_i_i_fu_481_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_15_fu_486_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_i_i_fu_494_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_17_cast_i_i_fu_507_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_18_cast_i_i_cast_fu_519_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_19_i_i_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state4);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    bound_max_r_1_i_i_reg_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_603_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                bound_max_r_1_i_i_reg_210 <= bound_max_r_1_3_i_i_reg_667;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                bound_max_r_1_i_i_reg_210 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    bound_min_r_1_i_i_reg_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_603_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                bound_min_r_1_i_i_reg_198 <= bound_min_r_1_3_i_i_reg_679;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                bound_min_r_1_i_i_reg_198 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    character_num_i_i_reg_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_603_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                character_num_i_i_reg_222 <= character_num_3_i_i_reg_674;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                character_num_i_i_reg_222 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    i_i_i_reg_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_296_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_i_i_reg_234 <= i_fu_301_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                i_i_i_reg_234 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    inBlock_i_i_reg_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_603_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                inBlock_i_i_reg_186 <= inBlock_3_i_i_reg_662;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                inBlock_i_i_reg_186 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_603_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                bound_max_r_1_3_i_i_reg_667 <= bound_max_r_1_3_i_i_fu_427_p3;
                character_num_3_i_i_reg_674 <= character_num_3_i_i_fu_443_p3;
                inBlock_3_i_i_reg_662 <= inBlock_3_i_i_fu_411_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_603_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                bound_min_r_1_3_i_i_reg_679 <= bound_min_r_1_3_i_i_fu_471_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_296_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                bound_min_r_1_reg_621 <= bound_min_r_1_fu_313_p1;
                tmp_12_i_i_reg_612 <= tmp_12_i_i_fu_307_p2;
                tmp_16_i_i_reg_627 <= tmp_16_i_i_fu_317_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                bound_min_r_1_reg_621_pp0_iter1_reg <= bound_min_r_1_reg_621;
                exitcond_reg_603 <= exitcond_fu_296_p2;
                exitcond_reg_603_pp0_iter1_reg <= exitcond_reg_603;
                tmp_12_i_i_reg_612_pp0_iter1_reg <= tmp_12_i_i_reg_612;
                tmp_16_i_i_reg_627_pp0_iter1_reg <= tmp_16_i_i_reg_627;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                bound_min_r_1_reg_621_pp0_iter2_reg <= bound_min_r_1_reg_621_pp0_iter1_reg;
                bound_min_r_1_reg_621_pp0_iter3_reg <= bound_min_r_1_reg_621_pp0_iter2_reg;
                exitcond_reg_603_pp0_iter2_reg <= exitcond_reg_603_pp0_iter1_reg;
                exitcond_reg_603_pp0_iter3_reg <= exitcond_reg_603_pp0_iter2_reg;
                exitcond_reg_603_pp0_iter4_reg <= exitcond_reg_603_pp0_iter3_reg;
                tmp_12_i_i_reg_612_pp0_iter2_reg <= tmp_12_i_i_reg_612_pp0_iter1_reg;
                tmp_12_i_i_reg_612_pp0_iter3_reg <= tmp_12_i_i_reg_612_pp0_iter2_reg;
                tmp_16_i_i_reg_627_pp0_iter2_reg <= tmp_16_i_i_reg_627_pp0_iter1_reg;
                tmp_16_i_i_reg_627_pp0_iter3_reg <= tmp_16_i_i_reg_627_pp0_iter2_reg;
                tmp_16_i_i_reg_627_pp0_iter4_reg <= tmp_16_i_i_reg_627_pp0_iter3_reg;
                tmp_16_i_i_reg_627_pp0_iter5_reg <= tmp_16_i_i_reg_627_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                icmp_reg_562 <= icmp_fu_263_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                length_reg_567 <= length_fu_268_p3;
                    tmp_5_cast_i_i_reg_578(7 downto 0) <= tmp_5_cast_i_i_fu_280_p1(7 downto 0);
                    tmp_6_cast_i_i_reg_583(7 downto 0) <= tmp_6_cast_i_i_fu_283_p1(7 downto 0);
                    tmp_7_i_i_reg_588(7 downto 0) <= tmp_7_i_i_fu_286_p1(7 downto 0);
                    tmp_8_i_i_reg_593(7 downto 0) <= tmp_8_i_i_fu_289_p1(7 downto 0);
                tmp_i_i_reg_573 <= tmp_i_i_fu_274_p2;
                tmp_reg_598 <= tmp_fu_292_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_603_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                or_cond_i_i_reg_647 <= or_cond_i_i_fu_355_p2;
                sel_tmp2_reg_657 <= sel_tmp2_fu_405_p2;
                tmp_14_i_i_reg_652 <= tmp_14_i_i_fu_382_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((shrink_y_max_empty_n = ap_const_logic_0) or (shrink_y_min_empty_n = ap_const_logic_0) or (threshold_height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = Hdist_rows_V_empty_n) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                p_threshold_reg_546 <= p_threshold_fu_245_p1;
                shrink_y_max_read_reg_540 <= shrink_y_max_dout;
                shrink_y_min_read_reg_534 <= shrink_y_min_dout;
                tmp_11_reg_552 <= tmp_11_fu_249_p1;
                tmp_12_reg_557 <= Hdist_rows_V_dout(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_603_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_13_i_i_reg_637 <= tmp_13_i_i_fu_322_p2;
                ult_reg_642 <= ult_fu_326_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_603 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_13_reg_631 <= Hdist_data_stream_0_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_16_i_i_reg_627_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_18_i_i_reg_686 <= tmp_18_i_i_fu_510_p2;
                tmp_20_i_i_reg_691 <= tmp_20_i_i_fu_515_p2;
            end if;
        end if;
    end process;
    tmp_5_cast_i_i_reg_578(16 downto 8) <= "000000000";
    tmp_6_cast_i_i_reg_583(16 downto 8) <= "000000000";
    tmp_7_i_i_reg_588(15 downto 8) <= "00000000";
    tmp_8_i_i_reg_593(15 downto 8) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, Hdist_rows_V_empty_n, threshold_height_empty_n, shrink_y_min_empty_n, shrink_y_max_empty_n, ap_enable_reg_pp0_iter1, exitcond_fu_296_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((shrink_y_max_empty_n = ap_const_logic_0) or (shrink_y_min_empty_n = ap_const_logic_0) or (threshold_height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = Hdist_rows_V_empty_n) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_fu_296_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_fu_296_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;

    Hdist_data_stream_0_V_blk_n_assign_proc : process(Hdist_data_stream_0_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_603)
    begin
        if (((exitcond_reg_603 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Hdist_data_stream_0_V_blk_n <= Hdist_data_stream_0_V_empty_n;
        else 
            Hdist_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    Hdist_data_stream_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_603, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_reg_603 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            Hdist_data_stream_0_V_read <= ap_const_logic_1;
        else 
            Hdist_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    Hdist_rows_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, Hdist_rows_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            Hdist_rows_V_blk_n <= Hdist_rows_V_empty_n;
        else 
            Hdist_rows_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    Hdist_rows_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, Hdist_rows_V_empty_n, threshold_height_empty_n, shrink_y_min_empty_n, shrink_y_max_empty_n)
    begin
        if ((not(((shrink_y_max_empty_n = ap_const_logic_0) or (shrink_y_min_empty_n = ap_const_logic_0) or (threshold_height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = Hdist_rows_V_empty_n) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            Hdist_rows_V_read <= ap_const_logic_1;
        else 
            Hdist_rows_V_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(4);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(Hdist_data_stream_0_V_empty_n, ap_enable_reg_pp0_iter1, exitcond_reg_603)
    begin
                ap_block_pp0_stage0_01001 <= ((exitcond_reg_603 = ap_const_lv1_0) and (ap_const_logic_0 = Hdist_data_stream_0_V_empty_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(Hdist_data_stream_0_V_empty_n, ap_enable_reg_pp0_iter1, exitcond_reg_603)
    begin
                ap_block_pp0_stage0_11001 <= ((exitcond_reg_603 = ap_const_lv1_0) and (ap_const_logic_0 = Hdist_data_stream_0_V_empty_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(Hdist_data_stream_0_V_empty_n, ap_enable_reg_pp0_iter1, exitcond_reg_603)
    begin
                ap_block_pp0_stage0_subdone <= ((exitcond_reg_603 = ap_const_lv1_0) and (ap_const_logic_0 = Hdist_data_stream_0_V_empty_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, Hdist_rows_V_empty_n, threshold_height_empty_n, shrink_y_min_empty_n, shrink_y_max_empty_n)
    begin
                ap_block_state1 <= ((shrink_y_max_empty_n = ap_const_logic_0) or (shrink_y_min_empty_n = ap_const_logic_0) or (threshold_height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = Hdist_rows_V_empty_n) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter1_assign_proc : process(Hdist_data_stream_0_V_empty_n, exitcond_reg_603)
    begin
                ap_block_state5_pp0_stage0_iter1 <= ((exitcond_reg_603 = ap_const_lv1_0) and (ap_const_logic_0 = Hdist_data_stream_0_V_empty_n));
    end process;

        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state4_assign_proc : process(exitcond_fu_296_p2)
    begin
        if ((exitcond_fu_296_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_bound_max_r_1_i_i_phi_fu_214_p4_assign_proc : process(ap_block_pp0_stage0, bound_max_r_1_i_i_reg_210, exitcond_reg_603_pp0_iter3_reg, bound_max_r_1_3_i_i_reg_667, ap_enable_reg_pp0_iter4)
    begin
        if (((exitcond_reg_603_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_bound_max_r_1_i_i_phi_fu_214_p4 <= bound_max_r_1_3_i_i_reg_667;
        else 
            ap_phi_mux_bound_max_r_1_i_i_phi_fu_214_p4 <= bound_max_r_1_i_i_reg_210;
        end if; 
    end process;


    ap_phi_mux_bound_min_r_1_i_i_phi_fu_202_p4_assign_proc : process(ap_block_pp0_stage0, bound_min_r_1_i_i_reg_198, exitcond_reg_603_pp0_iter4_reg, bound_min_r_1_3_i_i_reg_679, ap_enable_reg_pp0_iter5)
    begin
        if (((exitcond_reg_603_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_phi_mux_bound_min_r_1_i_i_phi_fu_202_p4 <= bound_min_r_1_3_i_i_reg_679;
        else 
            ap_phi_mux_bound_min_r_1_i_i_phi_fu_202_p4 <= bound_min_r_1_i_i_reg_198;
        end if; 
    end process;


    ap_phi_mux_character_num_i_i_phi_fu_226_p4_assign_proc : process(ap_block_pp0_stage0, character_num_i_i_reg_222, exitcond_reg_603_pp0_iter3_reg, character_num_3_i_i_reg_674, ap_enable_reg_pp0_iter4)
    begin
        if (((exitcond_reg_603_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_character_num_i_i_phi_fu_226_p4 <= character_num_3_i_i_reg_674;
        else 
            ap_phi_mux_character_num_i_i_phi_fu_226_p4 <= character_num_i_i_reg_222;
        end if; 
    end process;


    ap_phi_mux_inBlock_i_i_phi_fu_190_p4_assign_proc : process(ap_block_pp0_stage0, inBlock_i_i_reg_186, exitcond_reg_603_pp0_iter3_reg, inBlock_3_i_i_reg_662, ap_enable_reg_pp0_iter4)
    begin
        if (((exitcond_reg_603_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_inBlock_i_i_phi_fu_190_p4 <= inBlock_3_i_i_reg_662;
        else 
            ap_phi_mux_inBlock_i_i_phi_fu_190_p4 <= inBlock_i_i_reg_186;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bound_max_r_1_3_i_i_fu_427_p3 <= 
        p_bound_max_r_1_i_i_fu_341_p3 when (sel_tmp2_fu_405_p2(0) = '1') else 
        sel_tmp9_fu_419_p3;
    bound_max_r_fu_388_p2 <= std_logic_vector(signed(ap_const_lv16_FFFF) + signed(bound_min_r_1_reg_621_pp0_iter2_reg));
    bound_min_r_1_3_i_i_fu_471_p3 <= 
        p_bound_min_r_1_i_i_fu_451_p3 when (sel_tmp2_reg_657(0) = '1') else 
        sel_tmp5_fu_464_p3;
    bound_min_r_1_fu_313_p1 <= i_i_i_reg_234(16 - 1 downto 0);
    bound_y_max <= 
        ap_const_lv16_0 when (tmp_15_fu_486_p3(0) = '1') else 
        tmp_27_i_i_fu_494_p2;

    bound_y_max_ap_vld_assign_proc : process(tmp_16_i_i_reg_627_pp0_iter3_reg, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (tmp_16_i_i_reg_627_pp0_iter3_reg = ap_const_lv1_1))) then 
            bound_y_max_ap_vld <= ap_const_logic_1;
        else 
            bound_y_max_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    bound_y_min <= 
        tmp_reg_598 when (tmp_19_i_i_fu_522_p2(0) = '1') else 
        tmp_20_i_i_reg_691;

    bound_y_min_ap_vld_assign_proc : process(tmp_16_i_i_reg_627_pp0_iter5_reg, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (tmp_16_i_i_reg_627_pp0_iter5_reg = ap_const_lv1_1))) then 
            bound_y_min_ap_vld <= ap_const_logic_1;
        else 
            bound_y_min_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_i_i_fu_377_p2 <= (tmp_12_i_i_reg_612_pp0_iter2_reg or tmp6_fu_371_p2);
    character_num_3_i_i_fu_443_p3 <= 
        p_character_num_i_i_fu_348_p3 when (sel_tmp2_fu_405_p2(0) = '1') else 
        sel_tmp1_fu_435_p3;
    character_num_fu_393_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(p_character_num_i_i_fu_348_p3));
    exitcond_fu_296_p2 <= "1" when (i_i_i_reg_234 = length_reg_567) else "0";
    i_fu_301_p2 <= std_logic_vector(unsigned(i_i_i_reg_234) + unsigned(ap_const_lv31_1));
    icmp_fu_263_p2 <= "1" when (signed(tmp_12_reg_557) > signed(ap_const_lv31_0)) else "0";
    inBlock_0_not_i_i_fu_365_p2 <= (ap_phi_mux_inBlock_i_i_phi_fu_190_p4 xor ap_const_lv1_1);
    inBlock_3_i_i_fu_411_p3 <= 
        p_inBlock_i_i_fu_335_p2 when (sel_tmp2_fu_405_p2(0) = '1') else 
        sel_tmp_fu_399_p2;
    length_fu_268_p3 <= 
        tmp_11_reg_552 when (icmp_reg_562(0) = '1') else 
        ap_const_lv31_1;
    not_i_i_fu_330_p2 <= (tmp_12_i_i_reg_612_pp0_iter2_reg xor ap_const_lv1_1);
    or_cond_i_i_fu_355_p2 <= (tmp_13_i_i_reg_637 or p_inBlock_i_i_fu_335_p2);
    p_bound_max_r_1_i_i_fu_341_p3 <= 
        ap_const_lv16_0 when (tmp_12_i_i_reg_612_pp0_iter2_reg(0) = '1') else 
        ap_phi_mux_bound_max_r_1_i_i_phi_fu_214_p4;
    p_bound_min_r_1_i_i_40_fu_458_p3 <= 
        bound_min_r_1_reg_621_pp0_iter3_reg when (tmp_14_i_i_reg_652(0) = '1') else 
        p_bound_min_r_1_i_i_fu_451_p3;
    p_bound_min_r_1_i_i_fu_451_p3 <= 
        ap_const_lv16_0 when (tmp_12_i_i_reg_612_pp0_iter3_reg(0) = '1') else 
        ap_phi_mux_bound_min_r_1_i_i_phi_fu_202_p4;
    p_character_num_i_i_fu_348_p3 <= 
        ap_const_lv8_0 when (tmp_12_i_i_reg_612_pp0_iter2_reg(0) = '1') else 
        ap_phi_mux_character_num_i_i_phi_fu_226_p4;
    p_inBlock_i_i_fu_335_p2 <= (not_i_i_fu_330_p2 and ap_phi_mux_inBlock_i_i_phi_fu_190_p4);
    p_threshold_fu_245_p1 <= threshold_height_dout(16 - 1 downto 0);
    rev2_fu_360_p2 <= (ult_reg_642 xor ap_const_lv1_1);
    sel_tmp1_fu_435_p3 <= 
        character_num_fu_393_p2 when (or_cond_i_i_fu_355_p2(0) = '1') else 
        p_character_num_i_i_fu_348_p3;
    sel_tmp2_fu_405_p2 <= (or_cond_i_i_fu_355_p2 and brmerge_i_i_fu_377_p2);
    sel_tmp5_fu_464_p3 <= 
        p_bound_min_r_1_i_i_fu_451_p3 when (or_cond_i_i_reg_647(0) = '1') else 
        p_bound_min_r_1_i_i_40_fu_458_p3;
    sel_tmp9_fu_419_p3 <= 
        bound_max_r_fu_388_p2 when (or_cond_i_i_fu_355_p2(0) = '1') else 
        p_bound_max_r_1_i_i_fu_341_p3;
    sel_tmp_fu_399_p2 <= (or_cond_i_i_fu_355_p2 xor ap_const_lv1_1);

    shrink_y_max_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, shrink_y_max_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            shrink_y_max_blk_n <= shrink_y_max_empty_n;
        else 
            shrink_y_max_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    shrink_y_max_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, Hdist_rows_V_empty_n, threshold_height_empty_n, shrink_y_min_empty_n, shrink_y_max_empty_n)
    begin
        if ((not(((shrink_y_max_empty_n = ap_const_logic_0) or (shrink_y_min_empty_n = ap_const_logic_0) or (threshold_height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = Hdist_rows_V_empty_n) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            shrink_y_max_read <= ap_const_logic_1;
        else 
            shrink_y_max_read <= ap_const_logic_0;
        end if; 
    end process;


    shrink_y_min_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, shrink_y_min_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            shrink_y_min_blk_n <= shrink_y_min_empty_n;
        else 
            shrink_y_min_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    shrink_y_min_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, Hdist_rows_V_empty_n, threshold_height_empty_n, shrink_y_min_empty_n, shrink_y_max_empty_n)
    begin
        if ((not(((shrink_y_max_empty_n = ap_const_logic_0) or (shrink_y_min_empty_n = ap_const_logic_0) or (threshold_height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = Hdist_rows_V_empty_n) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            shrink_y_min_read <= ap_const_logic_1;
        else 
            shrink_y_min_read <= ap_const_logic_0;
        end if; 
    end process;


    threshold_height_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, threshold_height_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            threshold_height_blk_n <= threshold_height_empty_n;
        else 
            threshold_height_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    threshold_height_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, Hdist_rows_V_empty_n, threshold_height_empty_n, shrink_y_min_empty_n, shrink_y_max_empty_n)
    begin
        if ((not(((shrink_y_max_empty_n = ap_const_logic_0) or (shrink_y_min_empty_n = ap_const_logic_0) or (threshold_height_empty_n = ap_const_logic_0) or (ap_const_logic_0 = Hdist_rows_V_empty_n) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            threshold_height_read <= ap_const_logic_1;
        else 
            threshold_height_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp6_fu_371_p2 <= (rev2_fu_360_p2 or inBlock_0_not_i_i_fu_365_p2);
    tmp_11_fu_249_p1 <= Hdist_rows_V_dout(31 - 1 downto 0);
    tmp_12_i_i_fu_307_p2 <= "1" when (i_i_i_reg_234 = ap_const_lv31_0) else "0";
    tmp_13_i_i_fu_322_p2 <= "1" when (unsigned(tmp_13_reg_631) < unsigned(p_threshold_reg_546)) else "0";
    tmp_14_i_i_fu_382_p2 <= "1" when (p_character_num_i_i_fu_348_p3 = ap_const_lv8_0) else "0";
    tmp_15_fu_486_p3 <= tmp_25_i_i_fu_481_p2(16 downto 16);
    tmp_16_i_i_fu_317_p2 <= "1" when (i_i_i_reg_234 = tmp_i_i_reg_573) else "0";
    tmp_17_cast_i_i_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound_min_r_1_3_i_i_reg_679),17));
    tmp_18_cast_i_i_cast_fu_519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_i_i_reg_686),31));
    tmp_18_i_i_fu_510_p2 <= std_logic_vector(unsigned(tmp_17_cast_i_i_fu_507_p1) + unsigned(tmp_5_cast_i_i_reg_578));
    tmp_19_i_i_fu_522_p2 <= "1" when (unsigned(tmp_18_cast_i_i_cast_fu_519_p1) > unsigned(length_reg_567)) else "0";
    tmp_20_i_i_fu_515_p2 <= std_logic_vector(unsigned(bound_min_r_1_3_i_i_reg_679) + unsigned(tmp_8_i_i_reg_593));
    tmp_24_cast_i_i_fu_478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound_max_r_1_3_i_i_reg_667),17));
    tmp_25_i_i_fu_481_p2 <= std_logic_vector(unsigned(tmp_24_cast_i_i_fu_478_p1) - unsigned(tmp_6_cast_i_i_reg_583));
    tmp_27_i_i_fu_494_p2 <= std_logic_vector(unsigned(bound_max_r_1_3_i_i_reg_667) - unsigned(tmp_7_i_i_reg_588));
    tmp_5_cast_i_i_fu_280_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shrink_y_min_read_reg_534),17));
    tmp_6_cast_i_i_fu_283_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shrink_y_max_read_reg_540),17));
    tmp_7_i_i_fu_286_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shrink_y_max_read_reg_540),16));
    tmp_8_i_i_fu_289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shrink_y_min_read_reg_534),16));
    tmp_fu_292_p1 <= length_fu_268_p3(16 - 1 downto 0);
    tmp_i_i_fu_274_p2 <= std_logic_vector(signed(ap_const_lv31_7FFFFFFF) + signed(length_fu_268_p3));
    ult_fu_326_p2 <= "1" when (unsigned(tmp_13_reg_631) < unsigned(p_threshold_reg_546)) else "0";
end behav;
