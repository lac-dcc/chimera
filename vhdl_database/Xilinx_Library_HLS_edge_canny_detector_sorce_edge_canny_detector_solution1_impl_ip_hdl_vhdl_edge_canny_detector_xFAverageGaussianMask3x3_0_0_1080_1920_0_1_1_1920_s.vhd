-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    gray_img_src_4207_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    gray_img_src_4207_empty_n : IN STD_LOGIC;
    gray_img_src_4207_read : OUT STD_LOGIC;
    gaussian_mat_4209_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    gaussian_mat_4209_full_n : IN STD_LOGIC;
    gaussian_mat_4209_write : OUT STD_LOGIC );
end;


architecture behav of edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv11_780 : STD_LOGIC_VECTOR (10 downto 0) := "11110000000";
    constant ap_const_lv11_439 : STD_LOGIC_VECTOR (10 downto 0) := "10000111001";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv11_438 : STD_LOGIC_VECTOR (10 downto 0) := "10000111000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal gray_img_src_4207_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln878_reg_843 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln878_7_reg_889 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i338_i_reg_880 : STD_LOGIC_VECTOR (0 downto 0);
    signal gaussian_mat_4209_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal icmp_ln870_9_reg_917 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_9_reg_917_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal col_V_reg_239 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_V_10_reg_274 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_V_10_reg_274_pp1_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state6_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op88_read_state7 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal b1_V_reg_286 : STD_LOGIC_VECTOR (7 downto 0);
    signal b0_V_reg_298 : STD_LOGIC_VECTOR (7 downto 0);
    signal m1_V_reg_311 : STD_LOGIC_VECTOR (7 downto 0);
    signal m0_V_reg_323 : STD_LOGIC_VECTOR (7 downto 0);
    signal t1_V_reg_336 : STD_LOGIC_VECTOR (7 downto 0);
    signal t0_V_reg_348 : STD_LOGIC_VECTOR (7 downto 0);
    signal A2_reg_361 : STD_LOGIC_VECTOR (9 downto 0);
    signal col_V_9_fu_409_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln878_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln534_fu_421_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln534_reg_847 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln209_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal cmp_i_i338_i_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_V_11_fu_513_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_V_11_reg_884 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal icmp_ln878_7_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_7_reg_889_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_7_reg_889_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_7_reg_889_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal bottom_load_2_reg_893 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln870_9_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_V_2_reg_921 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_V_2_reg_926 : STD_LOGIC_VECTOR (7 downto 0);
    signal b2_V_xfExtractPixels_1_1_0_s_fu_394_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal b2_V_reg_931 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln50_3_fu_656_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln50_3_reg_936 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln52_2_fu_678_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln52_2_reg_941 : STD_LOGIC_VECTOR (10 downto 0);
    signal phitmp1_fu_684_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal phitmp1_reg_946 : STD_LOGIC_VECTOR (9 downto 0);
    signal row_V_3_fu_723_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_ind_V_4_fu_830_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp1_exit_iter3_state9 : STD_LOGIC;
    signal buf_V_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_V_0_ce0 : STD_LOGIC;
    signal buf_V_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_V_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_V_0_ce1 : STD_LOGIC;
    signal buf_V_0_we1 : STD_LOGIC;
    signal buf_V_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_V_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_V_1_ce0 : STD_LOGIC;
    signal buf_V_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_V_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_V_1_ce1 : STD_LOGIC;
    signal buf_V_1_we1 : STD_LOGIC;
    signal buf_V_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_V_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_V_2_ce0 : STD_LOGIC;
    signal buf_V_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_V_2_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_V_2_ce1 : STD_LOGIC;
    signal buf_V_2_we1 : STD_LOGIC;
    signal buf_V_2_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384_ap_ready : STD_LOGIC;
    signal src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_ready : STD_LOGIC;
    signal b2_V_xfExtractPixels_1_1_0_s_fu_394_ap_ready : STD_LOGIC;
    signal row_V_reg_250 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_phi_mux_row_ind_V_phi_fu_266_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_reg_262 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_col_V_10_phi_fu_278_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_b1_V_phi_fu_290_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_b0_V_phi_fu_302_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_m1_V_phi_fu_315_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_m0_V_phi_fu_327_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_t1_V_phi_fu_340_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_t0_V_phi_fu_352_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter0_buf2_V_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter1_buf2_V_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter2_buf2_V_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter3_buf2_V_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf0_V_fu_552_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf1_V_fu_565_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln534_6_fu_525_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln534_5_fu_532_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln117_fu_539_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tp_fu_104 : STD_LOGIC_VECTOR (1 downto 0);
    signal tp_1_fu_468_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal mid_fu_108 : STD_LOGIC_VECTOR (1 downto 0);
    signal mid_2_fu_476_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal bottom_fu_112 : STD_LOGIC_VECTOR (1 downto 0);
    signal bottom_2_fu_484_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal icmp_ln870_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln45_fu_578_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln46_fu_586_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal A00_fu_598_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln45_1_fu_582_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1460_1_fu_590_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln49_fu_608_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln49_fu_614_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln46_1_fu_604_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln48_fu_628_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln47_fu_624_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln48_fu_636_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln48_1_fu_632_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1460_2_fu_594_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln50_2_fu_646_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln50_4_fu_652_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln50_3_fu_642_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal A0_1_fu_618_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal A2_1_fu_662_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln52_6_fu_674_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln52_4_fu_670_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal A1_1_fu_692_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln52_7_fu_703_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln52_5_fu_699_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln52_3_fu_706_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1460_fu_737_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln878_1_fu_733_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln50_fu_747_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln878_fu_729_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln50_fu_755_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln50_2_fu_761_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln50_1_fu_751_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln50_1_fu_765_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal A0_fu_741_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal A1_fu_771_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln52_2_fu_787_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln52_fu_779_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln52_fu_791_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln52_3_fu_797_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln52_1_fu_783_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln52_1_fu_801_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal row_ind_V_3_fu_818_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln870_8_fu_824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_175 : BOOLEAN;
    signal ap_condition_187 : BOOLEAN;
    signal ap_condition_723 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component edge_canny_detector_xfExtractPixels_1_1_0_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        p_read1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component edge_canny_detector_mux_32_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s_buf_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buf_V_0_U : component edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s_buf_V_0
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_0_address0,
        ce0 => buf_V_0_ce0,
        q0 => buf_V_0_q0,
        address1 => buf_V_0_address1,
        ce1 => buf_V_0_ce1,
        we1 => buf_V_0_we1,
        d1 => buf_V_0_d1);

    buf_V_1_U : component edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s_buf_V_0
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_1_address0,
        ce0 => buf_V_1_ce0,
        q0 => buf_V_1_q0,
        address1 => buf_V_1_address1,
        ce1 => buf_V_1_ce1,
        we1 => buf_V_1_we1,
        d1 => buf_V_1_d1);

    buf_V_2_U : component edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s_buf_V_0
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_2_address0,
        ce0 => buf_V_2_ce0,
        q0 => buf_V_2_q0,
        address1 => buf_V_2_address1,
        ce1 => buf_V_2_ce1,
        we1 => buf_V_2_we1,
        d1 => buf_V_2_d1);

    src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384 : component edge_canny_detector_xfExtractPixels_1_1_0_s
    port map (
        ap_ready => src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384_ap_ready,
        p_read1 => buf0_V_fu_552_p5,
        ap_return => src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384_ap_return);

    src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389 : component edge_canny_detector_xfExtractPixels_1_1_0_s
    port map (
        ap_ready => src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_ready,
        p_read1 => buf1_V_fu_565_p5,
        ap_return => src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_return);

    b2_V_xfExtractPixels_1_1_0_s_fu_394 : component edge_canny_detector_xfExtractPixels_1_1_0_s
    port map (
        ap_ready => b2_V_xfExtractPixels_1_1_0_s_fu_394_ap_ready,
        p_read1 => ap_phi_reg_pp1_iter3_buf2_V_reg_373,
        ap_return => b2_V_xfExtractPixels_1_1_0_s_fu_394_ap_return);

    mux_32_8_1_1_U30 : component edge_canny_detector_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_V_0_q0,
        din1 => buf_V_1_q0,
        din2 => buf_V_2_q0,
        din3 => tp_fu_104,
        dout => buf0_V_fu_552_p5);

    mux_32_8_1_1_U31 : component edge_canny_detector_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_V_0_q0,
        din1 => buf_V_1_q0,
        din2 => buf_V_2_q0,
        din3 => mid_fu_108,
        dout => buf1_V_fu_565_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln209_fu_426_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp1_flush_enable)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln209_fu_426_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter3_state9)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln209_fu_426_p2 = ap_const_lv1_0)))) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter3_state9))) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter2;
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln209_fu_426_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    A2_reg_361_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln878_7_reg_889_pp1_iter3_reg = ap_const_lv1_0))) then 
                                A2_reg_361(9 downto 2) <= phitmp1_reg_946(9 downto 2);
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln209_fu_426_p2 = ap_const_lv1_0))) then 
                A2_reg_361(2) <= '0';
                A2_reg_361(3) <= '0';
                A2_reg_361(4) <= '0';
                A2_reg_361(5) <= '0';
                A2_reg_361(6) <= '0';
                A2_reg_361(7) <= '0';
                A2_reg_361(8) <= '0';
                A2_reg_361(9) <= '0';
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter1_buf2_V_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_175)) then
                if (((cmp_i_i338_i_reg_880 = ap_const_lv1_0) and (icmp_ln878_7_fu_519_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_buf2_V_reg_373 <= ap_const_lv8_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter1_buf2_V_reg_373 <= ap_phi_reg_pp1_iter0_buf2_V_reg_373;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_buf2_V_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_187)) then
                if (((cmp_i_i338_i_reg_880 = ap_const_lv1_1) and (icmp_ln878_7_reg_889 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter2_buf2_V_reg_373 <= gray_img_src_4207_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_buf2_V_reg_373 <= ap_phi_reg_pp1_iter1_buf2_V_reg_373;
                end if;
            end if; 
        end if;
    end process;

    b0_V_reg_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln878_7_reg_889_pp1_iter3_reg = ap_const_lv1_0))) then 
                b0_V_reg_298 <= b1_V_reg_286;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln209_fu_426_p2 = ap_const_lv1_0))) then 
                b0_V_reg_298 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    b1_V_reg_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln878_7_reg_889_pp1_iter3_reg = ap_const_lv1_0))) then 
                b1_V_reg_286 <= b2_V_reg_931;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln209_fu_426_p2 = ap_const_lv1_0))) then 
                b1_V_reg_286 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    bottom_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln209_fu_426_p2 = ap_const_lv1_0))) then
                if ((not((ap_phi_mux_row_ind_V_phi_fu_266_p4 = ap_const_lv13_2)) and not((ap_phi_mux_row_ind_V_phi_fu_266_p4 = ap_const_lv13_0)))) then 
                    bottom_fu_112 <= bottom_2_fu_484_p3;
                elsif ((ap_phi_mux_row_ind_V_phi_fu_266_p4 = ap_const_lv13_2)) then 
                    bottom_fu_112 <= ap_const_lv2_2;
                elsif ((ap_phi_mux_row_ind_V_phi_fu_266_p4 = ap_const_lv13_0)) then 
                    bottom_fu_112 <= ap_const_lv2_0;
                end if;
            end if; 
        end if;
    end process;

    col_V_10_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                col_V_10_reg_274 <= col_V_11_reg_884;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln209_fu_426_p2 = ap_const_lv1_0))) then 
                col_V_10_reg_274 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    col_V_reg_239_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln878_fu_415_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                col_V_reg_239 <= col_V_9_fu_409_p2;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                col_V_reg_239 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    m0_V_reg_323_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln878_7_reg_889_pp1_iter3_reg = ap_const_lv1_0))) then 
                m0_V_reg_323 <= m1_V_reg_311;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln209_fu_426_p2 = ap_const_lv1_0))) then 
                m0_V_reg_323 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    m1_V_reg_311_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln878_7_reg_889_pp1_iter3_reg = ap_const_lv1_0))) then 
                m1_V_reg_311 <= src_buf2_V_2_reg_926;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln209_fu_426_p2 = ap_const_lv1_0))) then 
                m1_V_reg_311 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    mid_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln209_fu_426_p2 = ap_const_lv1_0))) then
                if ((not((ap_phi_mux_row_ind_V_phi_fu_266_p4 = ap_const_lv13_2)) and not((ap_phi_mux_row_ind_V_phi_fu_266_p4 = ap_const_lv13_0)))) then 
                    mid_fu_108 <= mid_2_fu_476_p3;
                elsif ((ap_phi_mux_row_ind_V_phi_fu_266_p4 = ap_const_lv13_2)) then 
                    mid_fu_108 <= ap_const_lv2_1;
                elsif ((ap_phi_mux_row_ind_V_phi_fu_266_p4 = ap_const_lv13_0)) then 
                    mid_fu_108 <= ap_const_lv2_2;
                end if;
            end if; 
        end if;
    end process;

    row_V_reg_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                row_V_reg_250 <= ap_const_lv11_1;
            elsif (((gaussian_mat_4209_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                row_V_reg_250 <= row_V_3_fu_723_p2;
            end if; 
        end if;
    end process;

    row_ind_V_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                row_ind_V_reg_262 <= ap_const_lv13_2;
            elsif (((gaussian_mat_4209_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                row_ind_V_reg_262 <= row_ind_V_4_fu_830_p3;
            end if; 
        end if;
    end process;

    t0_V_reg_348_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln878_7_reg_889_pp1_iter3_reg = ap_const_lv1_0))) then 
                t0_V_reg_348 <= t1_V_reg_336;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln209_fu_426_p2 = ap_const_lv1_0))) then 
                t0_V_reg_348 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    t1_V_reg_336_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln878_7_reg_889_pp1_iter3_reg = ap_const_lv1_0))) then 
                t1_V_reg_336 <= src_buf1_V_2_reg_921;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln209_fu_426_p2 = ap_const_lv1_0))) then 
                t1_V_reg_336 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    tp_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln209_fu_426_p2 = ap_const_lv1_0))) then
                if ((not((ap_phi_mux_row_ind_V_phi_fu_266_p4 = ap_const_lv13_2)) and not((ap_phi_mux_row_ind_V_phi_fu_266_p4 = ap_const_lv13_0)))) then 
                    tp_fu_104 <= tp_1_fu_468_p3;
                elsif ((ap_phi_mux_row_ind_V_phi_fu_266_p4 = ap_const_lv13_2)) then 
                    tp_fu_104 <= ap_const_lv2_0;
                elsif ((ap_phi_mux_row_ind_V_phi_fu_266_p4 = ap_const_lv13_0)) then 
                    tp_fu_104 <= ap_const_lv2_1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln878_7_reg_889_pp1_iter2_reg = ap_const_lv1_0))) then
                add_ln50_3_reg_936 <= add_ln50_3_fu_656_p2;
                add_ln52_2_reg_941 <= add_ln52_2_fu_678_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp1_iter3_buf2_V_reg_373 <= ap_phi_reg_pp1_iter2_buf2_V_reg_373;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln878_7_reg_889_pp1_iter2_reg = ap_const_lv1_0))) then
                b2_V_reg_931 <= b2_V_xfExtractPixels_1_1_0_s_fu_394_ap_return;
                    phitmp1_reg_946(9 downto 2) <= phitmp1_fu_684_p3(9 downto 2);
                src_buf1_V_2_reg_921 <= src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384_ap_return;
                src_buf2_V_2_reg_926 <= src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln878_7_fu_519_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                bottom_load_2_reg_893 <= bottom_fu_112;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln209_fu_426_p2 = ap_const_lv1_0))) then
                cmp_i_i338_i_reg_880 <= cmp_i_i338_i_fu_507_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                col_V_10_reg_274_pp1_iter1_reg <= col_V_10_reg_274;
                icmp_ln878_7_reg_889 <= icmp_ln878_7_fu_519_p2;
                icmp_ln878_7_reg_889_pp1_iter1_reg <= icmp_ln878_7_reg_889;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                col_V_11_reg_884 <= col_V_11_fu_513_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln878_7_reg_889_pp1_iter1_reg = ap_const_lv1_0))) then
                icmp_ln870_9_reg_917 <= icmp_ln870_9_fu_546_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln870_9_reg_917_pp1_iter3_reg <= icmp_ln870_9_reg_917;
                icmp_ln878_7_reg_889_pp1_iter2_reg <= icmp_ln878_7_reg_889_pp1_iter1_reg;
                icmp_ln878_7_reg_889_pp1_iter3_reg <= icmp_ln878_7_reg_889_pp1_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln878_reg_843 <= icmp_ln878_fu_415_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln878_fu_415_p2 = ap_const_lv1_0))) then
                    zext_ln534_reg_847(10 downto 0) <= zext_ln534_fu_421_p1(10 downto 0);
            end if;
        end if;
    end process;
    A2_reg_361(1 downto 0) <= "00";
    zext_ln534_reg_847(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    phitmp1_reg_946(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, gaussian_mat_4209_full_n, ap_CS_fsm_state11, ap_enable_reg_pp0_iter0, icmp_ln878_fu_415_p2, icmp_ln209_fu_426_p2, ap_CS_fsm_state5, ap_enable_reg_pp1_iter3, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln878_fu_415_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln878_fu_415_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln209_fu_426_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                if (((gaussian_mat_4209_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    A00_fu_598_p2 <= std_logic_vector(unsigned(zext_ln45_fu_578_p1) + unsigned(zext_ln46_fu_586_p1));
    A0_1_fu_618_p2 <= std_logic_vector(unsigned(zext_ln49_fu_614_p1) + unsigned(zext_ln46_1_fu_604_p1));
    A0_fu_741_p2 <= std_logic_vector(unsigned(zext_ln1460_fu_737_p1) + unsigned(zext_ln878_1_fu_733_p1));
    A1_1_fu_692_p3 <= (add_ln50_3_reg_936 & ap_const_lv1_0);
    A1_fu_771_p3 <= (add_ln50_1_fu_765_p2 & ap_const_lv1_0);
    A2_1_fu_662_p3 <= (ap_phi_mux_m1_V_phi_fu_315_p4 & ap_const_lv2_0);
    add_ln48_fu_636_p2 <= std_logic_vector(unsigned(zext_ln48_fu_628_p1) + unsigned(zext_ln47_fu_624_p1));
    add_ln49_fu_608_p2 <= std_logic_vector(unsigned(zext_ln45_1_fu_582_p1) + unsigned(zext_ln1460_1_fu_590_p1));
    add_ln50_1_fu_765_p2 <= std_logic_vector(unsigned(zext_ln50_2_fu_761_p1) + unsigned(zext_ln50_1_fu_751_p1));
    add_ln50_2_fu_646_p2 <= std_logic_vector(unsigned(zext_ln48_1_fu_632_p1) + unsigned(zext_ln1460_2_fu_594_p1));
    add_ln50_3_fu_656_p2 <= std_logic_vector(unsigned(zext_ln50_4_fu_652_p1) + unsigned(zext_ln50_3_fu_642_p1));
    add_ln50_fu_755_p2 <= std_logic_vector(unsigned(zext_ln50_fu_747_p1) + unsigned(zext_ln878_fu_729_p1));
    add_ln52_1_fu_801_p2 <= std_logic_vector(unsigned(zext_ln52_3_fu_797_p1) + unsigned(zext_ln52_1_fu_783_p1));
    add_ln52_2_fu_678_p2 <= std_logic_vector(unsigned(zext_ln52_6_fu_674_p1) + unsigned(zext_ln52_4_fu_670_p1));
    add_ln52_3_fu_706_p2 <= std_logic_vector(unsigned(zext_ln52_7_fu_703_p1) + unsigned(zext_ln52_5_fu_699_p1));
    add_ln52_fu_791_p2 <= std_logic_vector(unsigned(zext_ln52_2_fu_787_p1) + unsigned(zext_ln52_fu_779_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(5);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(gray_img_src_4207_empty_n, ap_enable_reg_pp0_iter1, icmp_ln878_reg_843)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln878_reg_843 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (gray_img_src_4207_empty_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(gray_img_src_4207_empty_n, ap_enable_reg_pp0_iter1, icmp_ln878_reg_843)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln878_reg_843 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (gray_img_src_4207_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(gray_img_src_4207_empty_n, gaussian_mat_4209_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, icmp_ln870_9_reg_917_pp1_iter3_reg, ap_predicate_op88_read_state7)
    begin
                ap_block_pp1_stage0_01001 <= (((icmp_ln870_9_reg_917_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (gaussian_mat_4209_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (gray_img_src_4207_empty_n = ap_const_logic_0) and (ap_predicate_op88_read_state7 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(gray_img_src_4207_empty_n, gaussian_mat_4209_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, icmp_ln870_9_reg_917_pp1_iter3_reg, ap_predicate_op88_read_state7)
    begin
                ap_block_pp1_stage0_11001 <= (((icmp_ln870_9_reg_917_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (gaussian_mat_4209_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (gray_img_src_4207_empty_n = ap_const_logic_0) and (ap_predicate_op88_read_state7 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(gray_img_src_4207_empty_n, gaussian_mat_4209_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, icmp_ln870_9_reg_917_pp1_iter3_reg, ap_predicate_op88_read_state7)
    begin
                ap_block_pp1_stage0_subdone <= (((icmp_ln870_9_reg_917_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (gaussian_mat_4209_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (gray_img_src_4207_empty_n = ap_const_logic_0) and (ap_predicate_op88_read_state7 = ap_const_boolean_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state10_pp1_stage0_iter4_assign_proc : process(gaussian_mat_4209_full_n, icmp_ln870_9_reg_917_pp1_iter3_reg)
    begin
                ap_block_state10_pp1_stage0_iter4 <= ((icmp_ln870_9_reg_917_pp1_iter3_reg = ap_const_lv1_0) and (gaussian_mat_4209_full_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(gray_img_src_4207_empty_n, icmp_ln878_reg_843)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((icmp_ln878_reg_843 = ap_const_lv1_0) and (gray_img_src_4207_empty_n = ap_const_logic_0));
    end process;

        ap_block_state6_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp1_stage0_iter1_assign_proc : process(gray_img_src_4207_empty_n, ap_predicate_op88_read_state7)
    begin
                ap_block_state7_pp1_stage0_iter1 <= ((gray_img_src_4207_empty_n = ap_const_logic_0) and (ap_predicate_op88_read_state7 = ap_const_boolean_1));
    end process;

        ap_block_state8_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_175_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
                ap_condition_175 <= ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1));
    end process;


    ap_condition_187_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001)
    begin
                ap_condition_187 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_723_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln878_7_reg_889, bottom_load_2_reg_893)
    begin
                ap_condition_723 <= (not((bottom_load_2_reg_893 = ap_const_lv2_1)) and not((bottom_load_2_reg_893 = ap_const_lv2_0)) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln878_fu_415_p2)
    begin
        if ((icmp_ln878_fu_415_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter3_state9_assign_proc : process(ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_condition_pp1_exit_iter3_state9 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter3_state9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_flush_enable_assign_proc : process(ap_CS_fsm_pp1_stage0, icmp_ln878_7_fu_519_p2, ap_block_pp1_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln878_7_fu_519_p2 = ap_const_lv1_1))) then 
            ap_condition_pp1_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp1_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln209_fu_426_p2, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln209_fu_426_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_b0_V_phi_fu_302_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, b1_V_reg_286, b0_V_reg_298, icmp_ln878_7_reg_889_pp1_iter3_reg)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln878_7_reg_889_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_b0_V_phi_fu_302_p4 <= b1_V_reg_286;
        else 
            ap_phi_mux_b0_V_phi_fu_302_p4 <= b0_V_reg_298;
        end if; 
    end process;


    ap_phi_mux_b1_V_phi_fu_290_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, b1_V_reg_286, icmp_ln878_7_reg_889_pp1_iter3_reg, b2_V_reg_931)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln878_7_reg_889_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_b1_V_phi_fu_290_p4 <= b2_V_reg_931;
        else 
            ap_phi_mux_b1_V_phi_fu_290_p4 <= b1_V_reg_286;
        end if; 
    end process;


    ap_phi_mux_col_V_10_phi_fu_278_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln878_7_reg_889, col_V_10_reg_274, col_V_11_reg_884)
    begin
        if (((icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_col_V_10_phi_fu_278_p4 <= col_V_11_reg_884;
        else 
            ap_phi_mux_col_V_10_phi_fu_278_p4 <= col_V_10_reg_274;
        end if; 
    end process;


    ap_phi_mux_m0_V_phi_fu_327_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, m1_V_reg_311, m0_V_reg_323, icmp_ln878_7_reg_889_pp1_iter3_reg)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln878_7_reg_889_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_m0_V_phi_fu_327_p4 <= m1_V_reg_311;
        else 
            ap_phi_mux_m0_V_phi_fu_327_p4 <= m0_V_reg_323;
        end if; 
    end process;


    ap_phi_mux_m1_V_phi_fu_315_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, m1_V_reg_311, icmp_ln878_7_reg_889_pp1_iter3_reg, src_buf2_V_2_reg_926)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln878_7_reg_889_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_m1_V_phi_fu_315_p4 <= src_buf2_V_2_reg_926;
        else 
            ap_phi_mux_m1_V_phi_fu_315_p4 <= m1_V_reg_311;
        end if; 
    end process;

    ap_phi_mux_row_ind_V_phi_fu_266_p4 <= row_ind_V_reg_262;

    ap_phi_mux_t0_V_phi_fu_352_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, t1_V_reg_336, t0_V_reg_348, icmp_ln878_7_reg_889_pp1_iter3_reg)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln878_7_reg_889_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_t0_V_phi_fu_352_p4 <= t1_V_reg_336;
        else 
            ap_phi_mux_t0_V_phi_fu_352_p4 <= t0_V_reg_348;
        end if; 
    end process;


    ap_phi_mux_t1_V_phi_fu_340_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, t1_V_reg_336, icmp_ln878_7_reg_889_pp1_iter3_reg, src_buf1_V_2_reg_921)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln878_7_reg_889_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_t1_V_phi_fu_340_p4 <= src_buf1_V_2_reg_921;
        else 
            ap_phi_mux_t1_V_phi_fu_340_p4 <= t1_V_reg_336;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_buf2_V_reg_373 <= "XXXXXXXX";

    ap_predicate_op88_read_state7_assign_proc : process(icmp_ln878_7_reg_889, cmp_i_i338_i_reg_880)
    begin
                ap_predicate_op88_read_state7 <= ((cmp_i_i338_i_reg_880 = ap_const_lv1_1) and (icmp_ln878_7_reg_889 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    bottom_2_fu_484_p3 <= 
        ap_const_lv2_1 when (icmp_ln870_fu_462_p2(0) = '1') else 
        bottom_fu_112;
    buf_V_0_address0 <= zext_ln117_fu_539_p1(11 - 1 downto 0);

    buf_V_0_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln878_7_reg_889, cmp_i_i338_i_reg_880, ap_enable_reg_pp0_iter0, zext_ln534_fu_421_p1, bottom_load_2_reg_893, zext_ln534_6_fu_525_p1, zext_ln534_5_fu_532_p1)
    begin
        if (((cmp_i_i338_i_reg_880 = ap_const_lv1_1) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (bottom_load_2_reg_893 = ap_const_lv2_0))) then 
            buf_V_0_address1 <= zext_ln534_5_fu_532_p1(11 - 1 downto 0);
        elsif (((cmp_i_i338_i_reg_880 = ap_const_lv1_0) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (bottom_load_2_reg_893 = ap_const_lv2_0))) then 
            buf_V_0_address1 <= zext_ln534_6_fu_525_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buf_V_0_address1 <= zext_ln534_fu_421_p1(11 - 1 downto 0);
        else 
            buf_V_0_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_V_0_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_V_0_ce0 <= ap_const_logic_1;
        else 
            buf_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln878_7_reg_889, cmp_i_i338_i_reg_880, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, bottom_load_2_reg_893)
    begin
        if ((((cmp_i_i338_i_reg_880 = ap_const_lv1_1) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (bottom_load_2_reg_893 = ap_const_lv2_0)) or ((cmp_i_i338_i_reg_880 = ap_const_lv1_0) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (bottom_load_2_reg_893 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            buf_V_0_ce1 <= ap_const_logic_1;
        else 
            buf_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_0_d1_assign_proc : process(gray_img_src_4207_dout, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln878_7_reg_889, cmp_i_i338_i_reg_880, ap_enable_reg_pp0_iter0, bottom_load_2_reg_893)
    begin
        if (((cmp_i_i338_i_reg_880 = ap_const_lv1_1) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (bottom_load_2_reg_893 = ap_const_lv2_0))) then 
            buf_V_0_d1 <= gray_img_src_4207_dout;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((cmp_i_i338_i_reg_880 = ap_const_lv1_0) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (bottom_load_2_reg_893 = ap_const_lv2_0)))) then 
            buf_V_0_d1 <= ap_const_lv8_0;
        else 
            buf_V_0_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_V_0_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln878_7_reg_889, cmp_i_i338_i_reg_880, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, icmp_ln878_fu_415_p2, bottom_load_2_reg_893)
    begin
        if ((((cmp_i_i338_i_reg_880 = ap_const_lv1_1) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (bottom_load_2_reg_893 = ap_const_lv2_0)) or ((cmp_i_i338_i_reg_880 = ap_const_lv1_0) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (bottom_load_2_reg_893 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln878_fu_415_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            buf_V_0_we1 <= ap_const_logic_1;
        else 
            buf_V_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_1_address0 <= zext_ln117_fu_539_p1(11 - 1 downto 0);

    buf_V_1_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln878_7_reg_889, cmp_i_i338_i_reg_880, zext_ln534_reg_847, bottom_load_2_reg_893, zext_ln534_6_fu_525_p1, zext_ln534_5_fu_532_p1)
    begin
        if (((cmp_i_i338_i_reg_880 = ap_const_lv1_1) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (bottom_load_2_reg_893 = ap_const_lv2_1))) then 
            buf_V_1_address1 <= zext_ln534_5_fu_532_p1(11 - 1 downto 0);
        elsif (((cmp_i_i338_i_reg_880 = ap_const_lv1_0) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (bottom_load_2_reg_893 = ap_const_lv2_1))) then 
            buf_V_1_address1 <= zext_ln534_6_fu_525_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_V_1_address1 <= zext_ln534_reg_847(11 - 1 downto 0);
        else 
            buf_V_1_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_V_1_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_V_1_ce0 <= ap_const_logic_1;
        else 
            buf_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln878_7_reg_889, cmp_i_i338_i_reg_880, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, bottom_load_2_reg_893)
    begin
        if ((((cmp_i_i338_i_reg_880 = ap_const_lv1_1) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (bottom_load_2_reg_893 = ap_const_lv2_1)) or ((cmp_i_i338_i_reg_880 = ap_const_lv1_0) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (bottom_load_2_reg_893 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_V_1_ce1 <= ap_const_logic_1;
        else 
            buf_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_1_d1_assign_proc : process(gray_img_src_4207_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln878_7_reg_889, cmp_i_i338_i_reg_880, bottom_load_2_reg_893)
    begin
        if (((cmp_i_i338_i_reg_880 = ap_const_lv1_0) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (bottom_load_2_reg_893 = ap_const_lv2_1))) then 
            buf_V_1_d1 <= ap_const_lv8_0;
        elsif ((((cmp_i_i338_i_reg_880 = ap_const_lv1_1) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (bottom_load_2_reg_893 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_V_1_d1 <= gray_img_src_4207_dout;
        else 
            buf_V_1_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_V_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln878_reg_843, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln878_7_reg_889, cmp_i_i338_i_reg_880, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, bottom_load_2_reg_893)
    begin
        if ((((cmp_i_i338_i_reg_880 = ap_const_lv1_1) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (bottom_load_2_reg_893 = ap_const_lv2_1)) or ((icmp_ln878_reg_843 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((cmp_i_i338_i_reg_880 = ap_const_lv1_0) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (bottom_load_2_reg_893 = ap_const_lv2_1)))) then 
            buf_V_1_we1 <= ap_const_logic_1;
        else 
            buf_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_2_address0 <= zext_ln117_fu_539_p1(11 - 1 downto 0);

    buf_V_2_address1_assign_proc : process(cmp_i_i338_i_reg_880, zext_ln534_6_fu_525_p1, zext_ln534_5_fu_532_p1, ap_condition_723)
    begin
        if ((ap_const_boolean_1 = ap_condition_723)) then
            if ((cmp_i_i338_i_reg_880 = ap_const_lv1_1)) then 
                buf_V_2_address1 <= zext_ln534_5_fu_532_p1(11 - 1 downto 0);
            elsif ((cmp_i_i338_i_reg_880 = ap_const_lv1_0)) then 
                buf_V_2_address1 <= zext_ln534_6_fu_525_p1(11 - 1 downto 0);
            else 
                buf_V_2_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            buf_V_2_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_V_2_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_V_2_ce0 <= ap_const_logic_1;
        else 
            buf_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_2_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln878_7_reg_889, cmp_i_i338_i_reg_880, ap_block_pp1_stage0_11001, bottom_load_2_reg_893)
    begin
        if (((not((bottom_load_2_reg_893 = ap_const_lv2_1)) and not((bottom_load_2_reg_893 = ap_const_lv2_0)) and (cmp_i_i338_i_reg_880 = ap_const_lv1_1) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or (not((bottom_load_2_reg_893 = ap_const_lv2_1)) and not((bottom_load_2_reg_893 = ap_const_lv2_0)) and (cmp_i_i338_i_reg_880 = ap_const_lv1_0) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_V_2_ce1 <= ap_const_logic_1;
        else 
            buf_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_2_d1_assign_proc : process(gray_img_src_4207_dout, cmp_i_i338_i_reg_880, ap_condition_723)
    begin
        if ((ap_const_boolean_1 = ap_condition_723)) then
            if ((cmp_i_i338_i_reg_880 = ap_const_lv1_1)) then 
                buf_V_2_d1 <= gray_img_src_4207_dout;
            elsif ((cmp_i_i338_i_reg_880 = ap_const_lv1_0)) then 
                buf_V_2_d1 <= ap_const_lv8_0;
            else 
                buf_V_2_d1 <= "XXXXXXXX";
            end if;
        else 
            buf_V_2_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_V_2_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln878_7_reg_889, cmp_i_i338_i_reg_880, ap_block_pp1_stage0_11001, bottom_load_2_reg_893)
    begin
        if (((not((bottom_load_2_reg_893 = ap_const_lv2_1)) and not((bottom_load_2_reg_893 = ap_const_lv2_0)) and (cmp_i_i338_i_reg_880 = ap_const_lv1_1) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or (not((bottom_load_2_reg_893 = ap_const_lv2_1)) and not((bottom_load_2_reg_893 = ap_const_lv2_0)) and (cmp_i_i338_i_reg_880 = ap_const_lv1_0) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_V_2_we1 <= ap_const_logic_1;
        else 
            buf_V_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i338_i_fu_507_p2 <= "1" when (unsigned(row_V_reg_250) < unsigned(ap_const_lv11_438)) else "0";
    col_V_11_fu_513_p2 <= std_logic_vector(unsigned(ap_phi_mux_col_V_10_phi_fu_278_p4) + unsigned(ap_const_lv11_1));
    col_V_9_fu_409_p2 <= std_logic_vector(unsigned(col_V_reg_239) + unsigned(ap_const_lv11_1));

    gaussian_mat_4209_blk_n_assign_proc : process(gaussian_mat_4209_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, icmp_ln870_9_reg_917_pp1_iter3_reg, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((icmp_ln870_9_reg_917_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            gaussian_mat_4209_blk_n <= gaussian_mat_4209_full_n;
        else 
            gaussian_mat_4209_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gaussian_mat_4209_din_assign_proc : process(gaussian_mat_4209_full_n, ap_enable_reg_pp1_iter4, icmp_ln870_9_reg_917_pp1_iter3_reg, ap_CS_fsm_state11, ap_block_pp1_stage0_01001, add_ln52_3_fu_706_p2, add_ln52_1_fu_801_p2)
    begin
        if (((gaussian_mat_4209_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            gaussian_mat_4209_din <= add_ln52_1_fu_801_p2(11 downto 4);
        elsif (((icmp_ln870_9_reg_917_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001))) then 
            gaussian_mat_4209_din <= add_ln52_3_fu_706_p2(11 downto 4);
        else 
            gaussian_mat_4209_din <= "XXXXXXXX";
        end if; 
    end process;


    gaussian_mat_4209_write_assign_proc : process(gaussian_mat_4209_full_n, ap_enable_reg_pp1_iter4, icmp_ln870_9_reg_917_pp1_iter3_reg, ap_CS_fsm_state11, ap_block_pp1_stage0_11001)
    begin
        if ((((icmp_ln870_9_reg_917_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((gaussian_mat_4209_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            gaussian_mat_4209_write <= ap_const_logic_1;
        else 
            gaussian_mat_4209_write <= ap_const_logic_0;
        end if; 
    end process;


    gray_img_src_4207_blk_n_assign_proc : process(gray_img_src_4207_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln878_reg_843, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln878_7_reg_889, cmp_i_i338_i_reg_880)
    begin
        if ((((cmp_i_i338_i_reg_880 = ap_const_lv1_1) and (icmp_ln878_7_reg_889 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((icmp_ln878_reg_843 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            gray_img_src_4207_blk_n <= gray_img_src_4207_empty_n;
        else 
            gray_img_src_4207_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gray_img_src_4207_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln878_reg_843, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_predicate_op88_read_state7, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_predicate_op88_read_state7 = ap_const_boolean_1)) or ((icmp_ln878_reg_843 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            gray_img_src_4207_read <= ap_const_logic_1;
        else 
            gray_img_src_4207_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln209_fu_426_p2 <= "1" when (row_V_reg_250 = ap_const_lv11_439) else "0";
    icmp_ln870_8_fu_824_p2 <= "1" when (row_ind_V_3_fu_818_p2 = ap_const_lv13_3) else "0";
    icmp_ln870_9_fu_546_p2 <= "1" when (col_V_10_reg_274_pp1_iter1_reg = ap_const_lv11_0) else "0";
    icmp_ln870_fu_462_p2 <= "1" when (row_ind_V_reg_262 = ap_const_lv13_1) else "0";
    icmp_ln878_7_fu_519_p2 <= "1" when (ap_phi_mux_col_V_10_phi_fu_278_p4 = ap_const_lv11_780) else "0";
    icmp_ln878_fu_415_p2 <= "1" when (col_V_reg_239 = ap_const_lv11_780) else "0";

    internal_ap_ready_assign_proc : process(icmp_ln209_fu_426_p2, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln209_fu_426_p2 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    mid_2_fu_476_p3 <= 
        ap_const_lv2_0 when (icmp_ln870_fu_462_p2(0) = '1') else 
        mid_fu_108;
    phitmp1_fu_684_p3 <= (src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_return & ap_const_lv2_0);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    row_V_3_fu_723_p2 <= std_logic_vector(unsigned(row_V_reg_250) + unsigned(ap_const_lv11_1));
    row_ind_V_3_fu_818_p2 <= std_logic_vector(unsigned(row_ind_V_reg_262) + unsigned(ap_const_lv13_1));
    row_ind_V_4_fu_830_p3 <= 
        ap_const_lv13_0 when (icmp_ln870_8_fu_824_p2(0) = '1') else 
        row_ind_V_3_fu_818_p2;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tp_1_fu_468_p3 <= 
        ap_const_lv2_2 when (icmp_ln870_fu_462_p2(0) = '1') else 
        tp_fu_104;
    zext_ln117_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_V_10_reg_274_pp1_iter1_reg),64));
    zext_ln1460_1_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b2_V_xfExtractPixels_1_1_0_s_fu_394_ap_return),9));
    zext_ln1460_2_fu_594_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_return),9));
    zext_ln1460_fu_737_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b0_V_reg_298),9));
    zext_ln45_1_fu_582_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384_ap_return),9));
    zext_ln45_fu_578_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_t0_V_phi_fu_352_p4),9));
    zext_ln46_1_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A00_fu_598_p2),10));
    zext_ln46_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_b0_V_phi_fu_302_p4),9));
    zext_ln47_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_b1_V_phi_fu_290_p4),9));
    zext_ln48_1_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_t1_V_phi_fu_340_p4),9));
    zext_ln48_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_m0_V_phi_fu_327_p4),9));
    zext_ln49_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln49_fu_608_p2),10));
    zext_ln50_1_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m0_V_reg_323),10));
    zext_ln50_2_fu_761_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln50_fu_755_p2),10));
    zext_ln50_3_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln48_fu_636_p2),10));
    zext_ln50_4_fu_652_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln50_2_fu_646_p2),10));
    zext_ln50_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t1_V_reg_336),9));
    zext_ln52_1_fu_783_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A1_fu_771_p3),12));
    zext_ln52_2_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A2_reg_361),11));
    zext_ln52_3_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln52_fu_791_p2),12));
    zext_ln52_4_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A0_1_fu_618_p2),11));
    zext_ln52_5_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A1_1_fu_692_p3),12));
    zext_ln52_6_fu_674_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A2_1_fu_662_p3),11));
    zext_ln52_7_fu_703_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln52_2_reg_941),12));
    zext_ln52_fu_779_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A0_fu_741_p2),11));
    zext_ln534_5_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_V_10_reg_274),64));
    zext_ln534_6_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_V_10_reg_274),64));
    zext_ln534_fu_421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_V_reg_239),64));
    zext_ln878_1_fu_733_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t0_V_reg_348),9));
    zext_ln878_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b1_V_reg_286),9));
end behav;
