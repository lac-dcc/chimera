-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity xfdilate is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_V_empty_n : IN STD_LOGIC;
    p_src_data_V_read : OUT STD_LOGIC;
    p_dst_data_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_V_full_n : IN STD_LOGIC;
    p_dst_data_V_write : OUT STD_LOGIC;
    img_height : IN STD_LOGIC_VECTOR (15 downto 0);
    img_width : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of xfdilate is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv17_2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal tmp_4_reg_1737 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1746 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1708 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter11 : STD_LOGIC := '0';
    signal icmp_reg_1780 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1780_pp1_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal rd_ind_1_reg_432 : STD_LOGIC_VECTOR (16 downto 0);
    signal t_V_reg_442 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_5_reg_542 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_5_reg_542_pp1_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state10_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op183_read_state11 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter7 : BOOLEAN;
    signal ap_block_state18_pp1_stage0_iter8 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter9 : BOOLEAN;
    signal ap_block_state20_pp1_stage0_iter10 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter11 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal src_buf_4_reg_554 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_3_3_reg_566 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_3_3_reg_566_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_3_3_reg_566_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_3_3_reg_566_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_3_3_reg_566_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_3_2_reg_578 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_3_2_reg_578_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_3_2_reg_578_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_3_2_reg_578_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_3_2_reg_578_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_3_1_reg_591 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_3_1_reg_591_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_3_1_reg_591_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_3_1_reg_591_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_3_1_reg_591_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_3_reg_604 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_2_3_reg_617 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_2_3_reg_617_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_2_3_reg_617_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_2_3_reg_617_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_2_2_reg_629 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_2_2_reg_629_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_2_2_reg_629_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_2_1_reg_642 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_2_1_reg_642_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_2_1_reg_642_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_2_1_reg_642_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_2_reg_655 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_1_3_reg_668 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_1_3_reg_668_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_1_2_reg_680 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_1_2_reg_680_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_1_1_reg_693 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_1_1_reg_693_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_1_reg_706 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_0_3_reg_719 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_0_2_reg_731 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_0_1_reg_744 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_reg_757 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_1_reg_769 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_1_reg_769_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_1_reg_769_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_1_reg_769_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_1_reg_769_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_1_reg_769_pp1_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_1_reg_769_pp1_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_2_reg_782 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_2_reg_782_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_2_reg_782_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_2_reg_782_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_2_reg_782_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_2_reg_782_pp1_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_2_reg_782_pp1_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_3_reg_795 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_3_reg_795_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_3_reg_795_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_3_reg_795_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_3_reg_795_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_3_reg_795_pp1_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_4_3_reg_795_pp1_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal row_ind_4_V_load_reg_1582 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal row_ind_4_V_1_load_reg_1587 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_4_V_2_load_reg_1592 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_4_V_3_load_reg_1597 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_4_V_4_load_reg_1602 : STD_LOGIC_VECTOR (12 downto 0);
    signal init_row_ind_fu_854_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal op_assign_cast7_fu_889_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal op_assign_cast7_reg_1615 : STD_LOGIC_VECTOR (17 downto 0);
    signal exitcond1_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal op_assign_cast_fu_892_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal op_assign_cast_reg_1621 : STD_LOGIC_VECTOR (16 downto 0);
    signal exitcond2_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_fu_901_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_reg_1631 : STD_LOGIC_VECTOR (16 downto 0);
    signal cond_fu_906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_reg_1636 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_fu_916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_col_V_fu_922_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal buf_2_V_addr_reg_1649 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_3_V_addr_reg_1654 : STD_LOGIC_VECTOR (10 downto 0);
    signal rd_ind_2_fu_934_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_row_V_fu_940_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal indvars_iv_next_fu_946_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal i_row_V_1_fu_957_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_row_V_1_reg_1677 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal cond1_fu_963_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond1_reg_1682 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal op2_assign_fu_972_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal op2_assign_reg_1686 : STD_LOGIC_VECTOR (16 downto 0);
    signal op2_assign_1_fu_978_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal op2_assign_1_reg_1691 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_col_V_1_fu_992_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_8_fu_1012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_9_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_1022_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_13_reg_1712 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_17_fu_1026_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_17_reg_1717 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_18_fu_1030_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_18_reg_1722 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_19_fu_1034_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_19_reg_1727 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_20_fu_1038_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_20_reg_1732 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_1050_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1737_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1737_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1737_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1737_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1737_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1737_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1737_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1737_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1737_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_V_fu_1055_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_V_reg_1741 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal tmp_10_fu_1061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1746_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1746_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_1099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1780_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1780_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1780_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1780_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1780_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1780_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1780_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf_temp_copy_ex_xfExtractPixels_fu_808_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_reg_1784 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal src_buf_temp_copy_ex_1_xfExtractPixels_fu_813_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_1_reg_1791 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_1_reg_1791_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_2_xfExtractPixels_fu_818_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_2_reg_1798 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_2_reg_1798_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_2_reg_1798_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_2_reg_1798_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_3_xfExtractPixels_fu_823_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_3_reg_1805 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_3_reg_1805_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_3_reg_1805_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_3_reg_1805_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_3_reg_1805_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_3_reg_1805_pp1_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_4_xfExtractPixels_fu_828_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_4_reg_1812 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_4_reg_1812_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_4_reg_1812_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_4_reg_1812_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_4_reg_1812_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_4_reg_1812_pp1_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_4_reg_1812_pp1_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_load_0_0_3_s_fu_1254_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_load_0_0_3_s_reg_1819 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_load_0_1_1_s_fu_1292_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_load_0_1_1_s_reg_1825 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_load_0_1_4_s_fu_1331_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_load_0_1_4_s_reg_1831 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_load_0_2_2_s_fu_1370_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_load_0_2_2_s_reg_1837 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_load_0_3_0_s_fu_1408_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_load_0_3_0_s_reg_1843 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_load_0_3_3_s_fu_1448_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_load_0_3_3_s_reg_1849 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_load_0_4_1_s_fu_1486_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_load_0_4_1_s_reg_1855 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_SEBB_fu_1525_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_SEBB_reg_1861 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_V_fu_1532_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_condition_pp1_exit_iter3_state13 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter10 : STD_LOGIC := '0';
    signal buf_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce0 : STD_LOGIC;
    signal buf_0_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_0_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce1 : STD_LOGIC;
    signal buf_0_V_we1 : STD_LOGIC;
    signal buf_0_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce0 : STD_LOGIC;
    signal buf_1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce1 : STD_LOGIC;
    signal buf_1_V_we1 : STD_LOGIC;
    signal buf_1_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce0 : STD_LOGIC;
    signal buf_2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce1 : STD_LOGIC;
    signal buf_2_V_we1 : STD_LOGIC;
    signal buf_2_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_3_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_3_V_ce0 : STD_LOGIC;
    signal buf_3_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_3_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_3_V_ce1 : STD_LOGIC;
    signal buf_3_V_we1 : STD_LOGIC;
    signal buf_3_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_4_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_4_V_ce0 : STD_LOGIC;
    signal buf_4_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_4_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_4_V_ce1 : STD_LOGIC;
    signal buf_4_V_we1 : STD_LOGIC;
    signal buf_4_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_xfExtractPixels_fu_808_ap_ready : STD_LOGIC;
    signal src_buf_temp_copy_ex_xfExtractPixels_fu_808_val1_V_read : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_1_xfExtractPixels_fu_813_ap_ready : STD_LOGIC;
    signal src_buf_temp_copy_ex_1_xfExtractPixels_fu_813_val1_V_read : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_2_xfExtractPixels_fu_818_ap_ready : STD_LOGIC;
    signal src_buf_temp_copy_ex_2_xfExtractPixels_fu_818_val1_V_read : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_3_xfExtractPixels_fu_823_ap_ready : STD_LOGIC;
    signal src_buf_temp_copy_ex_3_xfExtractPixels_fu_823_val1_V_read : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_4_xfExtractPixels_fu_828_ap_ready : STD_LOGIC;
    signal src_buf_temp_copy_ex_4_xfExtractPixels_fu_828_val1_V_read : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_val_assign_phi_fu_391_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal val_assign_reg_387 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvars_iv_reg_398 : STD_LOGIC_VECTOR (17 downto 0);
    signal rd_ind_reg_408 : STD_LOGIC_VECTOR (16 downto 0);
    signal t_V_1_reg_420 : STD_LOGIC_VECTOR (2 downto 0);
    signal t_V_3_reg_453 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_2_reg_464 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_3_V_1_reg_475 : STD_LOGIC_VECTOR (12 downto 0);
    signal zero_ind_V_reg_518 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_V_reg_485 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_1_V_reg_496 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_0_V_reg_507 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_4_reg_530 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_t_V_5_phi_fu_546_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_src_buf_4_phi_fu_558_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_3_phi_fu_608_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_2_phi_fu_659_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_1_phi_fu_710_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_0_3_phi_fu_723_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_0_2_phi_fu_735_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_0_1_phi_fu_748_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_phi_fu_761_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_928_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_998_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_1066_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buf_0_V_addr_1_gep_fu_314_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_addr_1_gep_fu_320_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_addr_1_gep_fu_326_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_3_V_addr_1_gep_fu_332_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_4_V_addr_gep_fu_338_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_12_fu_1080_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal row_ind_4_V_fu_136 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_0_V_2_fu_860_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_4_V_1_fu_140 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_4_V_2_fu_144 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_4_V_3_fu_148 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_4_V_4_fu_152 : STD_LOGIC_VECTOR (12 downto 0);
    signal rd_ind_1_cast_cast_fu_912_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_1_cast3_fu_969_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_cast_fu_983_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_cast_fu_1008_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_5_cast2_fu_1004_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_cast_fu_1046_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_12_cast1_fu_1042_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_fu_1089_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal buf_cop_0_V_fu_1105_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_1120_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_2_V_fu_1151_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_1166_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_1197_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_0_0_1_fu_1220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf_load_0_0_1_s_fu_1226_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_0_0_2_fu_1234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_SEBB1_fu_1240_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_0_0_3_fu_1248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_0_0_4_fu_1262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf_load_0_0_4_s_fu_1266_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_0_1_fu_1272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_SEBB2_fu_1278_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_0_1_1_fu_1286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_0_1_2_fu_1300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf_load_0_1_2_s_fu_1305_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_0_1_3_fu_1312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_SEBB3_fu_1318_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_0_1_4_fu_1326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_0_2_fu_1338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf_load_0_2_0_s_fu_1343_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_0_2_1_fu_1350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_SEBB4_fu_1356_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_0_2_2_fu_1364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_0_2_3_fu_1378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf_load_0_2_3_s_fu_1383_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_0_2_4_fu_1390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_SEBB5_fu_1395_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_0_3_fu_1402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_0_3_1_fu_1416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf_load_0_3_1_s_fu_1421_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_0_3_2_fu_1428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_SEBB6_fu_1434_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_0_3_3_fu_1442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_0_3_4_fu_1456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf_load_0_3_4_s_fu_1460_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_0_4_fu_1466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_SEBB7_fu_1472_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_0_4_1_fu_1480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_0_4_2_fu_1494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf_load_0_4_2_s_fu_1499_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_0_4_3_fu_1506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_SEBB8_fu_1512_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_0_4_4_fu_1520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_1268 : BOOLEAN;

    component xfExtractPixels IS
    port (
        ap_ready : OUT STD_LOGIC;
        val1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component xf_dilation_accelbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component xfdilate_buf_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buf_0_V_U : component xfdilate_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_0_V_address0,
        ce0 => buf_0_V_ce0,
        q0 => buf_0_V_q0,
        address1 => buf_0_V_address1,
        ce1 => buf_0_V_ce1,
        we1 => buf_0_V_we1,
        d1 => buf_0_V_d1);

    buf_1_V_U : component xfdilate_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_V_address0,
        ce0 => buf_1_V_ce0,
        q0 => buf_1_V_q0,
        address1 => buf_1_V_address1,
        ce1 => buf_1_V_ce1,
        we1 => buf_1_V_we1,
        d1 => buf_1_V_d1);

    buf_2_V_U : component xfdilate_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_V_address0,
        ce0 => buf_2_V_ce0,
        q0 => buf_2_V_q0,
        address1 => buf_2_V_address1,
        ce1 => buf_2_V_ce1,
        we1 => buf_2_V_we1,
        d1 => buf_2_V_d1);

    buf_3_V_U : component xfdilate_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_3_V_address0,
        ce0 => buf_3_V_ce0,
        q0 => buf_3_V_q0,
        address1 => buf_3_V_address1,
        ce1 => buf_3_V_ce1,
        we1 => buf_3_V_we1,
        d1 => buf_3_V_d1);

    buf_4_V_U : component xfdilate_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_4_V_address0,
        ce0 => buf_4_V_ce0,
        q0 => buf_4_V_q0,
        address1 => buf_4_V_address1,
        ce1 => buf_4_V_ce1,
        we1 => buf_4_V_we1,
        d1 => buf_4_V_d1);

    src_buf_temp_copy_ex_xfExtractPixels_fu_808 : component xfExtractPixels
    port map (
        ap_ready => src_buf_temp_copy_ex_xfExtractPixels_fu_808_ap_ready,
        val1_V_read => src_buf_temp_copy_ex_xfExtractPixels_fu_808_val1_V_read,
        ap_return => src_buf_temp_copy_ex_xfExtractPixels_fu_808_ap_return);

    src_buf_temp_copy_ex_1_xfExtractPixels_fu_813 : component xfExtractPixels
    port map (
        ap_ready => src_buf_temp_copy_ex_1_xfExtractPixels_fu_813_ap_ready,
        val1_V_read => src_buf_temp_copy_ex_1_xfExtractPixels_fu_813_val1_V_read,
        ap_return => src_buf_temp_copy_ex_1_xfExtractPixels_fu_813_ap_return);

    src_buf_temp_copy_ex_2_xfExtractPixels_fu_818 : component xfExtractPixels
    port map (
        ap_ready => src_buf_temp_copy_ex_2_xfExtractPixels_fu_818_ap_ready,
        val1_V_read => src_buf_temp_copy_ex_2_xfExtractPixels_fu_818_val1_V_read,
        ap_return => src_buf_temp_copy_ex_2_xfExtractPixels_fu_818_ap_return);

    src_buf_temp_copy_ex_3_xfExtractPixels_fu_823 : component xfExtractPixels
    port map (
        ap_ready => src_buf_temp_copy_ex_3_xfExtractPixels_fu_823_ap_ready,
        val1_V_read => src_buf_temp_copy_ex_3_xfExtractPixels_fu_823_val1_V_read,
        ap_return => src_buf_temp_copy_ex_3_xfExtractPixels_fu_823_ap_return);

    src_buf_temp_copy_ex_4_xfExtractPixels_fu_828 : component xfExtractPixels
    port map (
        ap_ready => src_buf_temp_copy_ex_4_xfExtractPixels_fu_828_ap_ready,
        val1_V_read => src_buf_temp_copy_ex_4_xfExtractPixels_fu_828_val1_V_read,
        ap_return => src_buf_temp_copy_ex_4_xfExtractPixels_fu_828_ap_return);

    xf_dilation_accelbkb_U20 : component xf_dilation_accelbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => buf_3_V_q0,
        din4 => buf_4_V_q0,
        din5 => tmp_17_reg_1717,
        dout => buf_cop_0_V_fu_1105_p7);

    xf_dilation_accelbkb_U21 : component xf_dilation_accelbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => buf_3_V_q0,
        din4 => buf_4_V_q0,
        din5 => tmp_18_reg_1722,
        dout => tmp_14_fu_1120_p7);

    xf_dilation_accelbkb_U22 : component xf_dilation_accelbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => buf_3_V_q0,
        din4 => buf_4_V_q0,
        din5 => tmp_19_reg_1727,
        dout => buf_cop_2_V_fu_1151_p7);

    xf_dilation_accelbkb_U23 : component xf_dilation_accelbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => buf_3_V_q0,
        din4 => buf_4_V_q0,
        din5 => tmp_20_reg_1732,
        dout => tmp_15_fu_1166_p7);

    xf_dilation_accelbkb_U24 : component xf_dilation_accelbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => buf_3_V_q0,
        din4 => buf_4_V_q0,
        din5 => tmp_13_reg_1712,
        dout => tmp_16_fu_1197_p7);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond2_fu_895_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state4);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((exitcond2_fu_895_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((tmp_4_fu_1050_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
                elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_enable_reg_pp1_iter11 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter3_state13)) then 
                        ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter2;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
                end if; 
            end if;
        end if;
    end process;


    indvars_iv_reg_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_848_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvars_iv_reg_398 <= op_assign_cast7_fu_889_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                indvars_iv_reg_398 <= indvars_iv_next_fu_946_p2;
            end if; 
        end if;
    end process;

    rd_ind_1_reg_432_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_fu_916_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                rd_ind_1_reg_432 <= rd_ind_2_fu_934_p2;
            elsif (((exitcond2_fu_895_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                rd_ind_1_reg_432 <= rd_ind_reg_408;
            end if; 
        end if;
    end process;

    rd_ind_reg_408_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_848_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                rd_ind_reg_408 <= ap_const_lv17_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                rd_ind_reg_408 <= tmp_reg_1631;
            end if; 
        end if;
    end process;

    row_ind_0_V_reg_507_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                row_ind_0_V_reg_507 <= row_ind_1_V_reg_496;
            elsif (((exitcond_fu_951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                row_ind_0_V_reg_507 <= row_ind_4_V_1_load_reg_1587;
            end if; 
        end if;
    end process;

    row_ind_1_V_reg_496_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                row_ind_1_V_reg_496 <= row_ind_2_V_reg_485;
            elsif (((exitcond_fu_951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                row_ind_1_V_reg_496 <= row_ind_4_V_2_load_reg_1592;
            end if; 
        end if;
    end process;

    row_ind_2_V_reg_485_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                row_ind_2_V_reg_485 <= row_ind_3_V_1_reg_475;
            elsif (((exitcond_fu_951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                row_ind_2_V_reg_485 <= row_ind_4_V_3_load_reg_1597;
            end if; 
        end if;
    end process;

    row_ind_3_V_1_reg_475_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                row_ind_3_V_1_reg_475 <= zero_ind_V_reg_518;
            elsif (((exitcond_fu_951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                row_ind_3_V_1_reg_475 <= row_ind_4_V_4_load_reg_1602;
            end if; 
        end if;
    end process;

    src_buf_0_1_reg_744_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_0_1_reg_744 <= src_buf_0_2_reg_731;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_0_1_reg_744 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_0_2_reg_731_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_0_2_reg_731 <= src_buf_0_3_reg_719;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_0_2_reg_731 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_0_3_reg_719_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_0_3_reg_719 <= src_buf_temp_copy_ex_reg_1784;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_0_3_reg_719 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_1_1_reg_693_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_1_1_reg_693 <= src_buf_1_2_reg_680;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_1_1_reg_693 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_1_2_reg_680_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_1_2_reg_680 <= src_buf_1_3_reg_668;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_1_2_reg_680 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_1_3_reg_668_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_1_3_reg_668 <= src_buf_temp_copy_ex_1_reg_1791;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_1_3_reg_668 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_1_reg_706_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_1_reg_706 <= src_buf_1_1_reg_693_pp1_iter4_reg;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_1_reg_706 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_2_1_reg_642_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_2_1_reg_642 <= src_buf_2_2_reg_629;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_2_1_reg_642 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_2_2_reg_629_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_2_2_reg_629 <= src_buf_2_3_reg_617;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_2_2_reg_629 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_2_3_reg_617_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_2_3_reg_617 <= src_buf_temp_copy_ex_2_reg_1798;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_2_3_reg_617 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_2_reg_655_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_2_reg_655 <= src_buf_2_1_reg_642_pp1_iter6_reg;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_2_reg_655 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_3_1_reg_591_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_3_1_reg_591 <= src_buf_3_2_reg_578;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_3_1_reg_591 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_3_2_reg_578_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_3_2_reg_578 <= src_buf_3_3_reg_566;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_3_2_reg_578 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_3_3_reg_566_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_3_3_reg_566 <= src_buf_temp_copy_ex_3_reg_1805;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_3_3_reg_566 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_3_reg_604_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter7_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_3_reg_604 <= src_buf_3_1_reg_591_pp1_iter7_reg;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_3_reg_604 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_4_1_reg_769_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_4_1_reg_769 <= src_buf_4_2_reg_782;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_4_1_reg_769 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_4_2_reg_782_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_4_2_reg_782 <= src_buf_4_3_reg_795;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_4_2_reg_782 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_4_3_reg_795_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_4_3_reg_795 <= src_buf_temp_copy_ex_4_reg_1812;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_4_3_reg_795 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_4_reg_554_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_4_reg_554 <= src_buf_4_1_reg_769_pp1_iter9_reg;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_4_reg_554 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_reg_757_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_reg_757 <= src_buf_0_1_reg_744;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_reg_757 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    t_V_1_reg_420_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_848_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_1_reg_420 <= ap_const_lv3_2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                t_V_1_reg_420 <= i_row_V_fu_940_p2;
            end if; 
        end if;
    end process;

    t_V_2_reg_464_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_2_fu_987_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                t_V_2_reg_464 <= i_col_V_1_fu_992_p2;
            elsif (((exitcond_fu_951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                t_V_2_reg_464 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    t_V_3_reg_453_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_fu_895_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                t_V_3_reg_453 <= ap_const_lv2_0;
            elsif (((tmp_2_fu_987_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                t_V_3_reg_453 <= i_row_V_1_reg_1677;
            end if; 
        end if;
    end process;

    t_V_4_reg_530_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                t_V_4_reg_530 <= row_V_fu_1532_p2;
            elsif (((exitcond_fu_951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                t_V_4_reg_530 <= ap_const_lv13_2;
            end if; 
        end if;
    end process;

    t_V_5_reg_542_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                t_V_5_reg_542 <= col_V_reg_1741;
            elsif (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                t_V_5_reg_542 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    t_V_reg_442_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_fu_916_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                t_V_reg_442 <= i_col_V_fu_922_p2;
            elsif (((exitcond2_fu_895_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                t_V_reg_442 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    val_assign_reg_387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_848_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                val_assign_reg_387 <= init_row_ind_fu_854_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                val_assign_reg_387 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    zero_ind_V_reg_518_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                zero_ind_V_reg_518 <= row_ind_0_V_reg_507;
            elsif (((exitcond_fu_951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                zero_ind_V_reg_518 <= row_ind_4_V_load_reg_1582;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_fu_916_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                buf_2_V_addr_reg_1649 <= tmp_3_fu_928_p1(11 - 1 downto 0);
                buf_3_V_addr_reg_1654 <= tmp_3_fu_928_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                col_V_reg_1741 <= col_V_fu_1055_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                cond1_reg_1682 <= cond1_fu_963_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_fu_895_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                cond_reg_1636 <= cond_fu_906_p2;
                tmp_reg_1631 <= tmp_fu_901_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                i_row_V_1_reg_1677 <= i_row_V_1_fu_957_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_reg_1780 <= icmp_fu_1099_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_reg_1780_pp1_iter10_reg <= icmp_reg_1780_pp1_iter9_reg;
                icmp_reg_1780_pp1_iter3_reg <= icmp_reg_1780;
                icmp_reg_1780_pp1_iter4_reg <= icmp_reg_1780_pp1_iter3_reg;
                icmp_reg_1780_pp1_iter5_reg <= icmp_reg_1780_pp1_iter4_reg;
                icmp_reg_1780_pp1_iter6_reg <= icmp_reg_1780_pp1_iter5_reg;
                icmp_reg_1780_pp1_iter7_reg <= icmp_reg_1780_pp1_iter6_reg;
                icmp_reg_1780_pp1_iter8_reg <= icmp_reg_1780_pp1_iter7_reg;
                icmp_reg_1780_pp1_iter9_reg <= icmp_reg_1780_pp1_iter8_reg;
                src_buf_1_1_reg_693_pp1_iter4_reg <= src_buf_1_1_reg_693;
                src_buf_1_2_reg_680_pp1_iter4_reg <= src_buf_1_2_reg_680;
                src_buf_1_3_reg_668_pp1_iter4_reg <= src_buf_1_3_reg_668;
                src_buf_2_1_reg_642_pp1_iter4_reg <= src_buf_2_1_reg_642;
                src_buf_2_1_reg_642_pp1_iter5_reg <= src_buf_2_1_reg_642_pp1_iter4_reg;
                src_buf_2_1_reg_642_pp1_iter6_reg <= src_buf_2_1_reg_642_pp1_iter5_reg;
                src_buf_2_2_reg_629_pp1_iter4_reg <= src_buf_2_2_reg_629;
                src_buf_2_2_reg_629_pp1_iter5_reg <= src_buf_2_2_reg_629_pp1_iter4_reg;
                src_buf_2_3_reg_617_pp1_iter4_reg <= src_buf_2_3_reg_617;
                src_buf_2_3_reg_617_pp1_iter5_reg <= src_buf_2_3_reg_617_pp1_iter4_reg;
                src_buf_2_3_reg_617_pp1_iter6_reg <= src_buf_2_3_reg_617_pp1_iter5_reg;
                src_buf_3_1_reg_591_pp1_iter4_reg <= src_buf_3_1_reg_591;
                src_buf_3_1_reg_591_pp1_iter5_reg <= src_buf_3_1_reg_591_pp1_iter4_reg;
                src_buf_3_1_reg_591_pp1_iter6_reg <= src_buf_3_1_reg_591_pp1_iter5_reg;
                src_buf_3_1_reg_591_pp1_iter7_reg <= src_buf_3_1_reg_591_pp1_iter6_reg;
                src_buf_3_2_reg_578_pp1_iter4_reg <= src_buf_3_2_reg_578;
                src_buf_3_2_reg_578_pp1_iter5_reg <= src_buf_3_2_reg_578_pp1_iter4_reg;
                src_buf_3_2_reg_578_pp1_iter6_reg <= src_buf_3_2_reg_578_pp1_iter5_reg;
                src_buf_3_2_reg_578_pp1_iter7_reg <= src_buf_3_2_reg_578_pp1_iter6_reg;
                src_buf_3_3_reg_566_pp1_iter4_reg <= src_buf_3_3_reg_566;
                src_buf_3_3_reg_566_pp1_iter5_reg <= src_buf_3_3_reg_566_pp1_iter4_reg;
                src_buf_3_3_reg_566_pp1_iter6_reg <= src_buf_3_3_reg_566_pp1_iter5_reg;
                src_buf_3_3_reg_566_pp1_iter7_reg <= src_buf_3_3_reg_566_pp1_iter6_reg;
                src_buf_4_1_reg_769_pp1_iter4_reg <= src_buf_4_1_reg_769;
                src_buf_4_1_reg_769_pp1_iter5_reg <= src_buf_4_1_reg_769_pp1_iter4_reg;
                src_buf_4_1_reg_769_pp1_iter6_reg <= src_buf_4_1_reg_769_pp1_iter5_reg;
                src_buf_4_1_reg_769_pp1_iter7_reg <= src_buf_4_1_reg_769_pp1_iter6_reg;
                src_buf_4_1_reg_769_pp1_iter8_reg <= src_buf_4_1_reg_769_pp1_iter7_reg;
                src_buf_4_1_reg_769_pp1_iter9_reg <= src_buf_4_1_reg_769_pp1_iter8_reg;
                src_buf_4_2_reg_782_pp1_iter4_reg <= src_buf_4_2_reg_782;
                src_buf_4_2_reg_782_pp1_iter5_reg <= src_buf_4_2_reg_782_pp1_iter4_reg;
                src_buf_4_2_reg_782_pp1_iter6_reg <= src_buf_4_2_reg_782_pp1_iter5_reg;
                src_buf_4_2_reg_782_pp1_iter7_reg <= src_buf_4_2_reg_782_pp1_iter6_reg;
                src_buf_4_2_reg_782_pp1_iter8_reg <= src_buf_4_2_reg_782_pp1_iter7_reg;
                src_buf_4_2_reg_782_pp1_iter9_reg <= src_buf_4_2_reg_782_pp1_iter8_reg;
                src_buf_4_3_reg_795_pp1_iter4_reg <= src_buf_4_3_reg_795;
                src_buf_4_3_reg_795_pp1_iter5_reg <= src_buf_4_3_reg_795_pp1_iter4_reg;
                src_buf_4_3_reg_795_pp1_iter6_reg <= src_buf_4_3_reg_795_pp1_iter5_reg;
                src_buf_4_3_reg_795_pp1_iter7_reg <= src_buf_4_3_reg_795_pp1_iter6_reg;
                src_buf_4_3_reg_795_pp1_iter8_reg <= src_buf_4_3_reg_795_pp1_iter7_reg;
                src_buf_4_3_reg_795_pp1_iter9_reg <= src_buf_4_3_reg_795_pp1_iter8_reg;
                src_buf_temp_copy_ex_1_reg_1791_pp1_iter4_reg <= src_buf_temp_copy_ex_1_reg_1791;
                src_buf_temp_copy_ex_2_reg_1798_pp1_iter4_reg <= src_buf_temp_copy_ex_2_reg_1798;
                src_buf_temp_copy_ex_2_reg_1798_pp1_iter5_reg <= src_buf_temp_copy_ex_2_reg_1798_pp1_iter4_reg;
                src_buf_temp_copy_ex_2_reg_1798_pp1_iter6_reg <= src_buf_temp_copy_ex_2_reg_1798_pp1_iter5_reg;
                src_buf_temp_copy_ex_3_reg_1805_pp1_iter4_reg <= src_buf_temp_copy_ex_3_reg_1805;
                src_buf_temp_copy_ex_3_reg_1805_pp1_iter5_reg <= src_buf_temp_copy_ex_3_reg_1805_pp1_iter4_reg;
                src_buf_temp_copy_ex_3_reg_1805_pp1_iter6_reg <= src_buf_temp_copy_ex_3_reg_1805_pp1_iter5_reg;
                src_buf_temp_copy_ex_3_reg_1805_pp1_iter7_reg <= src_buf_temp_copy_ex_3_reg_1805_pp1_iter6_reg;
                src_buf_temp_copy_ex_3_reg_1805_pp1_iter8_reg <= src_buf_temp_copy_ex_3_reg_1805_pp1_iter7_reg;
                src_buf_temp_copy_ex_4_reg_1812_pp1_iter4_reg <= src_buf_temp_copy_ex_4_reg_1812;
                src_buf_temp_copy_ex_4_reg_1812_pp1_iter5_reg <= src_buf_temp_copy_ex_4_reg_1812_pp1_iter4_reg;
                src_buf_temp_copy_ex_4_reg_1812_pp1_iter6_reg <= src_buf_temp_copy_ex_4_reg_1812_pp1_iter5_reg;
                src_buf_temp_copy_ex_4_reg_1812_pp1_iter7_reg <= src_buf_temp_copy_ex_4_reg_1812_pp1_iter6_reg;
                src_buf_temp_copy_ex_4_reg_1812_pp1_iter8_reg <= src_buf_temp_copy_ex_4_reg_1812_pp1_iter7_reg;
                src_buf_temp_copy_ex_4_reg_1812_pp1_iter9_reg <= src_buf_temp_copy_ex_4_reg_1812_pp1_iter8_reg;
                tmp_10_reg_1746_pp1_iter2_reg <= tmp_10_reg_1746_pp1_iter1_reg;
                tmp_4_reg_1737_pp1_iter2_reg <= tmp_4_reg_1737_pp1_iter1_reg;
                tmp_4_reg_1737_pp1_iter3_reg <= tmp_4_reg_1737_pp1_iter2_reg;
                tmp_4_reg_1737_pp1_iter4_reg <= tmp_4_reg_1737_pp1_iter3_reg;
                tmp_4_reg_1737_pp1_iter5_reg <= tmp_4_reg_1737_pp1_iter4_reg;
                tmp_4_reg_1737_pp1_iter6_reg <= tmp_4_reg_1737_pp1_iter5_reg;
                tmp_4_reg_1737_pp1_iter7_reg <= tmp_4_reg_1737_pp1_iter6_reg;
                tmp_4_reg_1737_pp1_iter8_reg <= tmp_4_reg_1737_pp1_iter7_reg;
                tmp_4_reg_1737_pp1_iter9_reg <= tmp_4_reg_1737_pp1_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                op2_assign_1_reg_1691 <= op2_assign_1_fu_978_p2;
                op2_assign_reg_1686 <= op2_assign_fu_972_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_848_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    op_assign_cast7_reg_1615(15 downto 0) <= op_assign_cast7_fu_889_p1(15 downto 0);
                    op_assign_cast_reg_1621(15 downto 0) <= op_assign_cast_fu_892_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_848_p2 = ap_const_lv1_0) and (ap_phi_mux_val_assign_phi_fu_391_p4 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_4_V_1_fu_140(2 downto 0) <= row_ind_0_V_2_fu_860_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    row_ind_4_V_1_load_reg_1587(2 downto 0) <= row_ind_4_V_1_fu_140(2 downto 0);
                    row_ind_4_V_2_load_reg_1592(2 downto 0) <= row_ind_4_V_2_fu_144(2 downto 0);
                    row_ind_4_V_3_load_reg_1597(2 downto 0) <= row_ind_4_V_3_fu_148(2 downto 0);
                    row_ind_4_V_4_load_reg_1602(2 downto 0) <= row_ind_4_V_4_fu_152(2 downto 0);
                    row_ind_4_V_load_reg_1582(2 downto 0) <= row_ind_4_V_fu_136(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_848_p2 = ap_const_lv1_0) and (ap_phi_mux_val_assign_phi_fu_391_p4 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_4_V_2_fu_144(2 downto 0) <= row_ind_0_V_2_fu_860_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_848_p2 = ap_const_lv1_0) and (ap_phi_mux_val_assign_phi_fu_391_p4 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_4_V_3_fu_148(2 downto 0) <= row_ind_0_V_2_fu_860_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_val_assign_phi_fu_391_p4 = ap_const_lv3_3)) and not((ap_phi_mux_val_assign_phi_fu_391_p4 = ap_const_lv3_2)) and not((ap_phi_mux_val_assign_phi_fu_391_p4 = ap_const_lv3_1)) and not((ap_phi_mux_val_assign_phi_fu_391_p4 = ap_const_lv3_0)) and (exitcond1_fu_848_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_4_V_4_fu_152(2 downto 0) <= row_ind_0_V_2_fu_860_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_848_p2 = ap_const_lv1_0) and (ap_phi_mux_val_assign_phi_fu_391_p4 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_4_V_fu_136(2 downto 0) <= row_ind_0_V_2_fu_860_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter9_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                sel_SEBB_reg_1861 <= sel_SEBB_fu_1525_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                src_buf_load_0_0_3_s_reg_1819 <= src_buf_load_0_0_3_s_fu_1254_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                src_buf_load_0_1_1_s_reg_1825 <= src_buf_load_0_1_1_s_fu_1292_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                src_buf_load_0_1_4_s_reg_1831 <= src_buf_load_0_1_4_s_fu_1331_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                src_buf_load_0_2_2_s_reg_1837 <= src_buf_load_0_2_2_s_fu_1370_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                src_buf_load_0_3_0_s_reg_1843 <= src_buf_load_0_3_0_s_fu_1408_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter7_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                src_buf_load_0_3_3_s_reg_1849 <= src_buf_load_0_3_3_s_fu_1448_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter8_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                src_buf_load_0_4_1_s_reg_1855 <= src_buf_load_0_4_1_s_fu_1486_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1737_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                src_buf_temp_copy_ex_1_reg_1791 <= src_buf_temp_copy_ex_1_xfExtractPixels_fu_813_ap_return;
                src_buf_temp_copy_ex_2_reg_1798 <= src_buf_temp_copy_ex_2_xfExtractPixels_fu_818_ap_return;
                src_buf_temp_copy_ex_3_reg_1805 <= src_buf_temp_copy_ex_3_xfExtractPixels_fu_823_ap_return;
                src_buf_temp_copy_ex_4_reg_1812 <= src_buf_temp_copy_ex_4_xfExtractPixels_fu_828_ap_return;
                src_buf_temp_copy_ex_reg_1784 <= src_buf_temp_copy_ex_xfExtractPixels_fu_808_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                t_V_5_reg_542_pp1_iter1_reg <= t_V_5_reg_542;
                tmp_10_reg_1746_pp1_iter1_reg <= tmp_10_reg_1746;
                tmp_4_reg_1737 <= tmp_4_fu_1050_p2;
                tmp_4_reg_1737_pp1_iter1_reg <= tmp_4_reg_1737;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_fu_1050_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_10_reg_1746 <= tmp_10_fu_1061_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_8_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                tmp_13_reg_1712 <= tmp_13_fu_1022_p1;
                tmp_17_reg_1717 <= tmp_17_fu_1026_p1;
                tmp_18_reg_1722 <= tmp_18_fu_1030_p1;
                tmp_19_reg_1727 <= tmp_19_fu_1034_p1;
                tmp_20_reg_1732 <= tmp_20_fu_1038_p1;
                tmp_9_reg_1708 <= tmp_9_fu_1017_p2;
            end if;
        end if;
    end process;
    row_ind_4_V_load_reg_1582(12 downto 3) <= "0000000000";
    row_ind_4_V_1_load_reg_1587(12 downto 3) <= "0000000000";
    row_ind_4_V_2_load_reg_1592(12 downto 3) <= "0000000000";
    row_ind_4_V_3_load_reg_1597(12 downto 3) <= "0000000000";
    row_ind_4_V_4_load_reg_1602(12 downto 3) <= "0000000000";
    op_assign_cast7_reg_1615(17 downto 16) <= "00";
    op_assign_cast_reg_1621(16) <= '0';
    row_ind_4_V_fu_136(12 downto 3) <= "0000000000";
    row_ind_4_V_1_fu_140(12 downto 3) <= "0000000000";
    row_ind_4_V_2_fu_144(12 downto 3) <= "0000000000";
    row_ind_4_V_3_fu_148(12 downto 3) <= "0000000000";
    row_ind_4_V_4_fu_152(12 downto 3) <= "0000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp1_iter11, ap_CS_fsm_state2, exitcond1_fu_848_p2, exitcond2_fu_895_p2, ap_CS_fsm_state3, exitcond3_fu_916_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, exitcond_fu_951_p2, ap_CS_fsm_state8, tmp_8_fu_1012_p2, ap_CS_fsm_state9, ap_enable_reg_pp1_iter3, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter10, tmp_2_fu_987_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond1_fu_848_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((exitcond2_fu_895_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((exitcond3_fu_916_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((exitcond3_fu_916_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state7 => 
                if (((exitcond_fu_951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (((tmp_2_fu_987_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((tmp_8_fu_1012_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter10 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter10 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state22 <= ap_CS_fsm(9);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_V_empty_n, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((p_src_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_V_empty_n, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((p_src_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(p_src_data_V_empty_n, p_dst_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter11, icmp_reg_1780_pp1_iter10_reg, ap_predicate_op183_read_state11)
    begin
                ap_block_pp1_stage0_01001 <= (((icmp_reg_1780_pp1_iter10_reg = ap_const_lv1_0) and (p_dst_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1)) or ((p_src_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_predicate_op183_read_state11 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(p_src_data_V_empty_n, p_dst_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter11, icmp_reg_1780_pp1_iter10_reg, ap_predicate_op183_read_state11)
    begin
                ap_block_pp1_stage0_11001 <= (((icmp_reg_1780_pp1_iter10_reg = ap_const_lv1_0) and (p_dst_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1)) or ((p_src_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_predicate_op183_read_state11 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(p_src_data_V_empty_n, p_dst_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter11, icmp_reg_1780_pp1_iter10_reg, ap_predicate_op183_read_state11)
    begin
                ap_block_pp1_stage0_subdone <= (((icmp_reg_1780_pp1_iter10_reg = ap_const_lv1_0) and (p_dst_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1)) or ((p_src_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_predicate_op183_read_state11 = ap_const_boolean_1)));
    end process;

        ap_block_state10_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp1_stage0_iter1_assign_proc : process(p_src_data_V_empty_n, ap_predicate_op183_read_state11)
    begin
                ap_block_state11_pp1_stage0_iter1 <= ((p_src_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op183_read_state11 = ap_const_boolean_1));
    end process;

        ap_block_state12_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state21_pp1_stage0_iter11_assign_proc : process(p_dst_data_V_full_n, icmp_reg_1780_pp1_iter10_reg)
    begin
                ap_block_state21_pp1_stage0_iter11 <= ((icmp_reg_1780_pp1_iter10_reg = ap_const_lv1_0) and (p_dst_data_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter1_assign_proc : process(p_src_data_V_empty_n)
    begin
                ap_block_state5_pp0_stage0_iter1 <= (p_src_data_V_empty_n = ap_const_logic_0);
    end process;


    ap_condition_1268_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_4_reg_1737, tmp_10_reg_1746, tmp_13_reg_1712)
    begin
                ap_condition_1268 <= (not((tmp_13_reg_1712 = ap_const_lv3_0)) and not((tmp_13_reg_1712 = ap_const_lv3_1)) and not((tmp_13_reg_1712 = ap_const_lv3_2)) and not((tmp_13_reg_1712 = ap_const_lv3_3)) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state4_assign_proc : process(exitcond3_fu_916_p2)
    begin
        if ((exitcond3_fu_916_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter3_state13_assign_proc : process(ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_condition_pp1_exit_iter3_state13 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter3_state13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_8_fu_1012_p2, ap_CS_fsm_state9)
    begin
        if ((((tmp_8_fu_1012_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter11, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter9, ap_enable_reg_pp1_iter10)
    begin
        if (((ap_enable_reg_pp1_iter11 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_src_buf_0_1_phi_fu_748_p4_assign_proc : process(ap_block_pp1_stage0, src_buf_0_2_reg_731, src_buf_0_1_reg_744, tmp_4_reg_1737_pp1_iter3_reg, ap_enable_reg_pp1_iter4)
    begin
        if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_0_1_phi_fu_748_p4 <= src_buf_0_2_reg_731;
        else 
            ap_phi_mux_src_buf_0_1_phi_fu_748_p4 <= src_buf_0_1_reg_744;
        end if; 
    end process;


    ap_phi_mux_src_buf_0_2_phi_fu_735_p4_assign_proc : process(ap_block_pp1_stage0, src_buf_0_3_reg_719, src_buf_0_2_reg_731, tmp_4_reg_1737_pp1_iter3_reg, ap_enable_reg_pp1_iter4)
    begin
        if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_0_2_phi_fu_735_p4 <= src_buf_0_3_reg_719;
        else 
            ap_phi_mux_src_buf_0_2_phi_fu_735_p4 <= src_buf_0_2_reg_731;
        end if; 
    end process;


    ap_phi_mux_src_buf_0_3_phi_fu_723_p4_assign_proc : process(ap_block_pp1_stage0, src_buf_0_3_reg_719, tmp_4_reg_1737_pp1_iter3_reg, src_buf_temp_copy_ex_reg_1784, ap_enable_reg_pp1_iter4)
    begin
        if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_0_3_phi_fu_723_p4 <= src_buf_temp_copy_ex_reg_1784;
        else 
            ap_phi_mux_src_buf_0_3_phi_fu_723_p4 <= src_buf_0_3_reg_719;
        end if; 
    end process;


    ap_phi_mux_src_buf_1_phi_fu_710_p4_assign_proc : process(ap_block_pp1_stage0, src_buf_1_1_reg_693_pp1_iter4_reg, src_buf_1_reg_706, tmp_4_reg_1737_pp1_iter4_reg, ap_enable_reg_pp1_iter5)
    begin
        if (((tmp_4_reg_1737_pp1_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_1_phi_fu_710_p4 <= src_buf_1_1_reg_693_pp1_iter4_reg;
        else 
            ap_phi_mux_src_buf_1_phi_fu_710_p4 <= src_buf_1_reg_706;
        end if; 
    end process;


    ap_phi_mux_src_buf_2_phi_fu_659_p4_assign_proc : process(ap_block_pp1_stage0, src_buf_2_1_reg_642_pp1_iter6_reg, src_buf_2_reg_655, tmp_4_reg_1737_pp1_iter6_reg, ap_enable_reg_pp1_iter7)
    begin
        if (((tmp_4_reg_1737_pp1_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_2_phi_fu_659_p4 <= src_buf_2_1_reg_642_pp1_iter6_reg;
        else 
            ap_phi_mux_src_buf_2_phi_fu_659_p4 <= src_buf_2_reg_655;
        end if; 
    end process;


    ap_phi_mux_src_buf_3_phi_fu_608_p4_assign_proc : process(ap_block_pp1_stage0, src_buf_3_1_reg_591_pp1_iter7_reg, src_buf_3_reg_604, tmp_4_reg_1737_pp1_iter7_reg, ap_enable_reg_pp1_iter8)
    begin
        if (((tmp_4_reg_1737_pp1_iter7_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_3_phi_fu_608_p4 <= src_buf_3_1_reg_591_pp1_iter7_reg;
        else 
            ap_phi_mux_src_buf_3_phi_fu_608_p4 <= src_buf_3_reg_604;
        end if; 
    end process;


    ap_phi_mux_src_buf_4_phi_fu_558_p4_assign_proc : process(ap_block_pp1_stage0, src_buf_4_reg_554, src_buf_4_1_reg_769_pp1_iter9_reg, tmp_4_reg_1737_pp1_iter9_reg, ap_enable_reg_pp1_iter10)
    begin
        if (((tmp_4_reg_1737_pp1_iter9_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_4_phi_fu_558_p4 <= src_buf_4_1_reg_769_pp1_iter9_reg;
        else 
            ap_phi_mux_src_buf_4_phi_fu_558_p4 <= src_buf_4_reg_554;
        end if; 
    end process;


    ap_phi_mux_src_buf_phi_fu_761_p4_assign_proc : process(ap_block_pp1_stage0, src_buf_0_1_reg_744, src_buf_reg_757, tmp_4_reg_1737_pp1_iter3_reg, ap_enable_reg_pp1_iter4)
    begin
        if (((tmp_4_reg_1737_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_phi_fu_761_p4 <= src_buf_0_1_reg_744;
        else 
            ap_phi_mux_src_buf_phi_fu_761_p4 <= src_buf_reg_757;
        end if; 
    end process;


    ap_phi_mux_t_V_5_phi_fu_546_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_4_reg_1737, t_V_5_reg_542, col_V_reg_1741)
    begin
        if (((tmp_4_reg_1737 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_t_V_5_phi_fu_546_p4 <= col_V_reg_1741;
        else 
            ap_phi_mux_t_V_5_phi_fu_546_p4 <= t_V_5_reg_542;
        end if; 
    end process;

    ap_phi_mux_val_assign_phi_fu_391_p4 <= val_assign_reg_387;

    ap_predicate_op183_read_state11_assign_proc : process(tmp_4_reg_1737, tmp_10_reg_1746, tmp_9_reg_1708)
    begin
                ap_predicate_op183_read_state11 <= ((tmp_9_reg_1708 = ap_const_lv1_1) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(tmp_8_fu_1012_p2, ap_CS_fsm_state9)
    begin
        if (((tmp_8_fu_1012_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    buf_0_V_addr_1_gep_fu_314_p3 <= tmp_11_fu_1066_p1(11 - 1 downto 0);
    buf_0_V_address0 <= tmp_12_fu_1080_p1(11 - 1 downto 0);

    buf_0_V_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_4_reg_1737, tmp_10_reg_1746, tmp_9_reg_1708, ap_CS_fsm_state8, tmp_13_reg_1712, tmp_1_fu_998_p1, tmp_11_fu_1066_p1, buf_0_V_addr_1_gep_fu_314_p3)
    begin
        if (((tmp_9_reg_1708 = ap_const_lv1_1) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_13_reg_1712 = ap_const_lv3_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_0_V_address1 <= buf_0_V_addr_1_gep_fu_314_p3;
        elsif (((tmp_9_reg_1708 = ap_const_lv1_0) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_13_reg_1712 = ap_const_lv3_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_0_V_address1 <= tmp_11_fu_1066_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            buf_0_V_address1 <= tmp_1_fu_998_p1(11 - 1 downto 0);
        else 
            buf_0_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            buf_0_V_ce0 <= ap_const_logic_1;
        else 
            buf_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_4_reg_1737, tmp_10_reg_1746, tmp_9_reg_1708, ap_block_pp1_stage0_11001, ap_CS_fsm_state8, tmp_13_reg_1712)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((tmp_9_reg_1708 = ap_const_lv1_1) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (tmp_13_reg_1712 = ap_const_lv3_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((tmp_9_reg_1708 = ap_const_lv1_0) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (tmp_13_reg_1712 = ap_const_lv3_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_0_V_ce1 <= ap_const_logic_1;
        else 
            buf_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_d1_assign_proc : process(p_src_data_V_dout, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_4_reg_1737, tmp_10_reg_1746, tmp_9_reg_1708, ap_CS_fsm_state8, tmp_13_reg_1712)
    begin
        if (((tmp_9_reg_1708 = ap_const_lv1_1) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_13_reg_1712 = ap_const_lv3_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_0_V_d1 <= p_src_data_V_dout;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or ((tmp_9_reg_1708 = ap_const_lv1_0) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_13_reg_1712 = ap_const_lv3_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_0_V_d1 <= ap_const_lv8_0;
        else 
            buf_0_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_0_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_4_reg_1737, tmp_10_reg_1746, tmp_9_reg_1708, ap_block_pp1_stage0_11001, cond1_reg_1682, ap_CS_fsm_state8, tmp_13_reg_1712, tmp_2_fu_987_p2)
    begin
        if ((((tmp_9_reg_1708 = ap_const_lv1_1) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (tmp_13_reg_1712 = ap_const_lv3_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((tmp_9_reg_1708 = ap_const_lv1_0) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (tmp_13_reg_1712 = ap_const_lv3_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((tmp_2_fu_987_p2 = ap_const_lv1_1) and (cond1_reg_1682 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            buf_0_V_we1 <= ap_const_logic_1;
        else 
            buf_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_1_V_addr_1_gep_fu_320_p3 <= tmp_11_fu_1066_p1(11 - 1 downto 0);
    buf_1_V_address0 <= tmp_12_fu_1080_p1(11 - 1 downto 0);

    buf_1_V_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_4_reg_1737, tmp_10_reg_1746, tmp_9_reg_1708, ap_CS_fsm_state8, tmp_13_reg_1712, tmp_1_fu_998_p1, tmp_11_fu_1066_p1, buf_1_V_addr_1_gep_fu_320_p3)
    begin
        if (((tmp_9_reg_1708 = ap_const_lv1_1) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_13_reg_1712 = ap_const_lv3_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_1_V_address1 <= buf_1_V_addr_1_gep_fu_320_p3;
        elsif (((tmp_9_reg_1708 = ap_const_lv1_0) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_13_reg_1712 = ap_const_lv3_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_1_V_address1 <= tmp_11_fu_1066_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            buf_1_V_address1 <= tmp_1_fu_998_p1(11 - 1 downto 0);
        else 
            buf_1_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            buf_1_V_ce0 <= ap_const_logic_1;
        else 
            buf_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_4_reg_1737, tmp_10_reg_1746, tmp_9_reg_1708, ap_block_pp1_stage0_11001, ap_CS_fsm_state8, tmp_13_reg_1712)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((tmp_9_reg_1708 = ap_const_lv1_1) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (tmp_13_reg_1712 = ap_const_lv3_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((tmp_9_reg_1708 = ap_const_lv1_0) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (tmp_13_reg_1712 = ap_const_lv3_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_1_V_ce1 <= ap_const_logic_1;
        else 
            buf_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_d1_assign_proc : process(p_src_data_V_dout, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_4_reg_1737, tmp_10_reg_1746, tmp_9_reg_1708, ap_CS_fsm_state8, tmp_13_reg_1712)
    begin
        if (((tmp_9_reg_1708 = ap_const_lv1_1) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_13_reg_1712 = ap_const_lv3_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_1_V_d1 <= p_src_data_V_dout;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or ((tmp_9_reg_1708 = ap_const_lv1_0) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_13_reg_1712 = ap_const_lv3_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_1_V_d1 <= ap_const_lv8_0;
        else 
            buf_1_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_1_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_4_reg_1737, tmp_10_reg_1746, tmp_9_reg_1708, ap_block_pp1_stage0_11001, cond1_reg_1682, ap_CS_fsm_state8, tmp_13_reg_1712, tmp_2_fu_987_p2)
    begin
        if ((((tmp_9_reg_1708 = ap_const_lv1_1) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (tmp_13_reg_1712 = ap_const_lv3_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((tmp_9_reg_1708 = ap_const_lv1_0) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (tmp_13_reg_1712 = ap_const_lv3_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((cond1_reg_1682 = ap_const_lv1_0) and (tmp_2_fu_987_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            buf_1_V_we1 <= ap_const_logic_1;
        else 
            buf_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2_V_addr_1_gep_fu_326_p3 <= tmp_11_fu_1066_p1(11 - 1 downto 0);
    buf_2_V_address0 <= tmp_12_fu_1080_p1(11 - 1 downto 0);

    buf_2_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_4_reg_1737, tmp_10_reg_1746, tmp_9_reg_1708, buf_2_V_addr_reg_1649, tmp_13_reg_1712, tmp_11_fu_1066_p1, buf_2_V_addr_1_gep_fu_326_p3)
    begin
        if (((tmp_9_reg_1708 = ap_const_lv1_1) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_13_reg_1712 = ap_const_lv3_2) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_2_V_address1 <= buf_2_V_addr_1_gep_fu_326_p3;
        elsif (((tmp_9_reg_1708 = ap_const_lv1_0) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_13_reg_1712 = ap_const_lv3_2) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_2_V_address1 <= tmp_11_fu_1066_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_2_V_address1 <= buf_2_V_addr_reg_1649;
        else 
            buf_2_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            buf_2_V_ce0 <= ap_const_logic_1;
        else 
            buf_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_4_reg_1737, tmp_10_reg_1746, tmp_9_reg_1708, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, tmp_13_reg_1712)
    begin
        if ((((tmp_9_reg_1708 = ap_const_lv1_1) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (tmp_13_reg_1712 = ap_const_lv3_2) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((tmp_9_reg_1708 = ap_const_lv1_0) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (tmp_13_reg_1712 = ap_const_lv3_2) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_2_V_ce1 <= ap_const_logic_1;
        else 
            buf_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_d1_assign_proc : process(p_src_data_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_4_reg_1737, tmp_10_reg_1746, tmp_9_reg_1708, tmp_13_reg_1712)
    begin
        if (((tmp_9_reg_1708 = ap_const_lv1_0) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_13_reg_1712 = ap_const_lv3_2) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_2_V_d1 <= ap_const_lv8_0;
        elsif ((((tmp_9_reg_1708 = ap_const_lv1_1) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_13_reg_1712 = ap_const_lv3_2) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_2_V_d1 <= p_src_data_V_dout;
        else 
            buf_2_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_2_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_4_reg_1737, tmp_10_reg_1746, tmp_9_reg_1708, ap_block_pp1_stage0_11001, cond_reg_1636, ap_block_pp0_stage0_11001, tmp_13_reg_1712)
    begin
        if ((((tmp_9_reg_1708 = ap_const_lv1_1) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (tmp_13_reg_1712 = ap_const_lv3_2) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((tmp_9_reg_1708 = ap_const_lv1_0) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (tmp_13_reg_1712 = ap_const_lv3_2) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((cond_reg_1636 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_2_V_we1 <= ap_const_logic_1;
        else 
            buf_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_3_V_addr_1_gep_fu_332_p3 <= tmp_11_fu_1066_p1(11 - 1 downto 0);
    buf_3_V_address0 <= tmp_12_fu_1080_p1(11 - 1 downto 0);

    buf_3_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_4_reg_1737, tmp_10_reg_1746, tmp_9_reg_1708, buf_3_V_addr_reg_1654, tmp_13_reg_1712, tmp_11_fu_1066_p1, buf_3_V_addr_1_gep_fu_332_p3)
    begin
        if (((tmp_9_reg_1708 = ap_const_lv1_1) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_13_reg_1712 = ap_const_lv3_3) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_3_V_address1 <= buf_3_V_addr_1_gep_fu_332_p3;
        elsif (((tmp_9_reg_1708 = ap_const_lv1_0) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_13_reg_1712 = ap_const_lv3_3) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_3_V_address1 <= tmp_11_fu_1066_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_3_V_address1 <= buf_3_V_addr_reg_1654;
        else 
            buf_3_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_3_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            buf_3_V_ce0 <= ap_const_logic_1;
        else 
            buf_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_3_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_4_reg_1737, tmp_10_reg_1746, tmp_9_reg_1708, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, tmp_13_reg_1712)
    begin
        if ((((tmp_9_reg_1708 = ap_const_lv1_1) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (tmp_13_reg_1712 = ap_const_lv3_3) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((tmp_9_reg_1708 = ap_const_lv1_0) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (tmp_13_reg_1712 = ap_const_lv3_3) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_3_V_ce1 <= ap_const_logic_1;
        else 
            buf_3_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_3_V_d1_assign_proc : process(p_src_data_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_4_reg_1737, tmp_10_reg_1746, tmp_9_reg_1708, tmp_13_reg_1712)
    begin
        if (((tmp_9_reg_1708 = ap_const_lv1_0) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_13_reg_1712 = ap_const_lv3_3) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_3_V_d1 <= ap_const_lv8_0;
        elsif ((((tmp_9_reg_1708 = ap_const_lv1_1) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_13_reg_1712 = ap_const_lv3_3) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_3_V_d1 <= p_src_data_V_dout;
        else 
            buf_3_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_3_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_4_reg_1737, tmp_10_reg_1746, tmp_9_reg_1708, ap_block_pp1_stage0_11001, cond_reg_1636, ap_block_pp0_stage0_11001, tmp_13_reg_1712)
    begin
        if ((((tmp_9_reg_1708 = ap_const_lv1_1) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (tmp_13_reg_1712 = ap_const_lv3_3) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((tmp_9_reg_1708 = ap_const_lv1_0) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (tmp_13_reg_1712 = ap_const_lv3_3) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((cond_reg_1636 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_3_V_we1 <= ap_const_logic_1;
        else 
            buf_3_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_4_V_addr_gep_fu_338_p3 <= tmp_11_fu_1066_p1(11 - 1 downto 0);
    buf_4_V_address0 <= tmp_12_fu_1080_p1(11 - 1 downto 0);

    buf_4_V_address1_assign_proc : process(tmp_9_reg_1708, tmp_11_fu_1066_p1, buf_4_V_addr_gep_fu_338_p3, ap_condition_1268)
    begin
        if ((ap_const_boolean_1 = ap_condition_1268)) then
            if ((tmp_9_reg_1708 = ap_const_lv1_1)) then 
                buf_4_V_address1 <= buf_4_V_addr_gep_fu_338_p3;
            elsif ((tmp_9_reg_1708 = ap_const_lv1_0)) then 
                buf_4_V_address1 <= tmp_11_fu_1066_p1(11 - 1 downto 0);
            else 
                buf_4_V_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            buf_4_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_4_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            buf_4_V_ce0 <= ap_const_logic_1;
        else 
            buf_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_4_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_4_reg_1737, tmp_10_reg_1746, tmp_9_reg_1708, ap_block_pp1_stage0_11001, tmp_13_reg_1712)
    begin
        if (((not((tmp_13_reg_1712 = ap_const_lv3_0)) and not((tmp_13_reg_1712 = ap_const_lv3_1)) and not((tmp_13_reg_1712 = ap_const_lv3_2)) and not((tmp_13_reg_1712 = ap_const_lv3_3)) and (tmp_9_reg_1708 = ap_const_lv1_1) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not((tmp_13_reg_1712 = ap_const_lv3_0)) and not((tmp_13_reg_1712 = ap_const_lv3_1)) and not((tmp_13_reg_1712 = ap_const_lv3_2)) and not((tmp_13_reg_1712 = ap_const_lv3_3)) and (tmp_9_reg_1708 = ap_const_lv1_0) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_4_V_ce1 <= ap_const_logic_1;
        else 
            buf_4_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_4_V_d1_assign_proc : process(p_src_data_V_dout, tmp_9_reg_1708, ap_condition_1268)
    begin
        if ((ap_const_boolean_1 = ap_condition_1268)) then
            if ((tmp_9_reg_1708 = ap_const_lv1_1)) then 
                buf_4_V_d1 <= p_src_data_V_dout;
            elsif ((tmp_9_reg_1708 = ap_const_lv1_0)) then 
                buf_4_V_d1 <= ap_const_lv8_0;
            else 
                buf_4_V_d1 <= "XXXXXXXX";
            end if;
        else 
            buf_4_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_4_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_4_reg_1737, tmp_10_reg_1746, tmp_9_reg_1708, ap_block_pp1_stage0_11001, tmp_13_reg_1712)
    begin
        if (((not((tmp_13_reg_1712 = ap_const_lv3_0)) and not((tmp_13_reg_1712 = ap_const_lv3_1)) and not((tmp_13_reg_1712 = ap_const_lv3_2)) and not((tmp_13_reg_1712 = ap_const_lv3_3)) and (tmp_9_reg_1708 = ap_const_lv1_1) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not((tmp_13_reg_1712 = ap_const_lv3_0)) and not((tmp_13_reg_1712 = ap_const_lv3_1)) and not((tmp_13_reg_1712 = ap_const_lv3_2)) and not((tmp_13_reg_1712 = ap_const_lv3_3)) and (tmp_9_reg_1708 = ap_const_lv1_0) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_4_V_we1 <= ap_const_logic_1;
        else 
            buf_4_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    col_V_fu_1055_p2 <= std_logic_vector(unsigned(ap_phi_mux_t_V_5_phi_fu_546_p4) + unsigned(ap_const_lv13_1));
    cond1_fu_963_p2 <= "1" when (t_V_3_reg_453 = ap_const_lv2_0) else "0";
    cond_fu_906_p2 <= "1" when (t_V_1_reg_420 = ap_const_lv3_2) else "0";
    exitcond1_fu_848_p2 <= "1" when (val_assign_reg_387 = ap_const_lv3_5) else "0";
    exitcond2_fu_895_p2 <= "1" when (t_V_1_reg_420 = ap_const_lv3_4) else "0";
    exitcond3_fu_916_p2 <= "1" when (rd_ind_1_cast_cast_fu_912_p1 = indvars_iv_reg_398) else "0";
    exitcond_fu_951_p2 <= "1" when (t_V_3_reg_453 = ap_const_lv2_2) else "0";
    i_col_V_1_fu_992_p2 <= std_logic_vector(unsigned(t_V_2_reg_464) + unsigned(ap_const_lv13_1));
    i_col_V_fu_922_p2 <= std_logic_vector(unsigned(t_V_reg_442) + unsigned(ap_const_lv13_1));
    i_row_V_1_fu_957_p2 <= std_logic_vector(unsigned(t_V_3_reg_453) + unsigned(ap_const_lv2_1));
    i_row_V_fu_940_p2 <= std_logic_vector(unsigned(t_V_1_reg_420) + unsigned(ap_const_lv3_1));
    icmp_fu_1099_p2 <= "1" when (tmp_21_fu_1089_p4 = ap_const_lv12_0) else "0";
    indvars_iv_next_fu_946_p2 <= std_logic_vector(unsigned(op_assign_cast7_reg_1615) + unsigned(indvars_iv_reg_398));
    init_row_ind_fu_854_p2 <= std_logic_vector(unsigned(val_assign_reg_387) + unsigned(ap_const_lv3_1));
    op2_assign_1_fu_978_p2 <= std_logic_vector(unsigned(op_assign_cast_reg_1621) + unsigned(ap_const_lv17_2));
    op2_assign_fu_972_p2 <= std_logic_vector(unsigned(tmp_1_cast3_fu_969_p1) + unsigned(ap_const_lv17_2));
    op_assign_cast7_fu_889_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(img_width),18));
    op_assign_cast_fu_892_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(img_width),17));

    p_dst_data_V_blk_n_assign_proc : process(p_dst_data_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter11, icmp_reg_1780_pp1_iter10_reg)
    begin
        if (((icmp_reg_1780_pp1_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1))) then 
            p_dst_data_V_blk_n <= p_dst_data_V_full_n;
        else 
            p_dst_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_V_din <= sel_SEBB_reg_1861;

    p_dst_data_V_write_assign_proc : process(ap_enable_reg_pp1_iter11, icmp_reg_1780_pp1_iter10_reg, ap_block_pp1_stage0_11001)
    begin
        if (((icmp_reg_1780_pp1_iter10_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            p_dst_data_V_write <= ap_const_logic_1;
        else 
            p_dst_data_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_V_blk_n_assign_proc : process(p_src_data_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_4_reg_1737, tmp_10_reg_1746, tmp_9_reg_1708)
    begin
        if ((((tmp_9_reg_1708 = ap_const_lv1_1) and (tmp_10_reg_1746 = ap_const_lv1_1) and (tmp_4_reg_1737 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_data_V_blk_n <= p_src_data_V_empty_n;
        else 
            p_src_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_predicate_op183_read_state11, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_predicate_op183_read_state11 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_data_V_read <= ap_const_logic_1;
        else 
            p_src_data_V_read <= ap_const_logic_0;
        end if; 
    end process;

    rd_ind_1_cast_cast_fu_912_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_ind_1_reg_432),18));
    rd_ind_2_fu_934_p2 <= std_logic_vector(unsigned(rd_ind_1_reg_432) + unsigned(ap_const_lv17_1));
    row_V_fu_1532_p2 <= std_logic_vector(unsigned(t_V_4_reg_530) + unsigned(ap_const_lv13_1));
    row_ind_0_V_2_fu_860_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(val_assign_reg_387),13));
    sel_SEBB1_fu_1240_p3 <= 
        ap_phi_mux_src_buf_0_2_phi_fu_735_p4 when (tmp_49_0_0_2_fu_1234_p2(0) = '1') else 
        src_buf_load_0_0_1_s_fu_1226_p3;
    sel_SEBB2_fu_1278_p3 <= 
        ap_phi_mux_src_buf_1_phi_fu_710_p4 when (tmp_49_0_1_fu_1272_p2(0) = '1') else 
        src_buf_load_0_0_4_s_fu_1266_p3;
    sel_SEBB3_fu_1318_p3 <= 
        src_buf_1_3_reg_668_pp1_iter4_reg when (tmp_49_0_1_3_fu_1312_p2(0) = '1') else 
        src_buf_load_0_1_2_s_fu_1305_p3;
    sel_SEBB4_fu_1356_p3 <= 
        src_buf_2_1_reg_642_pp1_iter5_reg when (tmp_49_0_2_1_fu_1350_p2(0) = '1') else 
        src_buf_load_0_2_0_s_fu_1343_p3;
    sel_SEBB5_fu_1395_p3 <= 
        src_buf_temp_copy_ex_2_reg_1798_pp1_iter6_reg when (tmp_49_0_2_4_fu_1390_p2(0) = '1') else 
        src_buf_load_0_2_3_s_fu_1383_p3;
    sel_SEBB6_fu_1434_p3 <= 
        src_buf_3_2_reg_578_pp1_iter7_reg when (tmp_49_0_3_2_fu_1428_p2(0) = '1') else 
        src_buf_load_0_3_1_s_fu_1421_p3;
    sel_SEBB7_fu_1472_p3 <= 
        ap_phi_mux_src_buf_4_phi_fu_558_p4 when (tmp_49_0_4_fu_1466_p2(0) = '1') else 
        src_buf_load_0_3_4_s_fu_1460_p3;
    sel_SEBB8_fu_1512_p3 <= 
        src_buf_4_3_reg_795_pp1_iter9_reg when (tmp_49_0_4_3_fu_1506_p2(0) = '1') else 
        src_buf_load_0_4_2_s_fu_1499_p3;
    sel_SEBB_fu_1525_p3 <= 
        src_buf_temp_copy_ex_4_reg_1812_pp1_iter9_reg when (tmp_49_0_4_4_fu_1520_p2(0) = '1') else 
        sel_SEBB8_fu_1512_p3;
    src_buf_load_0_0_1_s_fu_1226_p3 <= 
        ap_phi_mux_src_buf_0_1_phi_fu_748_p4 when (tmp_49_0_0_1_fu_1220_p2(0) = '1') else 
        ap_phi_mux_src_buf_phi_fu_761_p4;
    src_buf_load_0_0_3_s_fu_1254_p3 <= 
        ap_phi_mux_src_buf_0_3_phi_fu_723_p4 when (tmp_49_0_0_3_fu_1248_p2(0) = '1') else 
        sel_SEBB1_fu_1240_p3;
    src_buf_load_0_0_4_s_fu_1266_p3 <= 
        src_buf_temp_copy_ex_reg_1784 when (tmp_49_0_0_4_fu_1262_p2(0) = '1') else 
        src_buf_load_0_0_3_s_reg_1819;
    src_buf_load_0_1_1_s_fu_1292_p3 <= 
        src_buf_1_1_reg_693 when (tmp_49_0_1_1_fu_1286_p2(0) = '1') else 
        sel_SEBB2_fu_1278_p3;
    src_buf_load_0_1_2_s_fu_1305_p3 <= 
        src_buf_1_2_reg_680_pp1_iter4_reg when (tmp_49_0_1_2_fu_1300_p2(0) = '1') else 
        src_buf_load_0_1_1_s_reg_1825;
    src_buf_load_0_1_4_s_fu_1331_p3 <= 
        src_buf_temp_copy_ex_1_reg_1791_pp1_iter4_reg when (tmp_49_0_1_4_fu_1326_p2(0) = '1') else 
        sel_SEBB3_fu_1318_p3;
    src_buf_load_0_2_0_s_fu_1343_p3 <= 
        ap_phi_mux_src_buf_2_phi_fu_659_p4 when (tmp_49_0_2_fu_1338_p2(0) = '1') else 
        src_buf_load_0_1_4_s_reg_1831;
    src_buf_load_0_2_2_s_fu_1370_p3 <= 
        src_buf_2_2_reg_629_pp1_iter5_reg when (tmp_49_0_2_2_fu_1364_p2(0) = '1') else 
        sel_SEBB4_fu_1356_p3;
    src_buf_load_0_2_3_s_fu_1383_p3 <= 
        src_buf_2_3_reg_617_pp1_iter6_reg when (tmp_49_0_2_3_fu_1378_p2(0) = '1') else 
        src_buf_load_0_2_2_s_reg_1837;
    src_buf_load_0_3_0_s_fu_1408_p3 <= 
        ap_phi_mux_src_buf_3_phi_fu_608_p4 when (tmp_49_0_3_fu_1402_p2(0) = '1') else 
        sel_SEBB5_fu_1395_p3;
    src_buf_load_0_3_1_s_fu_1421_p3 <= 
        src_buf_3_1_reg_591_pp1_iter7_reg when (tmp_49_0_3_1_fu_1416_p2(0) = '1') else 
        src_buf_load_0_3_0_s_reg_1843;
    src_buf_load_0_3_3_s_fu_1448_p3 <= 
        src_buf_3_3_reg_566_pp1_iter7_reg when (tmp_49_0_3_3_fu_1442_p2(0) = '1') else 
        sel_SEBB6_fu_1434_p3;
    src_buf_load_0_3_4_s_fu_1460_p3 <= 
        src_buf_temp_copy_ex_3_reg_1805_pp1_iter8_reg when (tmp_49_0_3_4_fu_1456_p2(0) = '1') else 
        src_buf_load_0_3_3_s_reg_1849;
    src_buf_load_0_4_1_s_fu_1486_p3 <= 
        src_buf_4_1_reg_769_pp1_iter8_reg when (tmp_49_0_4_1_fu_1480_p2(0) = '1') else 
        sel_SEBB7_fu_1472_p3;
    src_buf_load_0_4_2_s_fu_1499_p3 <= 
        src_buf_4_2_reg_782_pp1_iter9_reg when (tmp_49_0_4_2_fu_1494_p2(0) = '1') else 
        src_buf_load_0_4_1_s_reg_1855;
    src_buf_temp_copy_ex_1_xfExtractPixels_fu_813_val1_V_read <= 
        tmp_14_fu_1120_p7 when (tmp_10_reg_1746_pp1_iter2_reg(0) = '1') else 
        ap_const_lv8_0;
    src_buf_temp_copy_ex_2_xfExtractPixels_fu_818_val1_V_read <= 
        buf_cop_2_V_fu_1151_p7 when (tmp_10_reg_1746_pp1_iter2_reg(0) = '1') else 
        ap_const_lv8_0;
    src_buf_temp_copy_ex_3_xfExtractPixels_fu_823_val1_V_read <= 
        tmp_15_fu_1166_p7 when (tmp_10_reg_1746_pp1_iter2_reg(0) = '1') else 
        ap_const_lv8_0;
    src_buf_temp_copy_ex_4_xfExtractPixels_fu_828_val1_V_read <= 
        tmp_16_fu_1197_p7 when (tmp_10_reg_1746_pp1_iter2_reg(0) = '1') else 
        ap_const_lv8_0;
    src_buf_temp_copy_ex_xfExtractPixels_fu_808_val1_V_read <= 
        buf_cop_0_V_fu_1105_p7 when (tmp_10_reg_1746_pp1_iter2_reg(0) = '1') else 
        ap_const_lv8_0;
    tmp_10_fu_1061_p2 <= "1" when (unsigned(tmp_12_cast1_fu_1042_p1) < unsigned(img_width)) else "0";
    tmp_11_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_5_reg_542),64));
    tmp_12_cast1_fu_1042_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_t_V_5_phi_fu_546_p4),16));
    tmp_12_cast_fu_1046_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_t_V_5_phi_fu_546_p4),17));
    tmp_12_fu_1080_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_5_reg_542_pp1_iter1_reg),64));
    tmp_13_fu_1022_p1 <= row_ind_3_V_1_reg_475(3 - 1 downto 0);
    tmp_17_fu_1026_p1 <= zero_ind_V_reg_518(3 - 1 downto 0);
    tmp_18_fu_1030_p1 <= row_ind_0_V_reg_507(3 - 1 downto 0);
    tmp_19_fu_1034_p1 <= row_ind_1_V_reg_496(3 - 1 downto 0);
    tmp_1_cast3_fu_969_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(img_height),17));
    tmp_1_fu_998_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_2_reg_464),64));
    tmp_20_fu_1038_p1 <= row_ind_2_V_reg_485(3 - 1 downto 0);
    tmp_21_fu_1089_p4 <= t_V_5_reg_542_pp1_iter1_reg(12 downto 1);
    tmp_2_fu_987_p2 <= "1" when (unsigned(tmp_cast_fu_983_p1) < unsigned(img_width)) else "0";
    tmp_3_fu_928_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_442),64));
    tmp_49_0_0_1_fu_1220_p2 <= "1" when (unsigned(ap_phi_mux_src_buf_0_1_phi_fu_748_p4) > unsigned(ap_phi_mux_src_buf_phi_fu_761_p4)) else "0";
    tmp_49_0_0_2_fu_1234_p2 <= "1" when (unsigned(ap_phi_mux_src_buf_0_2_phi_fu_735_p4) > unsigned(src_buf_load_0_0_1_s_fu_1226_p3)) else "0";
    tmp_49_0_0_3_fu_1248_p2 <= "1" when (unsigned(ap_phi_mux_src_buf_0_3_phi_fu_723_p4) > unsigned(sel_SEBB1_fu_1240_p3)) else "0";
    tmp_49_0_0_4_fu_1262_p2 <= "1" when (unsigned(src_buf_temp_copy_ex_reg_1784) > unsigned(src_buf_load_0_0_3_s_reg_1819)) else "0";
    tmp_49_0_1_1_fu_1286_p2 <= "1" when (unsigned(src_buf_1_1_reg_693) > unsigned(sel_SEBB2_fu_1278_p3)) else "0";
    tmp_49_0_1_2_fu_1300_p2 <= "1" when (unsigned(src_buf_1_2_reg_680_pp1_iter4_reg) > unsigned(src_buf_load_0_1_1_s_reg_1825)) else "0";
    tmp_49_0_1_3_fu_1312_p2 <= "1" when (unsigned(src_buf_1_3_reg_668_pp1_iter4_reg) > unsigned(src_buf_load_0_1_2_s_fu_1305_p3)) else "0";
    tmp_49_0_1_4_fu_1326_p2 <= "1" when (unsigned(src_buf_temp_copy_ex_1_reg_1791_pp1_iter4_reg) > unsigned(sel_SEBB3_fu_1318_p3)) else "0";
    tmp_49_0_1_fu_1272_p2 <= "1" when (unsigned(ap_phi_mux_src_buf_1_phi_fu_710_p4) > unsigned(src_buf_load_0_0_4_s_fu_1266_p3)) else "0";
    tmp_49_0_2_1_fu_1350_p2 <= "1" when (unsigned(src_buf_2_1_reg_642_pp1_iter5_reg) > unsigned(src_buf_load_0_2_0_s_fu_1343_p3)) else "0";
    tmp_49_0_2_2_fu_1364_p2 <= "1" when (unsigned(src_buf_2_2_reg_629_pp1_iter5_reg) > unsigned(sel_SEBB4_fu_1356_p3)) else "0";
    tmp_49_0_2_3_fu_1378_p2 <= "1" when (unsigned(src_buf_2_3_reg_617_pp1_iter6_reg) > unsigned(src_buf_load_0_2_2_s_reg_1837)) else "0";
    tmp_49_0_2_4_fu_1390_p2 <= "1" when (unsigned(src_buf_temp_copy_ex_2_reg_1798_pp1_iter6_reg) > unsigned(src_buf_load_0_2_3_s_fu_1383_p3)) else "0";
    tmp_49_0_2_fu_1338_p2 <= "1" when (unsigned(ap_phi_mux_src_buf_2_phi_fu_659_p4) > unsigned(src_buf_load_0_1_4_s_reg_1831)) else "0";
    tmp_49_0_3_1_fu_1416_p2 <= "1" when (unsigned(src_buf_3_1_reg_591_pp1_iter7_reg) > unsigned(src_buf_load_0_3_0_s_reg_1843)) else "0";
    tmp_49_0_3_2_fu_1428_p2 <= "1" when (unsigned(src_buf_3_2_reg_578_pp1_iter7_reg) > unsigned(src_buf_load_0_3_1_s_fu_1421_p3)) else "0";
    tmp_49_0_3_3_fu_1442_p2 <= "1" when (unsigned(src_buf_3_3_reg_566_pp1_iter7_reg) > unsigned(sel_SEBB6_fu_1434_p3)) else "0";
    tmp_49_0_3_4_fu_1456_p2 <= "1" when (unsigned(src_buf_temp_copy_ex_3_reg_1805_pp1_iter8_reg) > unsigned(src_buf_load_0_3_3_s_reg_1849)) else "0";
    tmp_49_0_3_fu_1402_p2 <= "1" when (unsigned(ap_phi_mux_src_buf_3_phi_fu_608_p4) > unsigned(sel_SEBB5_fu_1395_p3)) else "0";
    tmp_49_0_4_1_fu_1480_p2 <= "1" when (unsigned(src_buf_4_1_reg_769_pp1_iter8_reg) > unsigned(sel_SEBB7_fu_1472_p3)) else "0";
    tmp_49_0_4_2_fu_1494_p2 <= "1" when (unsigned(src_buf_4_2_reg_782_pp1_iter9_reg) > unsigned(src_buf_load_0_4_1_s_reg_1855)) else "0";
    tmp_49_0_4_3_fu_1506_p2 <= "1" when (unsigned(src_buf_4_3_reg_795_pp1_iter9_reg) > unsigned(src_buf_load_0_4_2_s_fu_1499_p3)) else "0";
    tmp_49_0_4_4_fu_1520_p2 <= "1" when (unsigned(src_buf_temp_copy_ex_4_reg_1812_pp1_iter9_reg) > unsigned(sel_SEBB8_fu_1512_p3)) else "0";
    tmp_49_0_4_fu_1466_p2 <= "1" when (unsigned(ap_phi_mux_src_buf_4_phi_fu_558_p4) > unsigned(src_buf_load_0_3_4_s_fu_1460_p3)) else "0";
    tmp_4_fu_1050_p2 <= "1" when (unsigned(tmp_12_cast_fu_1046_p1) < unsigned(op2_assign_1_reg_1691)) else "0";
    tmp_5_cast2_fu_1004_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_4_reg_530),16));
    tmp_5_cast_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_4_reg_530),17));
    tmp_8_fu_1012_p2 <= "1" when (unsigned(tmp_5_cast_fu_1008_p1) < unsigned(op2_assign_reg_1686)) else "0";
    tmp_9_fu_1017_p2 <= "1" when (unsigned(tmp_5_cast2_fu_1004_p1) < unsigned(img_height)) else "0";
    tmp_cast_fu_983_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_2_reg_464),16));
    tmp_fu_901_p2 <= std_logic_vector(unsigned(op_assign_cast_reg_1621) + unsigned(rd_ind_reg_408));
end behav;
