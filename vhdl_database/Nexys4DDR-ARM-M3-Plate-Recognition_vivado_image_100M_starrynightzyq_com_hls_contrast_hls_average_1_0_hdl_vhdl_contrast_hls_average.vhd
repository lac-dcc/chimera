-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity contrast_hls_average is
port (
    input_r_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    input_r_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    input_r_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    input_r_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    input_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    input_r_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    input_r_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    diff_sum_0_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    diff_sum_1_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    diff_sum_2_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    diff_sum_3_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    diff_sum_4_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    diff_sum_5_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    diff_sum_6_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    diff_sum_7_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    diff_sum_8_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    diff_sum_9_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    diff_sum_10_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    input_r_TVALID : IN STD_LOGIC;
    input_r_TREADY : OUT STD_LOGIC;
    diff_sum_0_V_ap_vld : OUT STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    diff_sum_1_V_ap_vld : OUT STD_LOGIC;
    diff_sum_2_V_ap_vld : OUT STD_LOGIC;
    diff_sum_3_V_ap_vld : OUT STD_LOGIC;
    diff_sum_4_V_ap_vld : OUT STD_LOGIC;
    diff_sum_5_V_ap_vld : OUT STD_LOGIC;
    diff_sum_6_V_ap_vld : OUT STD_LOGIC;
    diff_sum_7_V_ap_vld : OUT STD_LOGIC;
    diff_sum_8_V_ap_vld : OUT STD_LOGIC;
    diff_sum_9_V_ap_vld : OUT STD_LOGIC;
    diff_sum_10_V_ap_vld : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of contrast_hls_average is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "contrast_hls_average,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.816000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=11,HLS_SYN_DSP=0,HLS_SYN_FF=14206,HLS_SYN_LUT=14020,HLS_VERSION=2018_2}";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal Block_proc_U0_ap_start : STD_LOGIC;
    signal Block_proc_U0_ap_done : STD_LOGIC;
    signal Block_proc_U0_ap_continue : STD_LOGIC;
    signal Block_proc_U0_ap_idle : STD_LOGIC;
    signal Block_proc_U0_ap_ready : STD_LOGIC;
    signal Block_proc_U0_img_src_0_rows_V_out_din : STD_LOGIC_VECTOR (5 downto 0);
    signal Block_proc_U0_img_src_0_rows_V_out_write : STD_LOGIC;
    signal Block_proc_U0_img_src_0_cols_V_out_din : STD_LOGIC_VECTOR (5 downto 0);
    signal Block_proc_U0_img_src_0_cols_V_out_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_start : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_done : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_continue : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_idle : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2Mat_U0_start_out : STD_LOGIC;
    signal AXIvideo2Mat_U0_start_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_input_r_TREADY : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_rows_V_read : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_cols_V_read : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2Mat_U0_img_data_stream_V_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_rows_V_out_din : STD_LOGIC_VECTOR (5 downto 0);
    signal AXIvideo2Mat_U0_img_rows_V_out_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_cols_V_out_din : STD_LOGIC_VECTOR (5 downto 0);
    signal AXIvideo2Mat_U0_img_cols_V_out_write : STD_LOGIC;
    signal Duplicate_my_U0_ap_start : STD_LOGIC;
    signal Duplicate_my_U0_start_full_n : STD_LOGIC;
    signal Duplicate_my_U0_ap_done : STD_LOGIC;
    signal Duplicate_my_U0_ap_continue : STD_LOGIC;
    signal Duplicate_my_U0_ap_idle : STD_LOGIC;
    signal Duplicate_my_U0_ap_ready : STD_LOGIC;
    signal Duplicate_my_U0_start_out : STD_LOGIC;
    signal Duplicate_my_U0_start_write : STD_LOGIC;
    signal Duplicate_my_U0_src_rows_V_read : STD_LOGIC;
    signal Duplicate_my_U0_src_cols_V_read : STD_LOGIC;
    signal Duplicate_my_U0_src_data_stream_V_read : STD_LOGIC;
    signal Duplicate_my_U0_dst0_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Duplicate_my_U0_dst0_data_stream_V_write : STD_LOGIC;
    signal Duplicate_my_U0_dst1_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Duplicate_my_U0_dst1_data_stream_V_write : STD_LOGIC;
    signal Duplicate_my_U0_dst2_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Duplicate_my_U0_dst2_data_stream_V_write : STD_LOGIC;
    signal Duplicate_my_U0_dst3_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Duplicate_my_U0_dst3_data_stream_V_write : STD_LOGIC;
    signal Duplicate_my_U0_dst4_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Duplicate_my_U0_dst4_data_stream_V_write : STD_LOGIC;
    signal Duplicate_my_U0_dst5_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Duplicate_my_U0_dst5_data_stream_V_write : STD_LOGIC;
    signal Duplicate_my_U0_dst6_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Duplicate_my_U0_dst6_data_stream_V_write : STD_LOGIC;
    signal Duplicate_my_U0_dst7_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Duplicate_my_U0_dst7_data_stream_V_write : STD_LOGIC;
    signal Duplicate_my_U0_dst8_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Duplicate_my_U0_dst8_data_stream_V_write : STD_LOGIC;
    signal Duplicate_my_U0_dst9_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Duplicate_my_U0_dst9_data_stream_V_write : STD_LOGIC;
    signal Duplicate_my_U0_dst10_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Duplicate_my_U0_dst10_data_stream_V_write : STD_LOGIC;
    signal minus_vector_average_9_U0_ap_start : STD_LOGIC;
    signal minus_vector_average_9_U0_ap_done : STD_LOGIC;
    signal minus_vector_average_9_U0_ap_continue : STD_LOGIC;
    signal minus_vector_average_9_U0_ap_idle : STD_LOGIC;
    signal minus_vector_average_9_U0_ap_ready : STD_LOGIC;
    signal minus_vector_average_9_U0_src_data_stream_V_read : STD_LOGIC;
    signal minus_vector_average_9_U0_normal_dst_V : STD_LOGIC_VECTOR (11 downto 0);
    signal minus_vector_average_9_U0_normal_dst_V_ap_vld : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal minus_vector_average_8_U0_ap_start : STD_LOGIC;
    signal minus_vector_average_8_U0_ap_done : STD_LOGIC;
    signal minus_vector_average_8_U0_ap_continue : STD_LOGIC;
    signal minus_vector_average_8_U0_ap_idle : STD_LOGIC;
    signal minus_vector_average_8_U0_ap_ready : STD_LOGIC;
    signal minus_vector_average_8_U0_src_data_stream_V_read : STD_LOGIC;
    signal minus_vector_average_8_U0_normal_dst_V : STD_LOGIC_VECTOR (11 downto 0);
    signal minus_vector_average_8_U0_normal_dst_V_ap_vld : STD_LOGIC;
    signal minus_vector_average_7_U0_ap_start : STD_LOGIC;
    signal minus_vector_average_7_U0_ap_done : STD_LOGIC;
    signal minus_vector_average_7_U0_ap_continue : STD_LOGIC;
    signal minus_vector_average_7_U0_ap_idle : STD_LOGIC;
    signal minus_vector_average_7_U0_ap_ready : STD_LOGIC;
    signal minus_vector_average_7_U0_src_data_stream_V_read : STD_LOGIC;
    signal minus_vector_average_7_U0_normal_dst_V : STD_LOGIC_VECTOR (11 downto 0);
    signal minus_vector_average_7_U0_normal_dst_V_ap_vld : STD_LOGIC;
    signal minus_vector_average_6_U0_ap_start : STD_LOGIC;
    signal minus_vector_average_6_U0_ap_done : STD_LOGIC;
    signal minus_vector_average_6_U0_ap_continue : STD_LOGIC;
    signal minus_vector_average_6_U0_ap_idle : STD_LOGIC;
    signal minus_vector_average_6_U0_ap_ready : STD_LOGIC;
    signal minus_vector_average_6_U0_src_data_stream_V_read : STD_LOGIC;
    signal minus_vector_average_6_U0_normal_dst_V : STD_LOGIC_VECTOR (11 downto 0);
    signal minus_vector_average_6_U0_normal_dst_V_ap_vld : STD_LOGIC;
    signal minus_vector_average_5_U0_ap_start : STD_LOGIC;
    signal minus_vector_average_5_U0_ap_done : STD_LOGIC;
    signal minus_vector_average_5_U0_ap_continue : STD_LOGIC;
    signal minus_vector_average_5_U0_ap_idle : STD_LOGIC;
    signal minus_vector_average_5_U0_ap_ready : STD_LOGIC;
    signal minus_vector_average_5_U0_src_data_stream_V_read : STD_LOGIC;
    signal minus_vector_average_5_U0_normal_dst_V : STD_LOGIC_VECTOR (11 downto 0);
    signal minus_vector_average_5_U0_normal_dst_V_ap_vld : STD_LOGIC;
    signal minus_vector_average_4_U0_ap_start : STD_LOGIC;
    signal minus_vector_average_4_U0_ap_done : STD_LOGIC;
    signal minus_vector_average_4_U0_ap_continue : STD_LOGIC;
    signal minus_vector_average_4_U0_ap_idle : STD_LOGIC;
    signal minus_vector_average_4_U0_ap_ready : STD_LOGIC;
    signal minus_vector_average_4_U0_src_data_stream_V_read : STD_LOGIC;
    signal minus_vector_average_4_U0_normal_dst_V : STD_LOGIC_VECTOR (11 downto 0);
    signal minus_vector_average_4_U0_normal_dst_V_ap_vld : STD_LOGIC;
    signal minus_vector_average_3_U0_ap_start : STD_LOGIC;
    signal minus_vector_average_3_U0_ap_done : STD_LOGIC;
    signal minus_vector_average_3_U0_ap_continue : STD_LOGIC;
    signal minus_vector_average_3_U0_ap_idle : STD_LOGIC;
    signal minus_vector_average_3_U0_ap_ready : STD_LOGIC;
    signal minus_vector_average_3_U0_src_data_stream_V_read : STD_LOGIC;
    signal minus_vector_average_3_U0_normal_dst_V : STD_LOGIC_VECTOR (11 downto 0);
    signal minus_vector_average_3_U0_normal_dst_V_ap_vld : STD_LOGIC;
    signal minus_vector_average_2_U0_ap_start : STD_LOGIC;
    signal minus_vector_average_2_U0_ap_done : STD_LOGIC;
    signal minus_vector_average_2_U0_ap_continue : STD_LOGIC;
    signal minus_vector_average_2_U0_ap_idle : STD_LOGIC;
    signal minus_vector_average_2_U0_ap_ready : STD_LOGIC;
    signal minus_vector_average_2_U0_src_data_stream_V_read : STD_LOGIC;
    signal minus_vector_average_2_U0_normal_dst_V : STD_LOGIC_VECTOR (11 downto 0);
    signal minus_vector_average_2_U0_normal_dst_V_ap_vld : STD_LOGIC;
    signal minus_vector_average_1_U0_ap_start : STD_LOGIC;
    signal minus_vector_average_1_U0_ap_done : STD_LOGIC;
    signal minus_vector_average_1_U0_ap_continue : STD_LOGIC;
    signal minus_vector_average_1_U0_ap_idle : STD_LOGIC;
    signal minus_vector_average_1_U0_ap_ready : STD_LOGIC;
    signal minus_vector_average_1_U0_src_data_stream_V_read : STD_LOGIC;
    signal minus_vector_average_1_U0_normal_dst_V : STD_LOGIC_VECTOR (11 downto 0);
    signal minus_vector_average_1_U0_normal_dst_V_ap_vld : STD_LOGIC;
    signal minus_vector_average_U0_ap_start : STD_LOGIC;
    signal minus_vector_average_U0_ap_done : STD_LOGIC;
    signal minus_vector_average_U0_ap_continue : STD_LOGIC;
    signal minus_vector_average_U0_ap_idle : STD_LOGIC;
    signal minus_vector_average_U0_ap_ready : STD_LOGIC;
    signal minus_vector_average_U0_src_data_stream_V_read : STD_LOGIC;
    signal minus_vector_average_U0_normal_dst_V : STD_LOGIC_VECTOR (11 downto 0);
    signal minus_vector_average_U0_normal_dst_V_ap_vld : STD_LOGIC;
    signal minus_vector_average_10_U0_ap_start : STD_LOGIC;
    signal minus_vector_average_10_U0_ap_done : STD_LOGIC;
    signal minus_vector_average_10_U0_ap_continue : STD_LOGIC;
    signal minus_vector_average_10_U0_ap_idle : STD_LOGIC;
    signal minus_vector_average_10_U0_ap_ready : STD_LOGIC;
    signal minus_vector_average_10_U0_src_data_stream_V_read : STD_LOGIC;
    signal minus_vector_average_10_U0_normal_dst_V : STD_LOGIC_VECTOR (11 downto 0);
    signal minus_vector_average_10_U0_normal_dst_V_ap_vld : STD_LOGIC;
    signal img_src_0_rows_V_c_full_n : STD_LOGIC;
    signal img_src_0_rows_V_c_dout : STD_LOGIC_VECTOR (5 downto 0);
    signal img_src_0_rows_V_c_empty_n : STD_LOGIC;
    signal img_src_0_cols_V_c_full_n : STD_LOGIC;
    signal img_src_0_cols_V_c_dout : STD_LOGIC_VECTOR (5 downto 0);
    signal img_src_0_cols_V_c_empty_n : STD_LOGIC;
    signal img_src_0_data_strea_full_n : STD_LOGIC;
    signal img_src_0_data_strea_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_src_0_data_strea_empty_n : STD_LOGIC;
    signal img_src_0_rows_V_c26_full_n : STD_LOGIC;
    signal img_src_0_rows_V_c26_dout : STD_LOGIC_VECTOR (5 downto 0);
    signal img_src_0_rows_V_c26_empty_n : STD_LOGIC;
    signal img_src_0_cols_V_c27_full_n : STD_LOGIC;
    signal img_src_0_cols_V_c27_dout : STD_LOGIC_VECTOR (5 downto 0);
    signal img_src_0_cols_V_c27_empty_n : STD_LOGIC;
    signal img_src_c_0_data_str_full_n : STD_LOGIC;
    signal img_src_c_0_data_str_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_src_c_0_data_str_empty_n : STD_LOGIC;
    signal img_src_c_1_data_str_full_n : STD_LOGIC;
    signal img_src_c_1_data_str_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_src_c_1_data_str_empty_n : STD_LOGIC;
    signal img_src_c_2_data_str_full_n : STD_LOGIC;
    signal img_src_c_2_data_str_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_src_c_2_data_str_empty_n : STD_LOGIC;
    signal img_src_c_3_data_str_full_n : STD_LOGIC;
    signal img_src_c_3_data_str_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_src_c_3_data_str_empty_n : STD_LOGIC;
    signal img_src_c_4_data_str_full_n : STD_LOGIC;
    signal img_src_c_4_data_str_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_src_c_4_data_str_empty_n : STD_LOGIC;
    signal img_src_c_5_data_str_full_n : STD_LOGIC;
    signal img_src_c_5_data_str_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_src_c_5_data_str_empty_n : STD_LOGIC;
    signal img_src_c_6_data_str_full_n : STD_LOGIC;
    signal img_src_c_6_data_str_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_src_c_6_data_str_empty_n : STD_LOGIC;
    signal img_src_c_7_data_str_full_n : STD_LOGIC;
    signal img_src_c_7_data_str_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_src_c_7_data_str_empty_n : STD_LOGIC;
    signal img_src_c_8_data_str_full_n : STD_LOGIC;
    signal img_src_c_8_data_str_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_src_c_8_data_str_empty_n : STD_LOGIC;
    signal img_src_c_9_data_str_full_n : STD_LOGIC;
    signal img_src_c_9_data_str_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_src_c_9_data_str_empty_n : STD_LOGIC;
    signal img_src_c_10_data_st_full_n : STD_LOGIC;
    signal img_src_c_10_data_st_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_src_c_10_data_st_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal Block_proc_U0_start_full_n : STD_LOGIC;
    signal Block_proc_U0_start_write : STD_LOGIC;
    signal start_for_Duplicate_my_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Duplicate_my_U0_full_n : STD_LOGIC;
    signal start_for_Duplicate_my_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Duplicate_my_U0_empty_n : STD_LOGIC;
    signal start_for_minus_vector_average_9_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_9_U0_full_n : STD_LOGIC;
    signal start_for_minus_vector_average_9_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_9_U0_empty_n : STD_LOGIC;
    signal start_for_minus_vector_average_8_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_8_U0_full_n : STD_LOGIC;
    signal start_for_minus_vector_average_8_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_8_U0_empty_n : STD_LOGIC;
    signal start_for_minus_vector_average_7_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_7_U0_full_n : STD_LOGIC;
    signal start_for_minus_vector_average_7_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_7_U0_empty_n : STD_LOGIC;
    signal start_for_minus_vector_average_6_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_6_U0_full_n : STD_LOGIC;
    signal start_for_minus_vector_average_6_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_6_U0_empty_n : STD_LOGIC;
    signal start_for_minus_vector_average_5_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_5_U0_full_n : STD_LOGIC;
    signal start_for_minus_vector_average_5_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_5_U0_empty_n : STD_LOGIC;
    signal start_for_minus_vector_average_4_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_4_U0_full_n : STD_LOGIC;
    signal start_for_minus_vector_average_4_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_4_U0_empty_n : STD_LOGIC;
    signal start_for_minus_vector_average_3_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_3_U0_full_n : STD_LOGIC;
    signal start_for_minus_vector_average_3_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_3_U0_empty_n : STD_LOGIC;
    signal start_for_minus_vector_average_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_2_U0_full_n : STD_LOGIC;
    signal start_for_minus_vector_average_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_2_U0_empty_n : STD_LOGIC;
    signal start_for_minus_vector_average_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_1_U0_full_n : STD_LOGIC;
    signal start_for_minus_vector_average_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_1_U0_empty_n : STD_LOGIC;
    signal start_for_minus_vector_average_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_U0_full_n : STD_LOGIC;
    signal start_for_minus_vector_average_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_U0_empty_n : STD_LOGIC;
    signal start_for_minus_vector_average_10_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_10_U0_full_n : STD_LOGIC;
    signal start_for_minus_vector_average_10_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_minus_vector_average_10_U0_empty_n : STD_LOGIC;
    signal minus_vector_average_9_U0_start_full_n : STD_LOGIC;
    signal minus_vector_average_9_U0_start_write : STD_LOGIC;
    signal minus_vector_average_8_U0_start_full_n : STD_LOGIC;
    signal minus_vector_average_8_U0_start_write : STD_LOGIC;
    signal minus_vector_average_7_U0_start_full_n : STD_LOGIC;
    signal minus_vector_average_7_U0_start_write : STD_LOGIC;
    signal minus_vector_average_6_U0_start_full_n : STD_LOGIC;
    signal minus_vector_average_6_U0_start_write : STD_LOGIC;
    signal minus_vector_average_5_U0_start_full_n : STD_LOGIC;
    signal minus_vector_average_5_U0_start_write : STD_LOGIC;
    signal minus_vector_average_4_U0_start_full_n : STD_LOGIC;
    signal minus_vector_average_4_U0_start_write : STD_LOGIC;
    signal minus_vector_average_3_U0_start_full_n : STD_LOGIC;
    signal minus_vector_average_3_U0_start_write : STD_LOGIC;
    signal minus_vector_average_2_U0_start_full_n : STD_LOGIC;
    signal minus_vector_average_2_U0_start_write : STD_LOGIC;
    signal minus_vector_average_1_U0_start_full_n : STD_LOGIC;
    signal minus_vector_average_1_U0_start_write : STD_LOGIC;
    signal minus_vector_average_U0_start_full_n : STD_LOGIC;
    signal minus_vector_average_U0_start_write : STD_LOGIC;
    signal minus_vector_average_10_U0_start_full_n : STD_LOGIC;
    signal minus_vector_average_10_U0_start_write : STD_LOGIC;

    component Block_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_src_0_rows_V_out_din : OUT STD_LOGIC_VECTOR (5 downto 0);
        img_src_0_rows_V_out_full_n : IN STD_LOGIC;
        img_src_0_rows_V_out_write : OUT STD_LOGIC;
        img_src_0_cols_V_out_din : OUT STD_LOGIC_VECTOR (5 downto 0);
        img_src_0_cols_V_out_full_n : IN STD_LOGIC;
        img_src_0_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component AXIvideo2Mat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        input_r_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        input_r_TVALID : IN STD_LOGIC;
        input_r_TREADY : OUT STD_LOGIC;
        input_r_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
        input_r_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        input_r_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        input_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        input_r_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        input_r_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_rows_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
        img_rows_V_empty_n : IN STD_LOGIC;
        img_rows_V_read : OUT STD_LOGIC;
        img_cols_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
        img_cols_V_empty_n : IN STD_LOGIC;
        img_cols_V_read : OUT STD_LOGIC;
        img_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_V_full_n : IN STD_LOGIC;
        img_data_stream_V_write : OUT STD_LOGIC;
        img_rows_V_out_din : OUT STD_LOGIC_VECTOR (5 downto 0);
        img_rows_V_out_full_n : IN STD_LOGIC;
        img_rows_V_out_write : OUT STD_LOGIC;
        img_cols_V_out_din : OUT STD_LOGIC_VECTOR (5 downto 0);
        img_cols_V_out_full_n : IN STD_LOGIC;
        img_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component Duplicate_my IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        src_rows_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
        src_rows_V_empty_n : IN STD_LOGIC;
        src_rows_V_read : OUT STD_LOGIC;
        src_cols_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
        src_cols_V_empty_n : IN STD_LOGIC;
        src_cols_V_read : OUT STD_LOGIC;
        src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_read : OUT STD_LOGIC;
        dst0_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst0_data_stream_V_full_n : IN STD_LOGIC;
        dst0_data_stream_V_write : OUT STD_LOGIC;
        dst1_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst1_data_stream_V_full_n : IN STD_LOGIC;
        dst1_data_stream_V_write : OUT STD_LOGIC;
        dst2_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst2_data_stream_V_full_n : IN STD_LOGIC;
        dst2_data_stream_V_write : OUT STD_LOGIC;
        dst3_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst3_data_stream_V_full_n : IN STD_LOGIC;
        dst3_data_stream_V_write : OUT STD_LOGIC;
        dst4_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst4_data_stream_V_full_n : IN STD_LOGIC;
        dst4_data_stream_V_write : OUT STD_LOGIC;
        dst5_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst5_data_stream_V_full_n : IN STD_LOGIC;
        dst5_data_stream_V_write : OUT STD_LOGIC;
        dst6_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst6_data_stream_V_full_n : IN STD_LOGIC;
        dst6_data_stream_V_write : OUT STD_LOGIC;
        dst7_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst7_data_stream_V_full_n : IN STD_LOGIC;
        dst7_data_stream_V_write : OUT STD_LOGIC;
        dst8_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst8_data_stream_V_full_n : IN STD_LOGIC;
        dst8_data_stream_V_write : OUT STD_LOGIC;
        dst9_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst9_data_stream_V_full_n : IN STD_LOGIC;
        dst9_data_stream_V_write : OUT STD_LOGIC;
        dst10_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst10_data_stream_V_full_n : IN STD_LOGIC;
        dst10_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component minus_vector_average_9 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_read : OUT STD_LOGIC;
        normal_dst_V : OUT STD_LOGIC_VECTOR (11 downto 0);
        normal_dst_V_ap_vld : OUT STD_LOGIC );
    end component;


    component minus_vector_average_8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_read : OUT STD_LOGIC;
        normal_dst_V : OUT STD_LOGIC_VECTOR (11 downto 0);
        normal_dst_V_ap_vld : OUT STD_LOGIC );
    end component;


    component minus_vector_average_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_read : OUT STD_LOGIC;
        normal_dst_V : OUT STD_LOGIC_VECTOR (11 downto 0);
        normal_dst_V_ap_vld : OUT STD_LOGIC );
    end component;


    component minus_vector_average_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_read : OUT STD_LOGIC;
        normal_dst_V : OUT STD_LOGIC_VECTOR (11 downto 0);
        normal_dst_V_ap_vld : OUT STD_LOGIC );
    end component;


    component minus_vector_average_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_read : OUT STD_LOGIC;
        normal_dst_V : OUT STD_LOGIC_VECTOR (11 downto 0);
        normal_dst_V_ap_vld : OUT STD_LOGIC );
    end component;


    component minus_vector_average_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_read : OUT STD_LOGIC;
        normal_dst_V : OUT STD_LOGIC_VECTOR (11 downto 0);
        normal_dst_V_ap_vld : OUT STD_LOGIC );
    end component;


    component minus_vector_average_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_read : OUT STD_LOGIC;
        normal_dst_V : OUT STD_LOGIC_VECTOR (11 downto 0);
        normal_dst_V_ap_vld : OUT STD_LOGIC );
    end component;


    component minus_vector_average_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_read : OUT STD_LOGIC;
        normal_dst_V : OUT STD_LOGIC_VECTOR (11 downto 0);
        normal_dst_V_ap_vld : OUT STD_LOGIC );
    end component;


    component minus_vector_average_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_read : OUT STD_LOGIC;
        normal_dst_V : OUT STD_LOGIC_VECTOR (11 downto 0);
        normal_dst_V_ap_vld : OUT STD_LOGIC );
    end component;


    component minus_vector_average IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_read : OUT STD_LOGIC;
        normal_dst_V : OUT STD_LOGIC_VECTOR (11 downto 0);
        normal_dst_V_ap_vld : OUT STD_LOGIC );
    end component;


    component minus_vector_average_10 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_read : OUT STD_LOGIC;
        normal_dst_V : OUT STD_LOGIC_VECTOR (11 downto 0);
        normal_dst_V_ap_vld : OUT STD_LOGIC );
    end component;


    component fifo_w6_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (5 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (5 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Duplicancg IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_minus_vocq IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_minus_vpcA IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_minus_vqcK IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_minus_vrcU IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_minus_vsc4 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_minus_vtde IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_minus_vudo IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_minus_vvdy IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_minus_vwdI IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_minus_vxdS IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_minus_vyd2 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    Block_proc_U0 : component Block_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_proc_U0_ap_start,
        ap_done => Block_proc_U0_ap_done,
        ap_continue => Block_proc_U0_ap_continue,
        ap_idle => Block_proc_U0_ap_idle,
        ap_ready => Block_proc_U0_ap_ready,
        img_src_0_rows_V_out_din => Block_proc_U0_img_src_0_rows_V_out_din,
        img_src_0_rows_V_out_full_n => img_src_0_rows_V_c_full_n,
        img_src_0_rows_V_out_write => Block_proc_U0_img_src_0_rows_V_out_write,
        img_src_0_cols_V_out_din => Block_proc_U0_img_src_0_cols_V_out_din,
        img_src_0_cols_V_out_full_n => img_src_0_cols_V_c_full_n,
        img_src_0_cols_V_out_write => Block_proc_U0_img_src_0_cols_V_out_write);

    AXIvideo2Mat_U0 : component AXIvideo2Mat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => AXIvideo2Mat_U0_ap_start,
        start_full_n => start_for_Duplicate_my_U0_full_n,
        ap_done => AXIvideo2Mat_U0_ap_done,
        ap_continue => AXIvideo2Mat_U0_ap_continue,
        ap_idle => AXIvideo2Mat_U0_ap_idle,
        ap_ready => AXIvideo2Mat_U0_ap_ready,
        start_out => AXIvideo2Mat_U0_start_out,
        start_write => AXIvideo2Mat_U0_start_write,
        input_r_TDATA => input_r_TDATA,
        input_r_TVALID => input_r_TVALID,
        input_r_TREADY => AXIvideo2Mat_U0_input_r_TREADY,
        input_r_TKEEP => input_r_TKEEP,
        input_r_TSTRB => input_r_TSTRB,
        input_r_TUSER => input_r_TUSER,
        input_r_TLAST => input_r_TLAST,
        input_r_TID => input_r_TID,
        input_r_TDEST => input_r_TDEST,
        img_rows_V_dout => img_src_0_rows_V_c_dout,
        img_rows_V_empty_n => img_src_0_rows_V_c_empty_n,
        img_rows_V_read => AXIvideo2Mat_U0_img_rows_V_read,
        img_cols_V_dout => img_src_0_cols_V_c_dout,
        img_cols_V_empty_n => img_src_0_cols_V_c_empty_n,
        img_cols_V_read => AXIvideo2Mat_U0_img_cols_V_read,
        img_data_stream_V_din => AXIvideo2Mat_U0_img_data_stream_V_din,
        img_data_stream_V_full_n => img_src_0_data_strea_full_n,
        img_data_stream_V_write => AXIvideo2Mat_U0_img_data_stream_V_write,
        img_rows_V_out_din => AXIvideo2Mat_U0_img_rows_V_out_din,
        img_rows_V_out_full_n => img_src_0_rows_V_c26_full_n,
        img_rows_V_out_write => AXIvideo2Mat_U0_img_rows_V_out_write,
        img_cols_V_out_din => AXIvideo2Mat_U0_img_cols_V_out_din,
        img_cols_V_out_full_n => img_src_0_cols_V_c27_full_n,
        img_cols_V_out_write => AXIvideo2Mat_U0_img_cols_V_out_write);

    Duplicate_my_U0 : component Duplicate_my
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Duplicate_my_U0_ap_start,
        start_full_n => Duplicate_my_U0_start_full_n,
        ap_done => Duplicate_my_U0_ap_done,
        ap_continue => Duplicate_my_U0_ap_continue,
        ap_idle => Duplicate_my_U0_ap_idle,
        ap_ready => Duplicate_my_U0_ap_ready,
        start_out => Duplicate_my_U0_start_out,
        start_write => Duplicate_my_U0_start_write,
        src_rows_V_dout => img_src_0_rows_V_c26_dout,
        src_rows_V_empty_n => img_src_0_rows_V_c26_empty_n,
        src_rows_V_read => Duplicate_my_U0_src_rows_V_read,
        src_cols_V_dout => img_src_0_cols_V_c27_dout,
        src_cols_V_empty_n => img_src_0_cols_V_c27_empty_n,
        src_cols_V_read => Duplicate_my_U0_src_cols_V_read,
        src_data_stream_V_dout => img_src_0_data_strea_dout,
        src_data_stream_V_empty_n => img_src_0_data_strea_empty_n,
        src_data_stream_V_read => Duplicate_my_U0_src_data_stream_V_read,
        dst0_data_stream_V_din => Duplicate_my_U0_dst0_data_stream_V_din,
        dst0_data_stream_V_full_n => img_src_c_0_data_str_full_n,
        dst0_data_stream_V_write => Duplicate_my_U0_dst0_data_stream_V_write,
        dst1_data_stream_V_din => Duplicate_my_U0_dst1_data_stream_V_din,
        dst1_data_stream_V_full_n => img_src_c_1_data_str_full_n,
        dst1_data_stream_V_write => Duplicate_my_U0_dst1_data_stream_V_write,
        dst2_data_stream_V_din => Duplicate_my_U0_dst2_data_stream_V_din,
        dst2_data_stream_V_full_n => img_src_c_2_data_str_full_n,
        dst2_data_stream_V_write => Duplicate_my_U0_dst2_data_stream_V_write,
        dst3_data_stream_V_din => Duplicate_my_U0_dst3_data_stream_V_din,
        dst3_data_stream_V_full_n => img_src_c_3_data_str_full_n,
        dst3_data_stream_V_write => Duplicate_my_U0_dst3_data_stream_V_write,
        dst4_data_stream_V_din => Duplicate_my_U0_dst4_data_stream_V_din,
        dst4_data_stream_V_full_n => img_src_c_4_data_str_full_n,
        dst4_data_stream_V_write => Duplicate_my_U0_dst4_data_stream_V_write,
        dst5_data_stream_V_din => Duplicate_my_U0_dst5_data_stream_V_din,
        dst5_data_stream_V_full_n => img_src_c_5_data_str_full_n,
        dst5_data_stream_V_write => Duplicate_my_U0_dst5_data_stream_V_write,
        dst6_data_stream_V_din => Duplicate_my_U0_dst6_data_stream_V_din,
        dst6_data_stream_V_full_n => img_src_c_6_data_str_full_n,
        dst6_data_stream_V_write => Duplicate_my_U0_dst6_data_stream_V_write,
        dst7_data_stream_V_din => Duplicate_my_U0_dst7_data_stream_V_din,
        dst7_data_stream_V_full_n => img_src_c_7_data_str_full_n,
        dst7_data_stream_V_write => Duplicate_my_U0_dst7_data_stream_V_write,
        dst8_data_stream_V_din => Duplicate_my_U0_dst8_data_stream_V_din,
        dst8_data_stream_V_full_n => img_src_c_8_data_str_full_n,
        dst8_data_stream_V_write => Duplicate_my_U0_dst8_data_stream_V_write,
        dst9_data_stream_V_din => Duplicate_my_U0_dst9_data_stream_V_din,
        dst9_data_stream_V_full_n => img_src_c_9_data_str_full_n,
        dst9_data_stream_V_write => Duplicate_my_U0_dst9_data_stream_V_write,
        dst10_data_stream_V_din => Duplicate_my_U0_dst10_data_stream_V_din,
        dst10_data_stream_V_full_n => img_src_c_10_data_st_full_n,
        dst10_data_stream_V_write => Duplicate_my_U0_dst10_data_stream_V_write);

    minus_vector_average_9_U0 : component minus_vector_average_9
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => minus_vector_average_9_U0_ap_start,
        ap_done => minus_vector_average_9_U0_ap_done,
        ap_continue => minus_vector_average_9_U0_ap_continue,
        ap_idle => minus_vector_average_9_U0_ap_idle,
        ap_ready => minus_vector_average_9_U0_ap_ready,
        src_data_stream_V_dout => img_src_c_0_data_str_dout,
        src_data_stream_V_empty_n => img_src_c_0_data_str_empty_n,
        src_data_stream_V_read => minus_vector_average_9_U0_src_data_stream_V_read,
        normal_dst_V => minus_vector_average_9_U0_normal_dst_V,
        normal_dst_V_ap_vld => minus_vector_average_9_U0_normal_dst_V_ap_vld);

    minus_vector_average_8_U0 : component minus_vector_average_8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => minus_vector_average_8_U0_ap_start,
        ap_done => minus_vector_average_8_U0_ap_done,
        ap_continue => minus_vector_average_8_U0_ap_continue,
        ap_idle => minus_vector_average_8_U0_ap_idle,
        ap_ready => minus_vector_average_8_U0_ap_ready,
        src_data_stream_V_dout => img_src_c_1_data_str_dout,
        src_data_stream_V_empty_n => img_src_c_1_data_str_empty_n,
        src_data_stream_V_read => minus_vector_average_8_U0_src_data_stream_V_read,
        normal_dst_V => minus_vector_average_8_U0_normal_dst_V,
        normal_dst_V_ap_vld => minus_vector_average_8_U0_normal_dst_V_ap_vld);

    minus_vector_average_7_U0 : component minus_vector_average_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => minus_vector_average_7_U0_ap_start,
        ap_done => minus_vector_average_7_U0_ap_done,
        ap_continue => minus_vector_average_7_U0_ap_continue,
        ap_idle => minus_vector_average_7_U0_ap_idle,
        ap_ready => minus_vector_average_7_U0_ap_ready,
        src_data_stream_V_dout => img_src_c_2_data_str_dout,
        src_data_stream_V_empty_n => img_src_c_2_data_str_empty_n,
        src_data_stream_V_read => minus_vector_average_7_U0_src_data_stream_V_read,
        normal_dst_V => minus_vector_average_7_U0_normal_dst_V,
        normal_dst_V_ap_vld => minus_vector_average_7_U0_normal_dst_V_ap_vld);

    minus_vector_average_6_U0 : component minus_vector_average_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => minus_vector_average_6_U0_ap_start,
        ap_done => minus_vector_average_6_U0_ap_done,
        ap_continue => minus_vector_average_6_U0_ap_continue,
        ap_idle => minus_vector_average_6_U0_ap_idle,
        ap_ready => minus_vector_average_6_U0_ap_ready,
        src_data_stream_V_dout => img_src_c_3_data_str_dout,
        src_data_stream_V_empty_n => img_src_c_3_data_str_empty_n,
        src_data_stream_V_read => minus_vector_average_6_U0_src_data_stream_V_read,
        normal_dst_V => minus_vector_average_6_U0_normal_dst_V,
        normal_dst_V_ap_vld => minus_vector_average_6_U0_normal_dst_V_ap_vld);

    minus_vector_average_5_U0 : component minus_vector_average_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => minus_vector_average_5_U0_ap_start,
        ap_done => minus_vector_average_5_U0_ap_done,
        ap_continue => minus_vector_average_5_U0_ap_continue,
        ap_idle => minus_vector_average_5_U0_ap_idle,
        ap_ready => minus_vector_average_5_U0_ap_ready,
        src_data_stream_V_dout => img_src_c_4_data_str_dout,
        src_data_stream_V_empty_n => img_src_c_4_data_str_empty_n,
        src_data_stream_V_read => minus_vector_average_5_U0_src_data_stream_V_read,
        normal_dst_V => minus_vector_average_5_U0_normal_dst_V,
        normal_dst_V_ap_vld => minus_vector_average_5_U0_normal_dst_V_ap_vld);

    minus_vector_average_4_U0 : component minus_vector_average_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => minus_vector_average_4_U0_ap_start,
        ap_done => minus_vector_average_4_U0_ap_done,
        ap_continue => minus_vector_average_4_U0_ap_continue,
        ap_idle => minus_vector_average_4_U0_ap_idle,
        ap_ready => minus_vector_average_4_U0_ap_ready,
        src_data_stream_V_dout => img_src_c_5_data_str_dout,
        src_data_stream_V_empty_n => img_src_c_5_data_str_empty_n,
        src_data_stream_V_read => minus_vector_average_4_U0_src_data_stream_V_read,
        normal_dst_V => minus_vector_average_4_U0_normal_dst_V,
        normal_dst_V_ap_vld => minus_vector_average_4_U0_normal_dst_V_ap_vld);

    minus_vector_average_3_U0 : component minus_vector_average_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => minus_vector_average_3_U0_ap_start,
        ap_done => minus_vector_average_3_U0_ap_done,
        ap_continue => minus_vector_average_3_U0_ap_continue,
        ap_idle => minus_vector_average_3_U0_ap_idle,
        ap_ready => minus_vector_average_3_U0_ap_ready,
        src_data_stream_V_dout => img_src_c_6_data_str_dout,
        src_data_stream_V_empty_n => img_src_c_6_data_str_empty_n,
        src_data_stream_V_read => minus_vector_average_3_U0_src_data_stream_V_read,
        normal_dst_V => minus_vector_average_3_U0_normal_dst_V,
        normal_dst_V_ap_vld => minus_vector_average_3_U0_normal_dst_V_ap_vld);

    minus_vector_average_2_U0 : component minus_vector_average_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => minus_vector_average_2_U0_ap_start,
        ap_done => minus_vector_average_2_U0_ap_done,
        ap_continue => minus_vector_average_2_U0_ap_continue,
        ap_idle => minus_vector_average_2_U0_ap_idle,
        ap_ready => minus_vector_average_2_U0_ap_ready,
        src_data_stream_V_dout => img_src_c_7_data_str_dout,
        src_data_stream_V_empty_n => img_src_c_7_data_str_empty_n,
        src_data_stream_V_read => minus_vector_average_2_U0_src_data_stream_V_read,
        normal_dst_V => minus_vector_average_2_U0_normal_dst_V,
        normal_dst_V_ap_vld => minus_vector_average_2_U0_normal_dst_V_ap_vld);

    minus_vector_average_1_U0 : component minus_vector_average_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => minus_vector_average_1_U0_ap_start,
        ap_done => minus_vector_average_1_U0_ap_done,
        ap_continue => minus_vector_average_1_U0_ap_continue,
        ap_idle => minus_vector_average_1_U0_ap_idle,
        ap_ready => minus_vector_average_1_U0_ap_ready,
        src_data_stream_V_dout => img_src_c_8_data_str_dout,
        src_data_stream_V_empty_n => img_src_c_8_data_str_empty_n,
        src_data_stream_V_read => minus_vector_average_1_U0_src_data_stream_V_read,
        normal_dst_V => minus_vector_average_1_U0_normal_dst_V,
        normal_dst_V_ap_vld => minus_vector_average_1_U0_normal_dst_V_ap_vld);

    minus_vector_average_U0 : component minus_vector_average
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => minus_vector_average_U0_ap_start,
        ap_done => minus_vector_average_U0_ap_done,
        ap_continue => minus_vector_average_U0_ap_continue,
        ap_idle => minus_vector_average_U0_ap_idle,
        ap_ready => minus_vector_average_U0_ap_ready,
        src_data_stream_V_dout => img_src_c_9_data_str_dout,
        src_data_stream_V_empty_n => img_src_c_9_data_str_empty_n,
        src_data_stream_V_read => minus_vector_average_U0_src_data_stream_V_read,
        normal_dst_V => minus_vector_average_U0_normal_dst_V,
        normal_dst_V_ap_vld => minus_vector_average_U0_normal_dst_V_ap_vld);

    minus_vector_average_10_U0 : component minus_vector_average_10
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => minus_vector_average_10_U0_ap_start,
        ap_done => minus_vector_average_10_U0_ap_done,
        ap_continue => minus_vector_average_10_U0_ap_continue,
        ap_idle => minus_vector_average_10_U0_ap_idle,
        ap_ready => minus_vector_average_10_U0_ap_ready,
        src_data_stream_V_dout => img_src_c_10_data_st_dout,
        src_data_stream_V_empty_n => img_src_c_10_data_st_empty_n,
        src_data_stream_V_read => minus_vector_average_10_U0_src_data_stream_V_read,
        normal_dst_V => minus_vector_average_10_U0_normal_dst_V,
        normal_dst_V_ap_vld => minus_vector_average_10_U0_normal_dst_V_ap_vld);

    img_src_0_rows_V_c_U : component fifo_w6_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_proc_U0_img_src_0_rows_V_out_din,
        if_full_n => img_src_0_rows_V_c_full_n,
        if_write => Block_proc_U0_img_src_0_rows_V_out_write,
        if_dout => img_src_0_rows_V_c_dout,
        if_empty_n => img_src_0_rows_V_c_empty_n,
        if_read => AXIvideo2Mat_U0_img_rows_V_read);

    img_src_0_cols_V_c_U : component fifo_w6_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_proc_U0_img_src_0_cols_V_out_din,
        if_full_n => img_src_0_cols_V_c_full_n,
        if_write => Block_proc_U0_img_src_0_cols_V_out_write,
        if_dout => img_src_0_cols_V_c_dout,
        if_empty_n => img_src_0_cols_V_c_empty_n,
        if_read => AXIvideo2Mat_U0_img_cols_V_read);

    img_src_0_data_strea_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_data_stream_V_din,
        if_full_n => img_src_0_data_strea_full_n,
        if_write => AXIvideo2Mat_U0_img_data_stream_V_write,
        if_dout => img_src_0_data_strea_dout,
        if_empty_n => img_src_0_data_strea_empty_n,
        if_read => Duplicate_my_U0_src_data_stream_V_read);

    img_src_0_rows_V_c26_U : component fifo_w6_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_rows_V_out_din,
        if_full_n => img_src_0_rows_V_c26_full_n,
        if_write => AXIvideo2Mat_U0_img_rows_V_out_write,
        if_dout => img_src_0_rows_V_c26_dout,
        if_empty_n => img_src_0_rows_V_c26_empty_n,
        if_read => Duplicate_my_U0_src_rows_V_read);

    img_src_0_cols_V_c27_U : component fifo_w6_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_cols_V_out_din,
        if_full_n => img_src_0_cols_V_c27_full_n,
        if_write => AXIvideo2Mat_U0_img_cols_V_out_write,
        if_dout => img_src_0_cols_V_c27_dout,
        if_empty_n => img_src_0_cols_V_c27_empty_n,
        if_read => Duplicate_my_U0_src_cols_V_read);

    img_src_c_0_data_str_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_my_U0_dst0_data_stream_V_din,
        if_full_n => img_src_c_0_data_str_full_n,
        if_write => Duplicate_my_U0_dst0_data_stream_V_write,
        if_dout => img_src_c_0_data_str_dout,
        if_empty_n => img_src_c_0_data_str_empty_n,
        if_read => minus_vector_average_9_U0_src_data_stream_V_read);

    img_src_c_1_data_str_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_my_U0_dst1_data_stream_V_din,
        if_full_n => img_src_c_1_data_str_full_n,
        if_write => Duplicate_my_U0_dst1_data_stream_V_write,
        if_dout => img_src_c_1_data_str_dout,
        if_empty_n => img_src_c_1_data_str_empty_n,
        if_read => minus_vector_average_8_U0_src_data_stream_V_read);

    img_src_c_2_data_str_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_my_U0_dst2_data_stream_V_din,
        if_full_n => img_src_c_2_data_str_full_n,
        if_write => Duplicate_my_U0_dst2_data_stream_V_write,
        if_dout => img_src_c_2_data_str_dout,
        if_empty_n => img_src_c_2_data_str_empty_n,
        if_read => minus_vector_average_7_U0_src_data_stream_V_read);

    img_src_c_3_data_str_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_my_U0_dst3_data_stream_V_din,
        if_full_n => img_src_c_3_data_str_full_n,
        if_write => Duplicate_my_U0_dst3_data_stream_V_write,
        if_dout => img_src_c_3_data_str_dout,
        if_empty_n => img_src_c_3_data_str_empty_n,
        if_read => minus_vector_average_6_U0_src_data_stream_V_read);

    img_src_c_4_data_str_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_my_U0_dst4_data_stream_V_din,
        if_full_n => img_src_c_4_data_str_full_n,
        if_write => Duplicate_my_U0_dst4_data_stream_V_write,
        if_dout => img_src_c_4_data_str_dout,
        if_empty_n => img_src_c_4_data_str_empty_n,
        if_read => minus_vector_average_5_U0_src_data_stream_V_read);

    img_src_c_5_data_str_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_my_U0_dst5_data_stream_V_din,
        if_full_n => img_src_c_5_data_str_full_n,
        if_write => Duplicate_my_U0_dst5_data_stream_V_write,
        if_dout => img_src_c_5_data_str_dout,
        if_empty_n => img_src_c_5_data_str_empty_n,
        if_read => minus_vector_average_4_U0_src_data_stream_V_read);

    img_src_c_6_data_str_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_my_U0_dst6_data_stream_V_din,
        if_full_n => img_src_c_6_data_str_full_n,
        if_write => Duplicate_my_U0_dst6_data_stream_V_write,
        if_dout => img_src_c_6_data_str_dout,
        if_empty_n => img_src_c_6_data_str_empty_n,
        if_read => minus_vector_average_3_U0_src_data_stream_V_read);

    img_src_c_7_data_str_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_my_U0_dst7_data_stream_V_din,
        if_full_n => img_src_c_7_data_str_full_n,
        if_write => Duplicate_my_U0_dst7_data_stream_V_write,
        if_dout => img_src_c_7_data_str_dout,
        if_empty_n => img_src_c_7_data_str_empty_n,
        if_read => minus_vector_average_2_U0_src_data_stream_V_read);

    img_src_c_8_data_str_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_my_U0_dst8_data_stream_V_din,
        if_full_n => img_src_c_8_data_str_full_n,
        if_write => Duplicate_my_U0_dst8_data_stream_V_write,
        if_dout => img_src_c_8_data_str_dout,
        if_empty_n => img_src_c_8_data_str_empty_n,
        if_read => minus_vector_average_1_U0_src_data_stream_V_read);

    img_src_c_9_data_str_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_my_U0_dst9_data_stream_V_din,
        if_full_n => img_src_c_9_data_str_full_n,
        if_write => Duplicate_my_U0_dst9_data_stream_V_write,
        if_dout => img_src_c_9_data_str_dout,
        if_empty_n => img_src_c_9_data_str_empty_n,
        if_read => minus_vector_average_U0_src_data_stream_V_read);

    img_src_c_10_data_st_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_my_U0_dst10_data_stream_V_din,
        if_full_n => img_src_c_10_data_st_full_n,
        if_write => Duplicate_my_U0_dst10_data_stream_V_write,
        if_dout => img_src_c_10_data_st_dout,
        if_empty_n => img_src_c_10_data_st_empty_n,
        if_read => minus_vector_average_10_U0_src_data_stream_V_read);

    start_for_Duplicancg_U : component start_for_Duplicancg
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Duplicate_my_U0_din,
        if_full_n => start_for_Duplicate_my_U0_full_n,
        if_write => AXIvideo2Mat_U0_start_write,
        if_dout => start_for_Duplicate_my_U0_dout,
        if_empty_n => start_for_Duplicate_my_U0_empty_n,
        if_read => Duplicate_my_U0_ap_ready);

    start_for_minus_vocq_U : component start_for_minus_vocq
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_minus_vector_average_9_U0_din,
        if_full_n => start_for_minus_vector_average_9_U0_full_n,
        if_write => Duplicate_my_U0_start_write,
        if_dout => start_for_minus_vector_average_9_U0_dout,
        if_empty_n => start_for_minus_vector_average_9_U0_empty_n,
        if_read => minus_vector_average_9_U0_ap_ready);

    start_for_minus_vpcA_U : component start_for_minus_vpcA
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_minus_vector_average_8_U0_din,
        if_full_n => start_for_minus_vector_average_8_U0_full_n,
        if_write => Duplicate_my_U0_start_write,
        if_dout => start_for_minus_vector_average_8_U0_dout,
        if_empty_n => start_for_minus_vector_average_8_U0_empty_n,
        if_read => minus_vector_average_8_U0_ap_ready);

    start_for_minus_vqcK_U : component start_for_minus_vqcK
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_minus_vector_average_7_U0_din,
        if_full_n => start_for_minus_vector_average_7_U0_full_n,
        if_write => Duplicate_my_U0_start_write,
        if_dout => start_for_minus_vector_average_7_U0_dout,
        if_empty_n => start_for_minus_vector_average_7_U0_empty_n,
        if_read => minus_vector_average_7_U0_ap_ready);

    start_for_minus_vrcU_U : component start_for_minus_vrcU
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_minus_vector_average_6_U0_din,
        if_full_n => start_for_minus_vector_average_6_U0_full_n,
        if_write => Duplicate_my_U0_start_write,
        if_dout => start_for_minus_vector_average_6_U0_dout,
        if_empty_n => start_for_minus_vector_average_6_U0_empty_n,
        if_read => minus_vector_average_6_U0_ap_ready);

    start_for_minus_vsc4_U : component start_for_minus_vsc4
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_minus_vector_average_5_U0_din,
        if_full_n => start_for_minus_vector_average_5_U0_full_n,
        if_write => Duplicate_my_U0_start_write,
        if_dout => start_for_minus_vector_average_5_U0_dout,
        if_empty_n => start_for_minus_vector_average_5_U0_empty_n,
        if_read => minus_vector_average_5_U0_ap_ready);

    start_for_minus_vtde_U : component start_for_minus_vtde
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_minus_vector_average_4_U0_din,
        if_full_n => start_for_minus_vector_average_4_U0_full_n,
        if_write => Duplicate_my_U0_start_write,
        if_dout => start_for_minus_vector_average_4_U0_dout,
        if_empty_n => start_for_minus_vector_average_4_U0_empty_n,
        if_read => minus_vector_average_4_U0_ap_ready);

    start_for_minus_vudo_U : component start_for_minus_vudo
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_minus_vector_average_3_U0_din,
        if_full_n => start_for_minus_vector_average_3_U0_full_n,
        if_write => Duplicate_my_U0_start_write,
        if_dout => start_for_minus_vector_average_3_U0_dout,
        if_empty_n => start_for_minus_vector_average_3_U0_empty_n,
        if_read => minus_vector_average_3_U0_ap_ready);

    start_for_minus_vvdy_U : component start_for_minus_vvdy
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_minus_vector_average_2_U0_din,
        if_full_n => start_for_minus_vector_average_2_U0_full_n,
        if_write => Duplicate_my_U0_start_write,
        if_dout => start_for_minus_vector_average_2_U0_dout,
        if_empty_n => start_for_minus_vector_average_2_U0_empty_n,
        if_read => minus_vector_average_2_U0_ap_ready);

    start_for_minus_vwdI_U : component start_for_minus_vwdI
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_minus_vector_average_1_U0_din,
        if_full_n => start_for_minus_vector_average_1_U0_full_n,
        if_write => Duplicate_my_U0_start_write,
        if_dout => start_for_minus_vector_average_1_U0_dout,
        if_empty_n => start_for_minus_vector_average_1_U0_empty_n,
        if_read => minus_vector_average_1_U0_ap_ready);

    start_for_minus_vxdS_U : component start_for_minus_vxdS
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_minus_vector_average_U0_din,
        if_full_n => start_for_minus_vector_average_U0_full_n,
        if_write => Duplicate_my_U0_start_write,
        if_dout => start_for_minus_vector_average_U0_dout,
        if_empty_n => start_for_minus_vector_average_U0_empty_n,
        if_read => minus_vector_average_U0_ap_ready);

    start_for_minus_vyd2_U : component start_for_minus_vyd2
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_minus_vector_average_10_U0_din,
        if_full_n => start_for_minus_vector_average_10_U0_full_n,
        if_write => Duplicate_my_U0_start_write,
        if_dout => start_for_minus_vector_average_10_U0_dout,
        if_empty_n => start_for_minus_vector_average_10_U0_empty_n,
        if_read => minus_vector_average_10_U0_ap_ready);




    AXIvideo2Mat_U0_ap_continue <= ap_const_logic_1;
    AXIvideo2Mat_U0_ap_start <= ap_start;
    Block_proc_U0_ap_continue <= ap_const_logic_1;
    Block_proc_U0_ap_start <= ap_start;
    Block_proc_U0_start_full_n <= ap_const_logic_1;
    Block_proc_U0_start_write <= ap_const_logic_0;
    Duplicate_my_U0_ap_continue <= ap_const_logic_1;
    Duplicate_my_U0_ap_start <= start_for_Duplicate_my_U0_empty_n;
    Duplicate_my_U0_start_full_n <= (start_for_minus_vector_average_U0_full_n and start_for_minus_vector_average_9_U0_full_n and start_for_minus_vector_average_8_U0_full_n and start_for_minus_vector_average_7_U0_full_n and start_for_minus_vector_average_6_U0_full_n and start_for_minus_vector_average_5_U0_full_n and start_for_minus_vector_average_4_U0_full_n and start_for_minus_vector_average_3_U0_full_n and start_for_minus_vector_average_2_U0_full_n and start_for_minus_vector_average_1_U0_full_n and start_for_minus_vector_average_10_U0_full_n);
    ap_done <= ap_sync_done;
    ap_idle <= (minus_vector_average_U0_ap_idle and minus_vector_average_9_U0_ap_idle and minus_vector_average_8_U0_ap_idle and minus_vector_average_7_U0_ap_idle and minus_vector_average_6_U0_ap_idle and minus_vector_average_5_U0_ap_idle and minus_vector_average_4_U0_ap_idle and minus_vector_average_3_U0_ap_idle and minus_vector_average_2_U0_ap_idle and minus_vector_average_1_U0_ap_idle and minus_vector_average_10_U0_ap_idle and Duplicate_my_U0_ap_idle and Block_proc_U0_ap_idle and AXIvideo2Mat_U0_ap_idle);
    ap_ready <= AXIvideo2Mat_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_sync_done;
    ap_sync_done <= (minus_vector_average_U0_ap_done and minus_vector_average_9_U0_ap_done and minus_vector_average_8_U0_ap_done and minus_vector_average_7_U0_ap_done and minus_vector_average_6_U0_ap_done and minus_vector_average_5_U0_ap_done and minus_vector_average_4_U0_ap_done and minus_vector_average_3_U0_ap_done and minus_vector_average_2_U0_ap_done and minus_vector_average_1_U0_ap_done and minus_vector_average_10_U0_ap_done);
    ap_sync_ready <= AXIvideo2Mat_U0_ap_ready;
    diff_sum_0_V <= minus_vector_average_9_U0_normal_dst_V;
    diff_sum_0_V_ap_vld <= minus_vector_average_9_U0_normal_dst_V_ap_vld;
    diff_sum_10_V <= minus_vector_average_10_U0_normal_dst_V;
    diff_sum_10_V_ap_vld <= minus_vector_average_10_U0_normal_dst_V_ap_vld;
    diff_sum_1_V <= minus_vector_average_8_U0_normal_dst_V;
    diff_sum_1_V_ap_vld <= minus_vector_average_8_U0_normal_dst_V_ap_vld;
    diff_sum_2_V <= minus_vector_average_7_U0_normal_dst_V;
    diff_sum_2_V_ap_vld <= minus_vector_average_7_U0_normal_dst_V_ap_vld;
    diff_sum_3_V <= minus_vector_average_6_U0_normal_dst_V;
    diff_sum_3_V_ap_vld <= minus_vector_average_6_U0_normal_dst_V_ap_vld;
    diff_sum_4_V <= minus_vector_average_5_U0_normal_dst_V;
    diff_sum_4_V_ap_vld <= minus_vector_average_5_U0_normal_dst_V_ap_vld;
    diff_sum_5_V <= minus_vector_average_4_U0_normal_dst_V;
    diff_sum_5_V_ap_vld <= minus_vector_average_4_U0_normal_dst_V_ap_vld;
    diff_sum_6_V <= minus_vector_average_3_U0_normal_dst_V;
    diff_sum_6_V_ap_vld <= minus_vector_average_3_U0_normal_dst_V_ap_vld;
    diff_sum_7_V <= minus_vector_average_2_U0_normal_dst_V;
    diff_sum_7_V_ap_vld <= minus_vector_average_2_U0_normal_dst_V_ap_vld;
    diff_sum_8_V <= minus_vector_average_1_U0_normal_dst_V;
    diff_sum_8_V_ap_vld <= minus_vector_average_1_U0_normal_dst_V_ap_vld;
    diff_sum_9_V <= minus_vector_average_U0_normal_dst_V;
    diff_sum_9_V_ap_vld <= minus_vector_average_U0_normal_dst_V_ap_vld;
    input_r_TREADY <= AXIvideo2Mat_U0_input_r_TREADY;
    minus_vector_average_10_U0_ap_continue <= ap_sync_done;
    minus_vector_average_10_U0_ap_start <= start_for_minus_vector_average_10_U0_empty_n;
    minus_vector_average_10_U0_start_full_n <= ap_const_logic_1;
    minus_vector_average_10_U0_start_write <= ap_const_logic_0;
    minus_vector_average_1_U0_ap_continue <= ap_sync_done;
    minus_vector_average_1_U0_ap_start <= start_for_minus_vector_average_1_U0_empty_n;
    minus_vector_average_1_U0_start_full_n <= ap_const_logic_1;
    minus_vector_average_1_U0_start_write <= ap_const_logic_0;
    minus_vector_average_2_U0_ap_continue <= ap_sync_done;
    minus_vector_average_2_U0_ap_start <= start_for_minus_vector_average_2_U0_empty_n;
    minus_vector_average_2_U0_start_full_n <= ap_const_logic_1;
    minus_vector_average_2_U0_start_write <= ap_const_logic_0;
    minus_vector_average_3_U0_ap_continue <= ap_sync_done;
    minus_vector_average_3_U0_ap_start <= start_for_minus_vector_average_3_U0_empty_n;
    minus_vector_average_3_U0_start_full_n <= ap_const_logic_1;
    minus_vector_average_3_U0_start_write <= ap_const_logic_0;
    minus_vector_average_4_U0_ap_continue <= ap_sync_done;
    minus_vector_average_4_U0_ap_start <= start_for_minus_vector_average_4_U0_empty_n;
    minus_vector_average_4_U0_start_full_n <= ap_const_logic_1;
    minus_vector_average_4_U0_start_write <= ap_const_logic_0;
    minus_vector_average_5_U0_ap_continue <= ap_sync_done;
    minus_vector_average_5_U0_ap_start <= start_for_minus_vector_average_5_U0_empty_n;
    minus_vector_average_5_U0_start_full_n <= ap_const_logic_1;
    minus_vector_average_5_U0_start_write <= ap_const_logic_0;
    minus_vector_average_6_U0_ap_continue <= ap_sync_done;
    minus_vector_average_6_U0_ap_start <= start_for_minus_vector_average_6_U0_empty_n;
    minus_vector_average_6_U0_start_full_n <= ap_const_logic_1;
    minus_vector_average_6_U0_start_write <= ap_const_logic_0;
    minus_vector_average_7_U0_ap_continue <= ap_sync_done;
    minus_vector_average_7_U0_ap_start <= start_for_minus_vector_average_7_U0_empty_n;
    minus_vector_average_7_U0_start_full_n <= ap_const_logic_1;
    minus_vector_average_7_U0_start_write <= ap_const_logic_0;
    minus_vector_average_8_U0_ap_continue <= ap_sync_done;
    minus_vector_average_8_U0_ap_start <= start_for_minus_vector_average_8_U0_empty_n;
    minus_vector_average_8_U0_start_full_n <= ap_const_logic_1;
    minus_vector_average_8_U0_start_write <= ap_const_logic_0;
    minus_vector_average_9_U0_ap_continue <= ap_sync_done;
    minus_vector_average_9_U0_ap_start <= start_for_minus_vector_average_9_U0_empty_n;
    minus_vector_average_9_U0_start_full_n <= ap_const_logic_1;
    minus_vector_average_9_U0_start_write <= ap_const_logic_0;
    minus_vector_average_U0_ap_continue <= ap_sync_done;
    minus_vector_average_U0_ap_start <= start_for_minus_vector_average_U0_empty_n;
    minus_vector_average_U0_start_full_n <= ap_const_logic_1;
    minus_vector_average_U0_start_write <= ap_const_logic_0;
    start_for_Duplicate_my_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_minus_vector_average_10_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_minus_vector_average_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_minus_vector_average_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_minus_vector_average_3_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_minus_vector_average_4_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_minus_vector_average_5_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_minus_vector_average_6_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_minus_vector_average_7_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_minus_vector_average_8_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_minus_vector_average_9_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_minus_vector_average_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
