-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity xFfastnms56 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_dst_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_dst_V_V_empty_n : IN STD_LOGIC;
    p_dst_V_V_read : OUT STD_LOGIC;
    p_strm_out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_strm_out_V_V_full_n : IN STD_LOGIC;
    p_strm_out_V_V_write : OUT STD_LOGIC;
    p_image_height_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    p_image_height_empty_n : IN STD_LOGIC;
    p_image_height_read : OUT STD_LOGIC;
    p_image_width_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    p_image_width_empty_n : IN STD_LOGIC;
    p_image_width_read : OUT STD_LOGIC );
end;


architecture behav of xFfastnms56 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_dst_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal exitcond_reg_1168 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_reg_1184 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_strm_out_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal tmp_46_i_i_reg_1210 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_i_i_reg_1210_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_image_height_blk_n : STD_LOGIC;
    signal p_image_width_blk_n : STD_LOGIC;
    signal p_i_i_reg_286 : STD_LOGIC_VECTOR (10 downto 0);
    signal src_buf_1_1_i_i_reg_354 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_1_0_i_i_reg_366 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_0_1_i_i_reg_378 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_0_0_i_i_reg_390 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_2_0_i_i_reg_402 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_2_1_i_i_reg_414 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0285_0_i_i_i_reg_426 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_0285_0_i_i_i_reg_426_pp1_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state10_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op166_read_state11 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal tmp_11_fu_438_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_11_reg_1000 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_12_fu_442_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_12_reg_1005 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_ind_2_V_1_load_reg_1012 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal row_ind_2_V_2_load_reg_1017 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_V_load_reg_1023 : STD_LOGIC_VECTOR (12 downto 0);
    signal init_row_ind_fu_461_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal init_buf_fu_494_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond1_i_i_fu_455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal op2_assign_cast_cast_fu_498_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal op2_assign_cast_cast_reg_1041 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_9_i_i_fu_501_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_i_i_reg_1047 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_9_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_13_fu_510_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_13_reg_1056 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_fu_514_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_reg_1060 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond3_fu_517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_reg_1065 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal col_V_1_fu_522_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_V_1_reg_1069 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal init_buf_1_fu_535_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal col_V_fu_546_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_V_reg_1082 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal buf_0_V_addr_1_reg_1087 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond2_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_559_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_3_reg_1103 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_fu_564_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_reg_1108 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_6_fu_567_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_6_reg_1113 : STD_LOGIC_VECTOR (11 downto 0);
    signal op2_assign_cast_fu_579_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal op2_assign_cast_reg_1118 : STD_LOGIC_VECTOR (12 downto 0);
    signal exitcond1_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_18_i_i_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_i_i_reg_1128 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_629_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_16_reg_1133 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i_i_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1138 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_i_i_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_i_i_reg_1143 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_i_i_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_i_i_reg_1148 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_671_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_18_reg_1153 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_fu_675_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_1158 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_fu_679_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_reg_1163 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1168_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1168_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1168_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_V_2_fu_688_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal col_V_2_reg_1172 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal tmp_23_i_i_fu_694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_i_i_reg_1177 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_i_i_reg_1177_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_i_i_reg_1177_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_715_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_21_reg_1188 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_21_reg_1188_pp1_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_21_reg_1188_pp1_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_46_i_i_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge1_i_i_fu_826_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge1_i_i_reg_1217 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal storemerge2_i_i_fu_833_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge2_i_i_reg_1222 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge3_i_i_fu_840_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge3_i_i_reg_1227 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_36_i_i_fu_847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_i_i_reg_1232 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_i_i_fu_853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_i_i_reg_1237 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_i_i_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_i_i_reg_1242 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_i_i_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_i_i_reg_1247 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_i_i_fu_871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_i_i_reg_1252 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_i_i_fu_877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_i_i_reg_1257 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_i_i_fu_883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_i_i_reg_1262 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_i_i_fu_889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_i_i_reg_1267 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_35_i_i_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_35_i_i_reg_1272 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge_i_i_fu_901_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge_i_i_reg_1277 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge4_i_i_fu_908_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge4_i_i_reg_1282 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge5_i_i_fu_915_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge5_i_i_reg_1287 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_V_fu_970_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state10 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal buf_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce0 : STD_LOGIC;
    signal buf_0_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_0_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce1 : STD_LOGIC;
    signal buf_0_V_we1 : STD_LOGIC;
    signal buf_0_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce0 : STD_LOGIC;
    signal buf_1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce1 : STD_LOGIC;
    signal buf_1_V_we1 : STD_LOGIC;
    signal buf_2_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce0 : STD_LOGIC;
    signal buf_2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce1 : STD_LOGIC;
    signal buf_2_V_we1 : STD_LOGIC;
    signal ap_phi_mux_val_assign_phi_fu_269_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal val_assign_reg_265 : STD_LOGIC_VECTOR (1 downto 0);
    signal init_buf1_i_i_reg_276 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_i_i_phi_fu_290_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_0151_1_i_i_reg_298 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal row_ind_1_V_1_reg_309 : STD_LOGIC_VECTOR (12 downto 0);
    signal zero_ind_V_reg_330 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_0_V_reg_319 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_13_i_i_reg_342 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_1_0_i_i_phi_fu_370_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_0_1_i_i_phi_fu_382_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_0_0_i_i_phi_fu_394_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_2_0_i_i_phi_fu_406_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_2_1_i_i_phi_fu_418_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_p_0285_0_i_i_i_phi_fu_430_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_12_i_i_fu_528_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_i_i_fu_552_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_i_i_fu_719_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_i_i_fu_726_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal row_ind_2_V_1_fu_98 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_0_V_1_fu_467_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_V_2_fu_102 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_V_fu_106 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_V_3_fu_110 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1_fu_583_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal op2_assign_fu_573_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_i_i_cast_fu_595_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_fu_614_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_1_fu_619_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_19_i_i_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_633_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_625_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_39_1_i_i_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_2_i_i_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_704_p5 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_7_fu_739_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_750_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_768_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_779_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_797_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_808_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_0_V_fu_761_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_1_V_fu_790_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_2_V_fu_819_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp4_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp8_fu_940_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_fu_936_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_2_fu_955_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component fast_ip_mux_32_8_dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component fast_ip_mux_32_13eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component xFfast7x755_buf_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buf_0_V_U : component xFfast7x755_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_0_V_address0,
        ce0 => buf_0_V_ce0,
        q0 => buf_0_V_q0,
        address1 => buf_0_V_address1,
        ce1 => buf_0_V_ce1,
        we1 => buf_0_V_we1,
        d1 => buf_0_V_d1);

    buf_1_V_U : component xFfast7x755_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_V_address0,
        ce0 => buf_1_V_ce0,
        q0 => buf_1_V_q0,
        address1 => buf_1_V_address1,
        ce1 => buf_1_V_ce1,
        we1 => buf_1_V_we1,
        d1 => p_dst_V_V_dout);

    buf_2_V_U : component xFfast7x755_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_V_address0,
        ce0 => buf_2_V_ce0,
        q0 => buf_2_V_q0,
        address1 => buf_2_V_address1,
        ce1 => buf_2_V_ce1,
        we1 => buf_2_V_we1,
        d1 => p_dst_V_V_dout);

    fast_ip_mux_32_8_dEe_U58 : component fast_ip_mux_32_8_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => tmp_14_reg_1060,
        dout => tmp_1_fu_583_p5);

    fast_ip_mux_32_13eOg_U59 : component fast_ip_mux_32_13eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        din2_WIDTH => 13,
        din3_WIDTH => 2,
        dout_WIDTH => 13)
    port map (
        din0 => zero_ind_V_reg_330,
        din1 => row_ind_0_V_reg_319,
        din2 => row_ind_1_V_1_reg_309,
        din3 => tmp_16_reg_1133,
        dout => tmp_4_fu_704_p5);

    fast_ip_mux_32_8_dEe_U60 : component fast_ip_mux_32_8_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => tmp_21_reg_1188_pp1_iter2_reg,
        dout => tmp_7_fu_739_p5);

    fast_ip_mux_32_8_dEe_U61 : component fast_ip_mux_32_8_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => tmp_19_reg_1158,
        dout => tmp_8_fu_750_p5);

    fast_ip_mux_32_8_dEe_U62 : component fast_ip_mux_32_8_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => tmp_21_reg_1188_pp1_iter2_reg,
        dout => tmp_9_fu_768_p5);

    fast_ip_mux_32_8_dEe_U63 : component fast_ip_mux_32_8_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => tmp_20_reg_1163,
        dout => tmp_s_fu_779_p5);

    fast_ip_mux_32_8_dEe_U64 : component fast_ip_mux_32_8_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => tmp_21_reg_1188_pp1_iter2_reg,
        dout => tmp_2_fu_797_p5);

    fast_ip_mux_32_8_dEe_U65 : component fast_ip_mux_32_8_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => tmp_18_reg_1153,
        dout => tmp_10_fu_808_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond1_fu_599_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((tmp_i_i_9_fu_505_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state4);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((tmp_i_i_9_fu_505_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state10))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((exitcond1_fu_599_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state10)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state10);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                elsif (((exitcond1_fu_599_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    init_buf1_i_i_reg_276_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                init_buf1_i_i_reg_276 <= init_buf_1_fu_535_p2;
            elsif (((exitcond1_i_i_fu_455_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                init_buf1_i_i_reg_276 <= init_buf_fu_494_p1;
            end if; 
        end if;
    end process;

    p_0151_1_i_i_reg_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_i_9_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                p_0151_1_i_i_reg_298 <= ap_const_lv11_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                p_0151_1_i_i_reg_298 <= col_V_reg_1082;
            end if; 
        end if;
    end process;

    p_0285_0_i_i_i_reg_426_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1168 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_0285_0_i_i_i_reg_426 <= col_V_2_reg_1172;
            elsif (((exitcond1_fu_599_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                p_0285_0_i_i_i_reg_426 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    p_i_i_reg_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_1065 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_i_i_reg_286 <= col_V_1_reg_1069;
            elsif (((tmp_i_i_9_fu_505_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                p_i_i_reg_286 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    row_ind_0_V_reg_319_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                row_ind_0_V_reg_319 <= row_ind_1_V_1_reg_309;
            elsif (((exitcond2_fu_541_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                row_ind_0_V_reg_319 <= row_ind_2_V_2_load_reg_1017;
            end if; 
        end if;
    end process;

    row_ind_1_V_1_reg_309_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                row_ind_1_V_1_reg_309 <= zero_ind_V_reg_330;
            elsif (((exitcond2_fu_541_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                row_ind_1_V_1_reg_309 <= row_ind_2_V_load_reg_1023;
            end if; 
        end if;
    end process;

    src_buf_0_0_i_i_reg_390_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1168_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_0_0_i_i_reg_390 <= storemerge_i_i_reg_1277;
            elsif (((exitcond1_fu_599_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_0_0_i_i_reg_390 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_0_1_i_i_reg_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1168_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_0_1_i_i_reg_378 <= storemerge1_i_i_reg_1217;
            elsif (((exitcond1_fu_599_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_0_1_i_i_reg_378 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_1_0_i_i_reg_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1168_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_1_0_i_i_reg_366 <= storemerge4_i_i_reg_1282;
            elsif (((exitcond1_fu_599_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_1_0_i_i_reg_366 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_1_1_i_i_reg_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1168_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_1_1_i_i_reg_354 <= storemerge2_i_i_reg_1222;
            elsif (((exitcond1_fu_599_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_1_1_i_i_reg_354 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_2_0_i_i_reg_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1168_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_2_0_i_i_reg_402 <= storemerge5_i_i_reg_1287;
            elsif (((exitcond1_fu_599_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_2_0_i_i_reg_402 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_2_1_i_i_reg_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1168_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_2_1_i_i_reg_414 <= storemerge3_i_i_reg_1227;
            elsif (((exitcond1_fu_599_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_2_1_i_i_reg_414 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    tmp_13_i_i_reg_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                tmp_13_i_i_reg_342 <= row_V_fu_970_p2;
            elsif (((exitcond2_fu_541_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                tmp_13_i_i_reg_342 <= ap_const_lv12_1;
            end if; 
        end if;
    end process;

    val_assign_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_i_fu_455_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                val_assign_reg_265 <= init_row_ind_fu_461_p2;
            elsif ((not(((p_image_width_empty_n = ap_const_logic_0) or (p_image_height_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                val_assign_reg_265 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    zero_ind_V_reg_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                zero_ind_V_reg_330 <= row_ind_0_V_reg_319;
            elsif (((exitcond2_fu_541_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                zero_ind_V_reg_330 <= row_ind_2_V_1_load_reg_1012;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_fu_541_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                buf_0_V_addr_1_reg_1087 <= tmp_7_i_i_fu_552_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_V_1_reg_1069 <= col_V_1_fu_522_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                col_V_2_reg_1172 <= col_V_2_fu_688_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                col_V_reg_1082 <= col_V_fu_546_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond3_reg_1065 <= exitcond3_fu_517_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                exitcond_reg_1168 <= exitcond_fu_683_p2;
                exitcond_reg_1168_pp1_iter1_reg <= exitcond_reg_1168;
                p_0285_0_i_i_i_reg_426_pp1_iter1_reg <= p_0285_0_i_i_i_reg_426;
                tmp_21_reg_1188_pp1_iter1_reg <= tmp_21_reg_1188;
                tmp_23_i_i_reg_1177_pp1_iter1_reg <= tmp_23_i_i_reg_1177;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                exitcond_reg_1168_pp1_iter2_reg <= exitcond_reg_1168_pp1_iter1_reg;
                exitcond_reg_1168_pp1_iter3_reg <= exitcond_reg_1168_pp1_iter2_reg;
                tmp_21_reg_1188_pp1_iter2_reg <= tmp_21_reg_1188_pp1_iter1_reg;
                tmp_23_i_i_reg_1177_pp1_iter2_reg <= tmp_23_i_i_reg_1177_pp1_iter1_reg;
                tmp_46_i_i_reg_1210_pp1_iter3_reg <= tmp_46_i_i_reg_1210;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1168_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                not_tmp_35_i_i_reg_1272 <= not_tmp_35_i_i_fu_895_p2;
                tmp_36_i_i_reg_1232 <= tmp_36_i_i_fu_847_p2;
                tmp_37_i_i_reg_1237 <= tmp_37_i_i_fu_853_p2;
                tmp_38_i_i_reg_1242 <= tmp_38_i_i_fu_859_p2;
                tmp_40_i_i_reg_1247 <= tmp_40_i_i_fu_865_p2;
                tmp_41_i_i_reg_1252 <= tmp_41_i_i_fu_871_p2;
                tmp_42_i_i_reg_1257 <= tmp_42_i_i_fu_877_p2;
                tmp_43_i_i_reg_1262 <= tmp_43_i_i_fu_883_p2;
                tmp_44_i_i_reg_1267 <= tmp_44_i_i_fu_889_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_i_fu_455_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    op2_assign_cast_cast_reg_1041(10 downto 0) <= op2_assign_cast_cast_fu_498_p1(10 downto 0);
                    tmp_9_i_i_reg_1047(1 downto 0) <= tmp_9_i_i_fu_501_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_fu_541_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                op2_assign_cast_reg_1118 <= op2_assign_cast_fu_579_p1;
                tmp_3_reg_1103 <= tmp_3_fu_559_p2;
                    tmp_5_reg_1108(10 downto 0) <= tmp_5_fu_564_p1(10 downto 0);
                tmp_6_reg_1113 <= tmp_6_fu_567_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_599_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                or_cond1_i_i_reg_1143 <= or_cond1_i_i_fu_653_p2;
                or_cond2_i_i_reg_1148 <= or_cond2_i_i_fu_665_p2;
                or_cond_i_i_reg_1138 <= or_cond_i_i_fu_641_p2;
                tmp_16_reg_1133 <= tmp_16_fu_629_p1;
                tmp_18_i_i_reg_1128 <= tmp_18_i_i_fu_604_p2;
                tmp_18_reg_1153 <= tmp_18_fu_671_p1;
                tmp_19_reg_1158 <= tmp_19_fu_675_p1;
                tmp_20_reg_1163 <= tmp_20_fu_679_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_683_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                or_cond_i_i_i_reg_1184 <= or_cond_i_i_i_fu_699_p2;
                tmp_21_reg_1188 <= tmp_21_fu_715_p1;
                tmp_23_i_i_reg_1177 <= tmp_23_i_i_fu_694_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_i_fu_455_p2 = ap_const_lv1_0) and (ap_phi_mux_val_assign_phi_fu_269_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_2_V_1_fu_98(1 downto 0) <= row_ind_0_V_1_fu_467_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    row_ind_2_V_1_load_reg_1012(1 downto 0) <= row_ind_2_V_1_fu_98(1 downto 0);
                    row_ind_2_V_2_load_reg_1017(1 downto 0) <= row_ind_2_V_2_fu_102(1 downto 0);
                    row_ind_2_V_load_reg_1023(1 downto 0) <= row_ind_2_V_fu_106(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_i_fu_455_p2 = ap_const_lv1_0) and (ap_phi_mux_val_assign_phi_fu_269_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_2_V_2_fu_102(1 downto 0) <= row_ind_0_V_1_fu_467_p1(1 downto 0);
                    row_ind_2_V_3_fu_110(1 downto 0) <= row_ind_0_V_1_fu_467_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_val_assign_phi_fu_269_p4 = ap_const_lv2_1)) and not((ap_phi_mux_val_assign_phi_fu_269_p4 = ap_const_lv2_0)) and (exitcond1_i_i_fu_455_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_2_V_fu_106(1 downto 0) <= row_ind_0_V_1_fu_467_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1168_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                storemerge1_i_i_reg_1217 <= storemerge1_i_i_fu_826_p3;
                storemerge2_i_i_reg_1222 <= storemerge2_i_i_fu_833_p3;
                storemerge3_i_i_reg_1227 <= storemerge3_i_i_fu_840_p3;
                storemerge4_i_i_reg_1282 <= storemerge4_i_i_fu_908_p3;
                storemerge5_i_i_reg_1287 <= storemerge5_i_i_fu_915_p3;
                storemerge_i_i_reg_1277 <= storemerge_i_i_fu_901_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((p_image_width_empty_n = ap_const_logic_0) or (p_image_height_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_11_reg_1000 <= tmp_11_fu_438_p1;
                tmp_12_reg_1005 <= tmp_12_fu_442_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_i_9_fu_505_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_13_reg_1056 <= tmp_13_fu_510_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_i_9_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_14_reg_1060 <= tmp_14_fu_514_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1168_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_46_i_i_reg_1210 <= tmp_46_i_i_fu_733_p2;
            end if;
        end if;
    end process;
    row_ind_2_V_1_load_reg_1012(12 downto 2) <= "00000000000";
    row_ind_2_V_2_load_reg_1017(12 downto 2) <= "00000000000";
    row_ind_2_V_load_reg_1023(12 downto 2) <= "00000000000";
    op2_assign_cast_cast_reg_1041(11) <= '0';
    tmp_9_i_i_reg_1047(31 downto 2) <= "000000000000000000000000000000";
    tmp_5_reg_1108(11) <= '0';
    row_ind_2_V_1_fu_98(12 downto 2) <= "00000000000";
    row_ind_2_V_2_fu_102(12 downto 2) <= "00000000000";
    row_ind_2_V_fu_106(12 downto 2) <= "00000000000";
    row_ind_2_V_3_fu_110(12 downto 2) <= "00000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_image_height_empty_n, p_image_width_empty_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, ap_CS_fsm_state2, exitcond1_i_i_fu_455_p2, tmp_i_i_9_fu_505_p2, ap_CS_fsm_state3, exitcond3_fu_517_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, exitcond2_fu_541_p2, exitcond1_fu_599_p2, ap_CS_fsm_state9, exitcond_fu_683_p2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter3, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((p_image_width_empty_n = ap_const_logic_0) or (p_image_height_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond1_i_i_fu_455_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((tmp_i_i_9_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((exitcond3_fu_517_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((exitcond3_fu_517_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state7 => 
                if (((exitcond2_fu_541_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state9 => 
                if (((exitcond1_fu_599_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((exitcond_fu_683_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1)) or ((exitcond_fu_683_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state15 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(p_dst_V_V_empty_n, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((p_dst_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_dst_V_V_empty_n, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((p_dst_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(p_dst_V_V_empty_n, p_strm_out_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, tmp_46_i_i_reg_1210_pp1_iter3_reg, ap_predicate_op166_read_state11)
    begin
                ap_block_pp1_stage0_01001 <= (((tmp_46_i_i_reg_1210_pp1_iter3_reg = ap_const_lv1_0) and (p_strm_out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1)) or ((p_dst_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op166_read_state11 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(p_dst_V_V_empty_n, p_strm_out_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, tmp_46_i_i_reg_1210_pp1_iter3_reg, ap_predicate_op166_read_state11)
    begin
                ap_block_pp1_stage0_11001 <= (((tmp_46_i_i_reg_1210_pp1_iter3_reg = ap_const_lv1_0) and (p_strm_out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1)) or ((p_dst_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op166_read_state11 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(p_dst_V_V_empty_n, p_strm_out_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, tmp_46_i_i_reg_1210_pp1_iter3_reg, ap_predicate_op166_read_state11)
    begin
                ap_block_pp1_stage0_subdone <= (((tmp_46_i_i_reg_1210_pp1_iter3_reg = ap_const_lv1_0) and (p_strm_out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1)) or ((p_dst_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op166_read_state11 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, p_image_height_empty_n, p_image_width_empty_n)
    begin
                ap_block_state1 <= ((p_image_width_empty_n = ap_const_logic_0) or (p_image_height_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp1_stage0_iter1_assign_proc : process(p_dst_V_V_empty_n, ap_predicate_op166_read_state11)
    begin
                ap_block_state11_pp1_stage0_iter1 <= ((p_dst_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op166_read_state11 = ap_const_boolean_1));
    end process;

        ap_block_state12_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state14_pp1_stage0_iter4_assign_proc : process(p_strm_out_V_V_full_n, tmp_46_i_i_reg_1210_pp1_iter3_reg)
    begin
                ap_block_state14_pp1_stage0_iter4 <= ((tmp_46_i_i_reg_1210_pp1_iter3_reg = ap_const_lv1_0) and (p_strm_out_V_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter1_assign_proc : process(p_dst_V_V_empty_n)
    begin
                ap_block_state5_pp0_stage0_iter1 <= (p_dst_V_V_empty_n = ap_const_logic_0);
    end process;


    ap_condition_pp0_exit_iter0_state4_assign_proc : process(exitcond3_fu_517_p2)
    begin
        if ((exitcond3_fu_517_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state10_assign_proc : process(exitcond_fu_683_p2)
    begin
        if ((exitcond_fu_683_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state10 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond1_fu_599_p2, ap_CS_fsm_state9)
    begin
        if (((exitcond1_fu_599_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_0285_0_i_i_i_phi_fu_430_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond_reg_1168, p_0285_0_i_i_i_reg_426, col_V_2_reg_1172)
    begin
        if (((exitcond_reg_1168 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_p_0285_0_i_i_i_phi_fu_430_p4 <= col_V_2_reg_1172;
        else 
            ap_phi_mux_p_0285_0_i_i_i_phi_fu_430_p4 <= p_0285_0_i_i_i_reg_426;
        end if; 
    end process;


    ap_phi_mux_p_i_i_phi_fu_290_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, p_i_i_reg_286, exitcond3_reg_1065, col_V_1_reg_1069)
    begin
        if (((exitcond3_reg_1065 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_p_i_i_phi_fu_290_p4 <= col_V_1_reg_1069;
        else 
            ap_phi_mux_p_i_i_phi_fu_290_p4 <= p_i_i_reg_286;
        end if; 
    end process;


    ap_phi_mux_src_buf_0_0_i_i_phi_fu_394_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, src_buf_0_0_i_i_reg_390, exitcond_reg_1168_pp1_iter3_reg, storemerge_i_i_reg_1277)
    begin
        if (((exitcond_reg_1168_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_0_0_i_i_phi_fu_394_p4 <= storemerge_i_i_reg_1277;
        else 
            ap_phi_mux_src_buf_0_0_i_i_phi_fu_394_p4 <= src_buf_0_0_i_i_reg_390;
        end if; 
    end process;


    ap_phi_mux_src_buf_0_1_i_i_phi_fu_382_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, src_buf_0_1_i_i_reg_378, exitcond_reg_1168_pp1_iter3_reg, storemerge1_i_i_reg_1217)
    begin
        if (((exitcond_reg_1168_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_0_1_i_i_phi_fu_382_p4 <= storemerge1_i_i_reg_1217;
        else 
            ap_phi_mux_src_buf_0_1_i_i_phi_fu_382_p4 <= src_buf_0_1_i_i_reg_378;
        end if; 
    end process;


    ap_phi_mux_src_buf_1_0_i_i_phi_fu_370_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, src_buf_1_0_i_i_reg_366, exitcond_reg_1168_pp1_iter3_reg, storemerge4_i_i_reg_1282)
    begin
        if (((exitcond_reg_1168_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_1_0_i_i_phi_fu_370_p4 <= storemerge4_i_i_reg_1282;
        else 
            ap_phi_mux_src_buf_1_0_i_i_phi_fu_370_p4 <= src_buf_1_0_i_i_reg_366;
        end if; 
    end process;


    ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, src_buf_1_1_i_i_reg_354, exitcond_reg_1168_pp1_iter3_reg, storemerge2_i_i_reg_1222)
    begin
        if (((exitcond_reg_1168_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4 <= storemerge2_i_i_reg_1222;
        else 
            ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4 <= src_buf_1_1_i_i_reg_354;
        end if; 
    end process;


    ap_phi_mux_src_buf_2_0_i_i_phi_fu_406_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, src_buf_2_0_i_i_reg_402, exitcond_reg_1168_pp1_iter3_reg, storemerge5_i_i_reg_1287)
    begin
        if (((exitcond_reg_1168_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_2_0_i_i_phi_fu_406_p4 <= storemerge5_i_i_reg_1287;
        else 
            ap_phi_mux_src_buf_2_0_i_i_phi_fu_406_p4 <= src_buf_2_0_i_i_reg_402;
        end if; 
    end process;


    ap_phi_mux_src_buf_2_1_i_i_phi_fu_418_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, src_buf_2_1_i_i_reg_414, exitcond_reg_1168_pp1_iter3_reg, storemerge3_i_i_reg_1227)
    begin
        if (((exitcond_reg_1168_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_2_1_i_i_phi_fu_418_p4 <= storemerge3_i_i_reg_1227;
        else 
            ap_phi_mux_src_buf_2_1_i_i_phi_fu_418_p4 <= src_buf_2_1_i_i_reg_414;
        end if; 
    end process;

    ap_phi_mux_val_assign_phi_fu_269_p4 <= val_assign_reg_265;

    ap_predicate_op166_read_state11_assign_proc : process(exitcond_reg_1168, or_cond_i_i_i_reg_1184)
    begin
                ap_predicate_op166_read_state11 <= ((or_cond_i_i_i_reg_1184 = ap_const_lv1_1) and (exitcond_reg_1168 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(exitcond1_fu_599_p2, ap_CS_fsm_state9)
    begin
        if (((exitcond1_fu_599_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_state7, ap_enable_reg_pp1_iter2, tmp_7_i_i_fu_552_p1, tmp_25_i_i_fu_726_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_0_V_address0 <= tmp_25_i_i_fu_726_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf_0_V_address0 <= tmp_7_i_i_fu_552_p1(11 - 1 downto 0);
        else 
            buf_0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, buf_0_V_addr_1_reg_1087, ap_CS_fsm_state8, tmp_12_i_i_fu_528_p1, tmp_24_i_i_fu_719_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_0_V_address1 <= tmp_24_i_i_fu_719_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            buf_0_V_address1 <= buf_0_V_addr_1_reg_1087;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_0_V_address1 <= tmp_12_i_i_fu_528_p1(11 - 1 downto 0);
        else 
            buf_0_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_state7, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_0_V_ce0 <= ap_const_logic_1;
        else 
            buf_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_0_V_ce1 <= ap_const_logic_1;
        else 
            buf_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_d1_assign_proc : process(p_dst_V_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_state8, tmp_1_fu_583_p5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            buf_0_V_d1 <= tmp_1_fu_583_p5;
        elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_0_V_d1 <= p_dst_V_V_dout;
        else 
            buf_0_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_0_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_reg_1168, or_cond_i_i_i_reg_1184, ap_block_pp1_stage0_11001, tmp_13_reg_1056, ap_block_pp0_stage0_11001, tmp_18_reg_1153, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((or_cond_i_i_i_reg_1184 = ap_const_lv1_1) and (exitcond_reg_1168 = ap_const_lv1_0) and (tmp_18_reg_1153 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_13_reg_1056 = ap_const_lv2_0)))) then 
            buf_0_V_we1 <= ap_const_logic_1;
        else 
            buf_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_state7, ap_enable_reg_pp1_iter2, tmp_7_i_i_fu_552_p1, tmp_25_i_i_fu_726_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_1_V_address0 <= tmp_25_i_i_fu_726_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf_1_V_address0 <= tmp_7_i_i_fu_552_p1(11 - 1 downto 0);
        else 
            buf_1_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_12_i_i_fu_528_p1, tmp_24_i_i_fu_719_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_1_V_address1 <= tmp_24_i_i_fu_719_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_1_V_address1 <= tmp_12_i_i_fu_528_p1(11 - 1 downto 0);
        else 
            buf_1_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_state7, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_1_V_ce0 <= ap_const_logic_1;
        else 
            buf_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_1_V_ce1 <= ap_const_logic_1;
        else 
            buf_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_reg_1168, or_cond_i_i_i_reg_1184, ap_block_pp1_stage0_11001, tmp_13_reg_1056, ap_block_pp0_stage0_11001, tmp_18_reg_1153)
    begin
        if ((((or_cond_i_i_i_reg_1184 = ap_const_lv1_1) and (exitcond_reg_1168 = ap_const_lv1_0) and (tmp_18_reg_1153 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_13_reg_1056 = ap_const_lv2_1)))) then 
            buf_1_V_we1 <= ap_const_logic_1;
        else 
            buf_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_state7, ap_enable_reg_pp1_iter2, tmp_7_i_i_fu_552_p1, tmp_25_i_i_fu_726_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_2_V_address0 <= tmp_25_i_i_fu_726_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf_2_V_address0 <= tmp_7_i_i_fu_552_p1(11 - 1 downto 0);
        else 
            buf_2_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_12_i_i_fu_528_p1, tmp_24_i_i_fu_719_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_2_V_address1 <= tmp_24_i_i_fu_719_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_2_V_address1 <= tmp_12_i_i_fu_528_p1(11 - 1 downto 0);
        else 
            buf_2_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_state7, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_2_V_ce0 <= ap_const_logic_1;
        else 
            buf_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_2_V_ce1 <= ap_const_logic_1;
        else 
            buf_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_reg_1168, or_cond_i_i_i_reg_1184, ap_block_pp1_stage0_11001, tmp_13_reg_1056, ap_block_pp0_stage0_11001, tmp_18_reg_1153)
    begin
        if (((not((tmp_18_reg_1153 = ap_const_lv2_0)) and not((tmp_18_reg_1153 = ap_const_lv2_1)) and (or_cond_i_i_i_reg_1184 = ap_const_lv1_1) and (exitcond_reg_1168 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not((tmp_13_reg_1056 = ap_const_lv2_0)) and not((tmp_13_reg_1056 = ap_const_lv2_1)) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_2_V_we1 <= ap_const_logic_1;
        else 
            buf_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_cop_0_V_fu_761_p3 <= 
        tmp_7_fu_739_p5 when (or_cond_i_i_reg_1138(0) = '1') else 
        tmp_8_fu_750_p5;
    buf_cop_1_V_fu_790_p3 <= 
        tmp_9_fu_768_p5 when (or_cond1_i_i_reg_1143(0) = '1') else 
        tmp_s_fu_779_p5;
    buf_cop_2_V_fu_819_p3 <= 
        tmp_2_fu_797_p5 when (or_cond2_i_i_reg_1148(0) = '1') else 
        tmp_10_fu_808_p5;
    col_V_1_fu_522_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_i_i_phi_fu_290_p4) + unsigned(ap_const_lv11_1));
    col_V_2_fu_688_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_0285_0_i_i_i_phi_fu_430_p4) + unsigned(ap_const_lv12_1));
    col_V_fu_546_p2 <= std_logic_vector(unsigned(p_0151_1_i_i_reg_298) + unsigned(ap_const_lv11_1));
    exitcond1_fu_599_p2 <= "1" when (tmp_13_i_i_reg_342 = tmp_6_reg_1113) else "0";
    exitcond1_i_i_fu_455_p2 <= "1" when (val_assign_reg_265 = ap_const_lv2_3) else "0";
    exitcond2_fu_541_p2 <= "1" when (p_0151_1_i_i_reg_298 = tmp_12_reg_1005) else "0";
    exitcond3_fu_517_p2 <= "1" when (ap_phi_mux_p_i_i_phi_fu_290_p4 = tmp_12_reg_1005) else "0";
    exitcond_fu_683_p2 <= "1" when (ap_phi_mux_p_0285_0_i_i_i_phi_fu_430_p4 = tmp_3_reg_1103) else "0";
    init_buf_1_fu_535_p2 <= std_logic_vector(unsigned(init_buf1_i_i_reg_276) + unsigned(ap_const_lv32_1));
    init_buf_fu_494_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_ind_2_V_3_fu_110),32));
    init_row_ind_fu_461_p2 <= std_logic_vector(unsigned(val_assign_reg_265) + unsigned(ap_const_lv2_1));
    not_tmp_35_i_i_fu_895_p2 <= "0" when (ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4 = ap_const_lv8_0) else "1";
    op2_assign_cast_cast_fu_498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_reg_1005),12));
        op2_assign_cast_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(op2_assign_fu_573_p2),13));

    op2_assign_fu_573_p2 <= std_logic_vector(unsigned(tmp_5_fu_564_p1) + unsigned(ap_const_lv12_FFF));
    or_cond1_i_i_fu_653_p2 <= (tmp_39_1_i_i_fu_647_p2 and tmp_19_i_i_fu_609_p2);
    or_cond2_i_i_fu_665_p2 <= (tmp_39_2_i_i_fu_659_p2 and tmp_19_i_i_fu_609_p2);
    or_cond_i_i_fu_641_p2 <= (tmp_19_i_i_fu_609_p2 and tmp_17_fu_633_p3);
    or_cond_i_i_i_fu_699_p2 <= (tmp_23_i_i_fu_694_p2 and tmp_18_i_i_reg_1128);

    p_dst_V_V_blk_n_assign_proc : process(p_dst_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond_reg_1168, or_cond_i_i_i_reg_1184)
    begin
        if ((((or_cond_i_i_i_reg_1184 = ap_const_lv1_1) and (exitcond_reg_1168 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_dst_V_V_blk_n <= p_dst_V_V_empty_n;
        else 
            p_dst_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_dst_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_predicate_op166_read_state11, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op166_read_state11 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_dst_V_V_read <= ap_const_logic_1;
        else 
            p_dst_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_image_height_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_image_height_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_image_height_blk_n <= p_image_height_empty_n;
        else 
            p_image_height_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_image_height_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_image_height_empty_n, p_image_width_empty_n)
    begin
        if ((not(((p_image_width_empty_n = ap_const_logic_0) or (p_image_height_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_image_height_read <= ap_const_logic_1;
        else 
            p_image_height_read <= ap_const_logic_0;
        end if; 
    end process;


    p_image_width_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_image_width_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_image_width_blk_n <= p_image_width_empty_n;
        else 
            p_image_width_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_image_width_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_image_height_empty_n, p_image_width_empty_n)
    begin
        if ((not(((p_image_width_empty_n = ap_const_logic_0) or (p_image_height_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_image_width_read <= ap_const_logic_1;
        else 
            p_image_width_read <= ap_const_logic_0;
        end if; 
    end process;


    p_strm_out_V_V_blk_n_assign_proc : process(p_strm_out_V_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, tmp_46_i_i_reg_1210_pp1_iter3_reg)
    begin
        if (((tmp_46_i_i_reg_1210_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            p_strm_out_V_V_blk_n <= p_strm_out_V_V_full_n;
        else 
            p_strm_out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_strm_out_V_V_din <= 
        ap_const_lv8_FF when (tmp_V_2_fu_955_p2(0) = '1') else 
        ap_const_lv8_0;

    p_strm_out_V_V_write_assign_proc : process(ap_enable_reg_pp1_iter4, tmp_46_i_i_reg_1210_pp1_iter3_reg, ap_block_pp1_stage0_11001)
    begin
        if (((tmp_46_i_i_reg_1210_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            p_strm_out_V_V_write <= ap_const_logic_1;
        else 
            p_strm_out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    r_V_1_fu_619_p2 <= std_logic_vector(unsigned(ap_const_lv13_2) - unsigned(r_V_fu_614_p2));
    r_V_fu_614_p2 <= std_logic_vector(unsigned(tmp_13_i_i_cast_fu_595_p1) - unsigned(op2_assign_cast_reg_1118));
    row_V_fu_970_p2 <= std_logic_vector(unsigned(tmp_13_i_i_reg_342) + unsigned(ap_const_lv12_1));
    row_ind_0_V_1_fu_467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(val_assign_reg_265),13));
    storemerge1_i_i_fu_826_p3 <= 
        buf_cop_0_V_fu_761_p3 when (tmp_23_i_i_reg_1177_pp1_iter2_reg(0) = '1') else 
        ap_phi_mux_src_buf_0_1_i_i_phi_fu_382_p4;
    storemerge2_i_i_fu_833_p3 <= 
        buf_cop_1_V_fu_790_p3 when (tmp_23_i_i_reg_1177_pp1_iter2_reg(0) = '1') else 
        ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4;
    storemerge3_i_i_fu_840_p3 <= 
        buf_cop_2_V_fu_819_p3 when (tmp_23_i_i_reg_1177_pp1_iter2_reg(0) = '1') else 
        ap_phi_mux_src_buf_2_1_i_i_phi_fu_418_p4;
    storemerge4_i_i_fu_908_p3 <= 
        storemerge2_i_i_fu_833_p3 when (tmp_46_i_i_reg_1210(0) = '1') else 
        ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4;
    storemerge5_i_i_fu_915_p3 <= 
        storemerge3_i_i_fu_840_p3 when (tmp_46_i_i_reg_1210(0) = '1') else 
        ap_phi_mux_src_buf_2_1_i_i_phi_fu_418_p4;
    storemerge_i_i_fu_901_p3 <= 
        storemerge1_i_i_fu_826_p3 when (tmp_46_i_i_reg_1210(0) = '1') else 
        ap_phi_mux_src_buf_0_1_i_i_phi_fu_382_p4;
    tmp3_fu_922_p2 <= (tmp_37_i_i_reg_1237 and tmp_36_i_i_reg_1232);
    tmp4_fu_926_p2 <= (tmp_40_i_i_reg_1247 and tmp_38_i_i_reg_1242);
    tmp5_fu_949_p2 <= (tmp7_fu_944_p2 and tmp6_fu_936_p2);
    tmp6_fu_936_p2 <= (tmp_42_i_i_reg_1257 and tmp_41_i_i_reg_1252);
    tmp7_fu_944_p2 <= (tmp_43_i_i_reg_1262 and tmp8_fu_940_p2);
    tmp8_fu_940_p2 <= (tmp_44_i_i_reg_1267 and not_tmp_35_i_i_reg_1272);
    tmp_11_fu_438_p1 <= p_image_height_dout(11 - 1 downto 0);
    tmp_12_fu_442_p1 <= p_image_width_dout(11 - 1 downto 0);
    tmp_12_i_i_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_i_i_reg_286),64));
    tmp_13_fu_510_p1 <= init_buf1_i_i_reg_276(2 - 1 downto 0);
    tmp_13_i_i_cast_fu_595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_i_i_reg_342),13));
    tmp_14_fu_514_p1 <= row_ind_2_V_2_load_reg_1017(2 - 1 downto 0);
    tmp_15_fu_625_p1 <= r_V_1_fu_619_p2(12 - 1 downto 0);
    tmp_16_fu_629_p1 <= r_V_1_fu_619_p2(2 - 1 downto 0);
    tmp_17_fu_633_p3 <= r_V_1_fu_619_p2(11 downto 11);
    tmp_18_fu_671_p1 <= row_ind_1_V_1_reg_309(2 - 1 downto 0);
    tmp_18_i_i_fu_604_p2 <= "1" when (unsigned(tmp_13_i_i_reg_342) < unsigned(tmp_5_reg_1108)) else "0";
    tmp_19_fu_675_p1 <= zero_ind_V_reg_330(2 - 1 downto 0);
    tmp_19_i_i_fu_609_p2 <= "1" when (signed(tmp_13_i_i_cast_fu_595_p1) > signed(op2_assign_cast_reg_1118)) else "0";
    tmp_20_fu_679_p1 <= row_ind_0_V_reg_319(2 - 1 downto 0);
    tmp_21_fu_715_p1 <= tmp_4_fu_704_p5(2 - 1 downto 0);
    tmp_23_i_i_fu_694_p2 <= "1" when (unsigned(ap_phi_mux_p_0285_0_i_i_i_phi_fu_430_p4) < unsigned(op2_assign_cast_cast_reg_1041)) else "0";
    tmp_24_i_i_fu_719_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0285_0_i_i_i_reg_426),64));
    tmp_25_i_i_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0285_0_i_i_i_reg_426_pp1_iter1_reg),64));
    tmp_36_i_i_fu_847_p2 <= "1" when (unsigned(ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4) > unsigned(ap_phi_mux_src_buf_1_0_i_i_phi_fu_370_p4)) else "0";
    tmp_37_i_i_fu_853_p2 <= "1" when (unsigned(ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4) > unsigned(storemerge2_i_i_fu_833_p3)) else "0";
    tmp_38_i_i_fu_859_p2 <= "1" when (unsigned(ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4) > unsigned(ap_phi_mux_src_buf_0_0_i_i_phi_fu_394_p4)) else "0";
    tmp_39_1_i_i_fu_647_p2 <= "1" when (signed(tmp_15_fu_625_p1) < signed(ap_const_lv12_1)) else "0";
    tmp_39_2_i_i_fu_659_p2 <= "1" when (signed(r_V_fu_614_p2) > signed(ap_const_lv13_0)) else "0";
    tmp_3_fu_559_p2 <= std_logic_vector(unsigned(op2_assign_cast_cast_reg_1041) + unsigned(ap_const_lv12_1));
    tmp_40_i_i_fu_865_p2 <= "1" when (unsigned(ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4) > unsigned(ap_phi_mux_src_buf_0_1_i_i_phi_fu_382_p4)) else "0";
    tmp_41_i_i_fu_871_p2 <= "1" when (unsigned(ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4) > unsigned(storemerge1_i_i_fu_826_p3)) else "0";
    tmp_42_i_i_fu_877_p2 <= "1" when (unsigned(ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4) > unsigned(ap_phi_mux_src_buf_2_0_i_i_phi_fu_406_p4)) else "0";
    tmp_43_i_i_fu_883_p2 <= "1" when (unsigned(ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4) > unsigned(ap_phi_mux_src_buf_2_1_i_i_phi_fu_418_p4)) else "0";
    tmp_44_i_i_fu_889_p2 <= "1" when (unsigned(ap_phi_mux_src_buf_1_1_i_i_phi_fu_358_p4) > unsigned(storemerge3_i_i_fu_840_p3)) else "0";
    tmp_46_i_i_fu_733_p2 <= "1" when (p_0285_0_i_i_i_reg_426_pp1_iter1_reg = ap_const_lv12_0) else "0";
    tmp_5_fu_564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_reg_1000),12));
    tmp_6_fu_567_p2 <= std_logic_vector(unsigned(tmp_5_fu_564_p1) + unsigned(ap_const_lv12_1));
    tmp_7_i_i_fu_552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0151_1_i_i_reg_298),64));
    tmp_9_i_i_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_ind_2_V_fu_106),32));
    tmp_V_2_fu_955_p2 <= (tmp_fu_930_p2 and tmp5_fu_949_p2);
    tmp_fu_930_p2 <= (tmp4_fu_926_p2 and tmp3_fu_922_p2);
    tmp_i_i_9_fu_505_p2 <= "1" when (signed(init_buf1_i_i_reg_276) < signed(tmp_9_i_i_reg_1047)) else "0";
end behav;
