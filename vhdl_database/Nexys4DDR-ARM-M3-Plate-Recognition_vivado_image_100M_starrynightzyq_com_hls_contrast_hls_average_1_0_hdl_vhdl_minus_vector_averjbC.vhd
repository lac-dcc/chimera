-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity minus_vector_averjbC_rom is 
    generic(
             DWIDTH     : integer := 1; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 784
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of minus_vector_averjbC_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 to 26=> "1", 27 => "0", 28 to 83=> "1", 84 => "0", 85 to 111=> "1", 112 to 131=> "0", 132 to 138=> "1", 
    139 to 158=> "0", 159 to 165=> "1", 166 to 185=> "0", 186 to 192=> "1", 193 to 213=> "0", 214 to 220=> "1", 221 to 240=> "0", 
    241 to 247=> "1", 248 to 267=> "0", 268 to 274=> "1", 275 to 295=> "0", 296 to 301=> "1", 302 to 322=> "0", 323 to 329=> "1", 
    330 to 349=> "0", 350 to 356=> "1", 357 to 377=> "0", 378 to 384=> "1", 385 to 404=> "0", 405 to 411=> "1", 412 to 432=> "0", 
    433 to 439=> "1", 440 to 459=> "0", 460 to 466=> "1", 467 to 487=> "0", 488 to 494=> "1", 495 to 515=> "0", 516 to 522=> "1", 
    523 to 542=> "0", 543 to 549=> "1", 550 to 570=> "0", 571 to 577=> "1", 578 to 598=> "0", 599 to 605=> "1", 606 to 626=> "0", 
    627 to 633=> "1", 634 to 654=> "0", 655 to 661=> "1", 662 to 682=> "0", 683 to 689=> "1", 690 to 710=> "0", 711 to 717=> "1", 
    718 to 738=> "0", 739 to 745=> "1", 746 to 766=> "0", 767 to 772=> "1", 773 to 783=> "0" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "block_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "block";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity minus_vector_averjbC is
    generic (
        DataWidth : INTEGER := 1;
        AddressRange : INTEGER := 784;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of minus_vector_averjbC is
    component minus_vector_averjbC_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    minus_vector_averjbC_rom_U :  component minus_vector_averjbC_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


