-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity resizeNNBilinear is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    imgInput_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
    imgInput_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
    imgInput_data_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    imgInput_data_V_empty_n : IN STD_LOGIC;
    imgInput_data_V_read : OUT STD_LOGIC;
    imgOutput_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
    imgOutput_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
    imgOutput_data_V_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    imgOutput_data_V_full_n : IN STD_LOGIC;
    imgOutput_data_V_write : OUT STD_LOGIC );
end;


architecture behav of resizeNNBilinear is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv34_0 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv34_1 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv20_FFFFF : STD_LOGIC_VECTOR (19 downto 0) := "11111111111111111111";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv42_0 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal imgInput_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_flatten_reg_2119 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal tmp_12_reg_2296 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_2296_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_2221 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_26_reg_2325 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_26_reg_2325_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal imgOutput_data_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter10 : STD_LOGIC := '0';
    signal tmp_10_reg_2230 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_2335 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_2335_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_363 : STD_LOGIC_VECTOR (33 downto 0);
    signal read_rows_count_reg_374 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_reg_385 : STD_LOGIC_VECTOR (30 downto 0);
    signal j3_reg_443 : STD_LOGIC_VECTOR (31 downto 0);
    signal j3_reg_443_pp1_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state12_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter3 : BOOLEAN;
    signal ap_predicate_op198_read_state16 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state18_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter7 : BOOLEAN;
    signal ap_block_state20_pp1_stage0_iter8 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter9 : BOOLEAN;
    signal ap_predicate_op408_write_state22 : BOOLEAN;
    signal ap_block_state22_pp1_stage0_iter10 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal j3_reg_443_pp1_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal j3_reg_443_pp1_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal j3_reg_443_pp1_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_xfUDivResize_fu_515_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_568 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_xfUDivResize_fu_515_ap_idle : STD_LOGIC;
    signal grp_xfUDivResize_fu_515_ap_ready : STD_LOGIC;
    signal grp_xfUDivResize_fu_515_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_scaleCompute_fu_532_ap_return : STD_LOGIC_VECTOR (41 downto 0);
    signal reg_572 : STD_LOGIC_VECTOR (41 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal tmp_12_reg_2296_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buffer_2_0_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal tmp_12_reg_2296_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_2246 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_2264 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_2329 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_2329_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buffer_2_0_V_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_0_0_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_0_0_V_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_1_0_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_1_0_V_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal xnew_fu_612_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal xnew_reg_2068 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_fu_621_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_reg_2073 : STD_LOGIC_VECTOR (15 downto 0);
    signal ynew_fu_626_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal ynew_reg_2094 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_15_fu_635_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_reg_2099 : STD_LOGIC_VECTOR (15 downto 0);
    signal scalex_V_fu_640_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal scalex_V_reg_2104 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaley_V_fu_646_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaley_V_reg_2109 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_fu_659_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal bound_reg_2114 : STD_LOGIC_VECTOR (33 downto 0);
    signal exitcond_flatten_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_flatten_next_fu_677_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal cond_mid2_fu_709_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_mid2_reg_2128 : STD_LOGIC_VECTOR (0 downto 0);
    signal read_rows_count_mid2_fu_717_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal line_buffer_0_0_V_s_reg_2137 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_1_0_V_s_reg_2142 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_1_fu_731_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal loop_row_count_fu_741_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_row_count_reg_2172 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal loop_col_count_fu_751_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_col_count_reg_2177 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_757_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_2182 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_i_fu_772_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_51_i_reg_2187 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_56_i_fu_784_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_56_i_reg_2193 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_59_i_fu_798_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_59_i_reg_2198 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_65_i_fu_814_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_65_i_reg_2203 : STD_LOGIC_VECTOR (53 downto 0);
    signal indexx_pre_V_1_i_fu_828_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal indexx_pre_V_1_i_reg_2208 : STD_LOGIC_VECTOR (41 downto 0);
    signal i_1_fu_851_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_reg_2216 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_4_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_reg_2235 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_i_fu_871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_i_reg_2241 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal op2_assign_fu_882_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_reg_2250 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_1_fu_888_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_1_reg_2258 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_904_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_52_reg_2268 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_53_fu_908_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_53_reg_2273 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_9_fu_911_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal r_V_9_reg_2278 : STD_LOGIC_VECTOR (42 downto 0);
    signal p_Val2_1_fu_933_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Val2_1_reg_2284 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_58_fu_940_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_58_reg_2291 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_12_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_2296_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_2296_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_2_fu_949_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_2_reg_2300 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal tmp_52_i_fu_959_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_i_reg_2305 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_2310 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_2315 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_fu_1059_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_71_reg_2320 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_71_reg_2320_pp1_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_71_reg_2320_pp1_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_71_reg_2320_pp1_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_71_reg_2320_pp1_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_26_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_26_reg_2325_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_1087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_2329_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_2329_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_2329_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_2329_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_fu_1108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_2335_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_2335_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_2335_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_2335_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_2335_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_2335_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_2335_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_reg_2339 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_i_fu_1127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_i_reg_2345 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_1198_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_reg_2350 : STD_LOGIC_VECTOR (16 downto 0);
    signal WeightX_0_V_reg_2358 : STD_LOGIC_VECTOR (11 downto 0);
    signal WeightX_0_V_reg_2358_pp1_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal WeightX_0_V_reg_2358_pp1_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal WeightX_0_V_reg_2358_pp1_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_2_0_V_1_gep_fu_307_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_0_0_V_1_gep_fu_328_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_1_0_V_1_gep_fu_342_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal WeightY_V_reg_2424 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_81_fu_1348_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_81_reg_2430 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_81_reg_2430_pp1_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_8_fu_1963_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_8_reg_2435 : STD_LOGIC_VECTOR (21 downto 0);
    signal lhs_V_6_fu_1370_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_6_reg_2440 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_3_fu_1378_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_3_reg_2445 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_4_fu_1388_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_4_reg_2450 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_4_fu_1392_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_4_reg_2455 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1969_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_2_reg_2460 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal p_Result_i_i_i_i17_2_fu_1401_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i17_2_reg_2465 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i17_2_reg_2465_pp1_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_6_1_fu_1441_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_6_1_reg_2470 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_3_1_fu_1449_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_3_1_reg_2475 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_4_1_fu_1459_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_4_1_reg_2480 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_4_1_fu_1463_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_4_1_reg_2485 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1977_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_12_1_reg_2490 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_i_i_i_i17_4_fu_1469_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i17_4_reg_2495 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i17_4_reg_2495_pp1_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_6_2_fu_1509_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_6_2_reg_2500 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_3_2_fu_1517_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_3_2_reg_2505 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_4_2_fu_1527_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_4_2_reg_2510 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_4_2_fu_1531_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_4_2_reg_2515 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1985_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_12_2_reg_2520 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1993_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_2_reg_2525 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal grp_fu_2012_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_2_1_reg_2530 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_2031_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_2_2_reg_2535 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_60_fu_1661_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_60_reg_2540 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_66_fu_1741_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_66_reg_2545 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_72_fu_1821_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_72_reg_2550 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_rows_count_1_fu_1882_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal read_rows_count_3_fu_1934_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal first_row_index_1_fu_1955_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state12 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter9 : STD_LOGIC := '0';
    signal line_buffer_0_0_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_0_0_V_ce0 : STD_LOGIC;
    signal line_buffer_0_0_V_we0 : STD_LOGIC;
    signal line_buffer_0_0_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_0_0_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_0_0_V_ce1 : STD_LOGIC;
    signal line_buffer_1_0_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_1_0_V_ce0 : STD_LOGIC;
    signal line_buffer_1_0_V_we0 : STD_LOGIC;
    signal line_buffer_1_0_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_1_0_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_1_0_V_ce1 : STD_LOGIC;
    signal line_buffer_2_0_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_2_0_V_ce0 : STD_LOGIC;
    signal line_buffer_2_0_V_we0 : STD_LOGIC;
    signal line_buffer_2_0_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_2_0_V_ce1 : STD_LOGIC;
    signal grp_xfUDivResize_fu_515_ap_start : STD_LOGIC;
    signal grp_xfUDivResize_fu_515_in_n : STD_LOGIC_VECTOR (59 downto 0);
    signal grp_xfUDivResize_fu_515_in_d : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_scaleCompute_fu_532_currindex : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaleCompute_fu_532_inscale_V : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaleCompute_fu_532_ap_ce : STD_LOGIC;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal read_rows_count_1_reg_396 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_rows_count_reg_408 : STD_LOGIC_VECTOR (31 downto 0);
    signal indexstores_reg_420 : STD_LOGIC_VECTOR (31 downto 0);
    signal i3_reg_432 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_j3_phi_fu_447_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_flag_write_2_phi_fu_460_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter0_flag_write_2_reg_455 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter1_flag_write_2_reg_455 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter2_flag_write_2_reg_455 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter3_flag_write_2_reg_455 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter4_flag_write_2_reg_455 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter5_flag_write_2_reg_455 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter0_P0Buf_0_V_3_reg_471 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter1_P0Buf_0_V_3_reg_471 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter2_P0Buf_0_V_3_reg_471 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter3_P0Buf_0_V_3_reg_471 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter4_P0Buf_0_V_3_reg_471 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter5_P0Buf_0_V_3_reg_471 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter6_P0Buf_0_V_3_reg_471 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter7_P0Buf_0_V_3_reg_471 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter0_P0Buf_V_1_1_reg_482 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter1_P0Buf_V_1_1_reg_482 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter2_P0Buf_V_1_1_reg_482 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter3_P0Buf_V_1_1_reg_482 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter4_P0Buf_V_1_1_reg_482 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter5_P0Buf_V_1_1_reg_482 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter6_P0Buf_V_1_1_reg_482 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter7_P0Buf_V_1_1_reg_482 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter0_P0Buf_V_0_1_reg_493 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter1_P0Buf_V_0_1_reg_493 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter2_P0Buf_V_0_1_reg_493 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter3_P0Buf_V_0_1_reg_493 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter4_P0Buf_V_0_1_reg_493 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter5_P0Buf_V_0_1_reg_493 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter6_P0Buf_V_0_1_reg_493 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter7_P0Buf_V_0_1_reg_493 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter0_P0Buf_1_V_3_reg_504 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter1_P0Buf_1_V_3_reg_504 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter2_P0Buf_1_V_3_reg_504 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter3_P0Buf_1_V_3_reg_504 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter4_P0Buf_1_V_3_reg_504 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter5_P0Buf_1_V_3_reg_504 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter6_P0Buf_1_V_3_reg_504 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_504 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_xfUDivResize_fu_515_ap_start_reg : STD_LOGIC := '0';
    signal tmp_11_fu_725_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_fu_1243_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_1261_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_1267_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_34_fu_1281_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_fu_1287_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_1301_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_fu_1307_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal read_pixel_V_1_fu_174 : STD_LOGIC_VECTOR (23 downto 0);
    signal indexy_V_fu_178 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_s_fu_1051_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal nextYScale_V_fu_182 : STD_LOGIC_VECTOR (16 downto 0);
    signal nextYScale_V_1_fu_1004_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_554_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_32_fu_652_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal j_cast_fu_663_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_691_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal cond_fu_703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_mid1_fu_697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_mid2_fu_683_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_5_fu_737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_cast_fu_762_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_9_fu_779_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_776_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_45_fu_792_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_5_fu_809_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_806_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_48_fu_822_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_53_i_fu_867_p0 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_53_i_fu_867_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_i_fu_900_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal sel_tmp_i_fu_916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_i_fu_921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_i_fu_926_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_63_fu_955_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_14_fu_982_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_16_fu_991_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_59_fu_975_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_997_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_69_fu_1019_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_19_fu_1028_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_60_i_fu_1022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_1037_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_65_fu_1012_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_1043_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_18_fu_1063_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal slt_fu_1067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_1072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_1083_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal brmerge_demorgan_fu_1092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_i_fu_1123_p0 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_62_i_fu_1123_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal sel_tmp5_i_fu_1132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_i_fu_1137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_i_fu_1142_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Val2_i_fu_1149_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_78_fu_1164_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_49_fu_1174_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_68_i_fu_1168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_1184_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_77_fu_1156_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_1190_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_79_fu_1206_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_80_fu_1218_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_4_i_fu_1210_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_8_i_fu_1222_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_42_cast_fu_1252_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_36_fu_1255_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_38_cast_fu_1272_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_33_fu_1275_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_31_cast_fu_1292_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_27_fu_1295_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_9_i_fu_1312_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_10_fu_1319_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal P1Buf_V_0_1_P0Buf_V_s_fu_1341_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal P1Buf_V_1_1_P0Buf_V_s_fu_1334_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_84_fu_1360_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_fu_1374_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_82_fu_1352_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_83_fu_1356_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_3_fu_1384_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_i_i_i_i_0_3_fu_1431_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_1_fu_1445_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_i_i_i_i_0_2_fu_1411_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i17_3_fu_1421_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_3_1_fu_1455_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_i_i_i_i_0_5_fu_1499_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_s_fu_1513_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_i_i_i_i_0_4_fu_1479_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i17_5_fu_1489_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_3_2_fu_1523_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal Wxy_V_fu_1537_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2003_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_2022_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_2041_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_s_27_fu_1589_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_90_cast_fu_1596_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_91_cast_fu_1599_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_3_fu_1611_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_86_fu_1607_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_85_fu_1603_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_88_fu_1625_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_54_fu_1637_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_47_fu_1631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_1647_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_87_fu_1617_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_1653_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_13_1_fu_1669_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_90_1_cast_fu_1676_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_91_1_cast_fu_1679_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_14_1_fu_1691_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_90_fu_1687_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_89_fu_1683_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_92_fu_1705_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_61_fu_1717_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_96_1_fu_1711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_1727_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_91_fu_1697_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_1733_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_13_2_fu_1749_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_90_2_cast_fu_1756_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_91_2_cast_fu_1759_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_14_2_fu_1771_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_94_fu_1767_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_93_fu_1763_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_96_fu_1785_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_67_fu_1797_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_96_2_fu_1791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_1807_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_95_fu_1777_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_fu_1813_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_fu_1843_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_1847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_1852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_1857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_1862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_rows_count_2_fu_1868_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_rows_count_2_s_fu_1874_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_1889_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal first_row_index_fu_1898_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal read_rows_count_2_fu_1910_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_1893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_1923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_1928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read_rows_count_4_fu_1916_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_1904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_1942_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_1947_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_8_fu_1963_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_8_fu_1963_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1969_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1969_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1969_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_3_cast_fu_1398_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1977_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1977_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1977_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1985_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1985_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1985_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1993_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1993_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1993_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_2_cast_fu_1552_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_2003_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2003_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2003_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_4_cast_fu_1556_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2012_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2012_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2012_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2022_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2022_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2022_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2031_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2031_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2031_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2041_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2041_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2041_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal grp_fu_1993_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1993_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2012_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2012_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2031_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2031_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_8_fu_1963_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_8_fu_1963_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_condition_631 : BOOLEAN;
    signal ap_condition_653 : BOOLEAN;
    signal ap_condition_78 : BOOLEAN;
    signal ap_condition_198 : BOOLEAN;
    signal ap_condition_191 : BOOLEAN;
    signal ap_condition_1789 : BOOLEAN;
    signal ap_condition_1793 : BOOLEAN;
    signal ap_condition_412 : BOOLEAN;
    signal ap_condition_423 : BOOLEAN;
    signal ap_condition_1802 : BOOLEAN;

    component xfUDivResize IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_n : IN STD_LOGIC_VECTOR (59 downto 0);
        in_d : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component scaleCompute IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        currindex : IN STD_LOGIC_VECTOR (31 downto 0);
        inscale_V : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (41 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component resize_accel_mul_g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component resize_accel_am_shbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component resize_accel_ama_ibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        din3 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component resize_accel_ama_jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        din3 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component resizeNNBilinear_dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    line_buffer_0_0_V_U : component resizeNNBilinear_dEe
    generic map (
        DataWidth => 24,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_0_0_V_address0,
        ce0 => line_buffer_0_0_V_ce0,
        we0 => line_buffer_0_0_V_we0,
        d0 => line_buffer_0_0_V_d0,
        q0 => line_buffer_0_0_V_q0,
        address1 => line_buffer_0_0_V_address1,
        ce1 => line_buffer_0_0_V_ce1,
        q1 => line_buffer_0_0_V_q1);

    line_buffer_1_0_V_U : component resizeNNBilinear_dEe
    generic map (
        DataWidth => 24,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_1_0_V_address0,
        ce0 => line_buffer_1_0_V_ce0,
        we0 => line_buffer_1_0_V_we0,
        d0 => line_buffer_1_0_V_d0,
        q0 => line_buffer_1_0_V_q0,
        address1 => line_buffer_1_0_V_address1,
        ce1 => line_buffer_1_0_V_ce1,
        q1 => line_buffer_1_0_V_q1);

    line_buffer_2_0_V_U : component resizeNNBilinear_dEe
    generic map (
        DataWidth => 24,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_2_0_V_address0,
        ce0 => line_buffer_2_0_V_ce0,
        we0 => line_buffer_2_0_V_we0,
        d0 => read_pixel_V_1_fu_174,
        q0 => line_buffer_2_0_V_q0,
        address1 => line_buffer_2_0_V_address1,
        ce1 => line_buffer_2_0_V_ce1,
        q1 => line_buffer_2_0_V_q1);

    grp_xfUDivResize_fu_515 : component xfUDivResize
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xfUDivResize_fu_515_ap_start,
        ap_done => grp_xfUDivResize_fu_515_ap_done,
        ap_idle => grp_xfUDivResize_fu_515_ap_idle,
        ap_ready => grp_xfUDivResize_fu_515_ap_ready,
        in_n => grp_xfUDivResize_fu_515_in_n,
        in_d => grp_xfUDivResize_fu_515_in_d,
        ap_return => grp_xfUDivResize_fu_515_ap_return);

    grp_scaleCompute_fu_532 : component scaleCompute
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        currindex => grp_scaleCompute_fu_532_currindex,
        inscale_V => grp_scaleCompute_fu_532_inscale_V,
        ap_return => grp_scaleCompute_fu_532_ap_return,
        ap_ce => grp_scaleCompute_fu_532_ap_ce);

    resize_accel_mul_g8j_U23 : component resize_accel_mul_g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 22)
    port map (
        din0 => p_Val2_8_fu_1963_p0,
        din1 => p_Val2_8_fu_1963_p1,
        dout => p_Val2_8_fu_1963_p2);

    resize_accel_am_shbi_U24 : component resize_accel_am_shbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_1969_p0,
        din1 => grp_fu_1969_p1,
        din2 => grp_fu_1969_p2,
        dout => grp_fu_1969_p3);

    resize_accel_am_shbi_U25 : component resize_accel_am_shbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_1977_p0,
        din1 => grp_fu_1977_p1,
        din2 => grp_fu_1977_p2,
        dout => grp_fu_1977_p3);

    resize_accel_am_shbi_U26 : component resize_accel_am_shbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_1985_p0,
        din1 => grp_fu_1985_p1,
        din2 => grp_fu_1985_p2,
        dout => grp_fu_1985_p3);

    resize_accel_ama_ibs_U27 : component resize_accel_ama_ibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 12,
        din3_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        din0 => grp_fu_1993_p0,
        din1 => grp_fu_1993_p1,
        din2 => grp_fu_1993_p2,
        din3 => grp_fu_2003_p4,
        dout => grp_fu_1993_p4);

    resize_accel_ama_jbC_U28 : component resize_accel_ama_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        din3_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_2003_p0,
        din1 => grp_fu_2003_p1,
        din2 => grp_fu_2003_p2,
        din3 => r_V_2_reg_2460,
        dout => grp_fu_2003_p4);

    resize_accel_ama_ibs_U29 : component resize_accel_ama_ibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 12,
        din3_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        din0 => grp_fu_2012_p0,
        din1 => grp_fu_2012_p1,
        din2 => grp_fu_2012_p2,
        din3 => grp_fu_2022_p4,
        dout => grp_fu_2012_p4);

    resize_accel_ama_jbC_U30 : component resize_accel_ama_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        din3_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_2022_p0,
        din1 => grp_fu_2022_p1,
        din2 => grp_fu_2022_p2,
        din3 => r_V_12_1_reg_2490,
        dout => grp_fu_2022_p4);

    resize_accel_ama_ibs_U31 : component resize_accel_ama_ibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 12,
        din3_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        din0 => grp_fu_2031_p0,
        din1 => grp_fu_2031_p1,
        din2 => grp_fu_2031_p2,
        din3 => grp_fu_2041_p4,
        dout => grp_fu_2031_p4);

    resize_accel_ama_jbC_U32 : component resize_accel_ama_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        din3_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_2041_p0,
        din1 => grp_fu_2041_p1,
        din2 => grp_fu_2041_p2,
        din3 => r_V_12_2_reg_2520,
        dout => grp_fu_2041_p4);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_xfUDivResize_fu_515_ap_done = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state4);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_xfUDivResize_fu_515_ap_done = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state12) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state12)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state12);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    ap_enable_reg_pp1_iter10 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_xfUDivResize_fu_515_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xfUDivResize_fu_515_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_xfUDivResize_fu_515_ap_done = ap_const_logic_1)))) then 
                    grp_xfUDivResize_fu_515_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_xfUDivResize_fu_515_ap_ready = ap_const_logic_1)) then 
                    grp_xfUDivResize_fu_515_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp1_iter2_flag_write_2_reg_455_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_631)) then
                if (((tmp_4_reg_2221 = ap_const_lv1_1) and (tmp_12_reg_2296 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter2_flag_write_2_reg_455 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_flag_write_2_reg_455 <= ap_phi_reg_pp1_iter1_flag_write_2_reg_455;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter3_flag_write_2_reg_455_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_653)) then 
                    ap_phi_reg_pp1_iter3_flag_write_2_reg_455 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter3_flag_write_2_reg_455 <= ap_phi_reg_pp1_iter2_flag_write_2_reg_455;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter5_flag_write_2_reg_455_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_78)) then 
                    ap_phi_reg_pp1_iter5_flag_write_2_reg_455 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter5_flag_write_2_reg_455 <= ap_phi_reg_pp1_iter4_flag_write_2_reg_455;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter7_P0Buf_0_V_3_reg_471_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_191)) then 
                    ap_phi_reg_pp1_iter7_P0Buf_0_V_3_reg_471 <= line_buffer_0_0_V_q0;
                elsif ((ap_const_boolean_1 = ap_condition_198)) then 
                    ap_phi_reg_pp1_iter7_P0Buf_0_V_3_reg_471 <= line_buffer_2_0_V_q0;
                elsif (((tmp_7_reg_2246 = ap_const_lv1_1) and (tmp_12_reg_2296_pp1_iter5_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter7_P0Buf_0_V_3_reg_471 <= line_buffer_1_0_V_q0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter7_P0Buf_0_V_3_reg_471 <= ap_phi_reg_pp1_iter6_P0Buf_0_V_3_reg_471;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_504_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_191)) then 
                    ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_504 <= line_buffer_0_0_V_q1;
                elsif ((ap_const_boolean_1 = ap_condition_198)) then 
                    ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_504 <= line_buffer_2_0_V_q1;
                elsif (((tmp_7_reg_2246 = ap_const_lv1_1) and (tmp_12_reg_2296_pp1_iter5_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_504 <= line_buffer_1_0_V_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_504 <= ap_phi_reg_pp1_iter6_P0Buf_1_V_3_reg_504;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter7_P0Buf_V_0_1_reg_493_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_191)) then 
                    ap_phi_reg_pp1_iter7_P0Buf_V_0_1_reg_493 <= line_buffer_2_0_V_q0;
                elsif ((ap_const_boolean_1 = ap_condition_198)) then 
                    ap_phi_reg_pp1_iter7_P0Buf_V_0_1_reg_493 <= line_buffer_1_0_V_q0;
                elsif (((tmp_7_reg_2246 = ap_const_lv1_1) and (tmp_12_reg_2296_pp1_iter5_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter7_P0Buf_V_0_1_reg_493 <= line_buffer_0_0_V_q0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter7_P0Buf_V_0_1_reg_493 <= ap_phi_reg_pp1_iter6_P0Buf_V_0_1_reg_493;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter7_P0Buf_V_1_1_reg_482_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_191)) then 
                    ap_phi_reg_pp1_iter7_P0Buf_V_1_1_reg_482 <= line_buffer_2_0_V_q1;
                elsif ((ap_const_boolean_1 = ap_condition_198)) then 
                    ap_phi_reg_pp1_iter7_P0Buf_V_1_1_reg_482 <= line_buffer_1_0_V_q1;
                elsif (((tmp_7_reg_2246 = ap_const_lv1_1) and (tmp_12_reg_2296_pp1_iter5_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter7_P0Buf_V_1_1_reg_482 <= line_buffer_0_0_V_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter7_P0Buf_V_1_1_reg_482 <= ap_phi_reg_pp1_iter6_P0Buf_V_1_1_reg_482;
                end if;
            end if; 
        end if;
    end process;

    i3_reg_432_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                i3_reg_432 <= i_1_reg_2216;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                i3_reg_432 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    indexstores_reg_420_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                indexstores_reg_420 <= first_row_index_1_fu_1955_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                indexstores_reg_420 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    indexy_V_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_reg_2296 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                indexy_V_fu_178 <= p_Val2_s_fu_1051_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                indexy_V_fu_178 <= ap_const_lv17_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_363_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_672_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                indvar_flatten_reg_363 <= indvar_flatten_next_fu_677_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_xfUDivResize_fu_515_ap_done = ap_const_logic_1))) then 
                indvar_flatten_reg_363 <= ap_const_lv34_0;
            end if; 
        end if;
    end process;

    j3_reg_443_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_reg_2296 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                j3_reg_443 <= j_2_reg_2300;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                j3_reg_443 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    j_reg_385_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_672_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                j_reg_385 <= j_1_fu_731_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_xfUDivResize_fu_515_ap_done = ap_const_logic_1))) then 
                j_reg_385 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    nextYScale_V_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_reg_2296 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                nextYScale_V_fu_182 <= nextYScale_V_1_fu_1004_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                nextYScale_V_fu_182 <= ap_const_lv17_0;
            end if; 
        end if;
    end process;

    output_rows_count_reg_408_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                output_rows_count_reg_408 <= output_rows_count_1_fu_1882_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                output_rows_count_reg_408 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    read_rows_count_1_reg_396_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                read_rows_count_1_reg_396 <= read_rows_count_3_fu_1934_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                read_rows_count_1_reg_396 <= ap_const_lv32_2;
            end if; 
        end if;
    end process;

    read_rows_count_reg_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_672_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                read_rows_count_reg_374 <= read_rows_count_mid2_fu_717_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_xfUDivResize_fu_515_ap_done = ap_const_logic_1))) then 
                read_rows_count_reg_374 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_reg_2296_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                WeightX_0_V_reg_2358 <= p_Val2_8_i_fu_1222_p2(23 downto 12);
                r_V_reg_2350 <= r_V_fu_1198_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                WeightX_0_V_reg_2358_pp1_iter5_reg <= WeightX_0_V_reg_2358;
                WeightX_0_V_reg_2358_pp1_iter6_reg <= WeightX_0_V_reg_2358_pp1_iter5_reg;
                WeightX_0_V_reg_2358_pp1_iter7_reg <= WeightX_0_V_reg_2358_pp1_iter6_reg;
                j3_reg_443_pp1_iter2_reg <= j3_reg_443_pp1_iter1_reg;
                j3_reg_443_pp1_iter3_reg <= j3_reg_443_pp1_iter2_reg;
                j3_reg_443_pp1_iter4_reg <= j3_reg_443_pp1_iter3_reg;
                or_cond4_reg_2335_pp1_iter2_reg <= or_cond4_reg_2335;
                or_cond4_reg_2335_pp1_iter3_reg <= or_cond4_reg_2335_pp1_iter2_reg;
                or_cond4_reg_2335_pp1_iter4_reg <= or_cond4_reg_2335_pp1_iter3_reg;
                or_cond4_reg_2335_pp1_iter5_reg <= or_cond4_reg_2335_pp1_iter4_reg;
                or_cond4_reg_2335_pp1_iter6_reg <= or_cond4_reg_2335_pp1_iter5_reg;
                or_cond4_reg_2335_pp1_iter7_reg <= or_cond4_reg_2335_pp1_iter6_reg;
                or_cond4_reg_2335_pp1_iter8_reg <= or_cond4_reg_2335_pp1_iter7_reg;
                or_cond4_reg_2335_pp1_iter9_reg <= or_cond4_reg_2335_pp1_iter8_reg;
                or_cond_26_reg_2325_pp1_iter2_reg <= or_cond_26_reg_2325;
                or_cond_26_reg_2325_pp1_iter3_reg <= or_cond_26_reg_2325_pp1_iter2_reg;
                p_Result_i_i_i_i17_2_reg_2465_pp1_iter8_reg <= p_Result_i_i_i_i17_2_reg_2465;
                p_Result_i_i_i_i17_4_reg_2495_pp1_iter8_reg <= p_Result_i_i_i_i17_4_reg_2495;
                tmp_12_reg_2296_pp1_iter2_reg <= tmp_12_reg_2296_pp1_iter1_reg;
                tmp_12_reg_2296_pp1_iter3_reg <= tmp_12_reg_2296_pp1_iter2_reg;
                tmp_12_reg_2296_pp1_iter4_reg <= tmp_12_reg_2296_pp1_iter3_reg;
                tmp_12_reg_2296_pp1_iter5_reg <= tmp_12_reg_2296_pp1_iter4_reg;
                tmp_42_reg_2329_pp1_iter2_reg <= tmp_42_reg_2329;
                tmp_42_reg_2329_pp1_iter3_reg <= tmp_42_reg_2329_pp1_iter2_reg;
                tmp_42_reg_2329_pp1_iter4_reg <= tmp_42_reg_2329_pp1_iter3_reg;
                tmp_42_reg_2329_pp1_iter5_reg <= tmp_42_reg_2329_pp1_iter4_reg;
                tmp_42_reg_2329_pp1_iter6_reg <= tmp_42_reg_2329_pp1_iter5_reg;
                tmp_71_reg_2320_pp1_iter2_reg <= tmp_71_reg_2320;
                tmp_71_reg_2320_pp1_iter3_reg <= tmp_71_reg_2320_pp1_iter2_reg;
                tmp_71_reg_2320_pp1_iter4_reg <= tmp_71_reg_2320_pp1_iter3_reg;
                tmp_71_reg_2320_pp1_iter5_reg <= tmp_71_reg_2320_pp1_iter4_reg;
                tmp_81_reg_2430_pp1_iter8_reg <= tmp_81_reg_2430;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_reg_2296_pp1_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                WeightY_V_reg_2424 <= p_Val2_10_fu_1319_p2(23 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter1_P0Buf_0_V_3_reg_471 <= ap_phi_reg_pp1_iter0_P0Buf_0_V_3_reg_471;
                ap_phi_reg_pp1_iter1_P0Buf_1_V_3_reg_504 <= ap_phi_reg_pp1_iter0_P0Buf_1_V_3_reg_504;
                ap_phi_reg_pp1_iter1_P0Buf_V_0_1_reg_493 <= ap_phi_reg_pp1_iter0_P0Buf_V_0_1_reg_493;
                ap_phi_reg_pp1_iter1_P0Buf_V_1_1_reg_482 <= ap_phi_reg_pp1_iter0_P0Buf_V_1_1_reg_482;
                ap_phi_reg_pp1_iter1_flag_write_2_reg_455 <= ap_phi_reg_pp1_iter0_flag_write_2_reg_455;
                j_2_reg_2300 <= j_2_fu_949_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter2_P0Buf_0_V_3_reg_471 <= ap_phi_reg_pp1_iter1_P0Buf_0_V_3_reg_471;
                ap_phi_reg_pp1_iter2_P0Buf_1_V_3_reg_504 <= ap_phi_reg_pp1_iter1_P0Buf_1_V_3_reg_504;
                ap_phi_reg_pp1_iter2_P0Buf_V_0_1_reg_493 <= ap_phi_reg_pp1_iter1_P0Buf_V_0_1_reg_493;
                ap_phi_reg_pp1_iter2_P0Buf_V_1_1_reg_482 <= ap_phi_reg_pp1_iter1_P0Buf_V_1_1_reg_482;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter3_P0Buf_0_V_3_reg_471 <= ap_phi_reg_pp1_iter2_P0Buf_0_V_3_reg_471;
                ap_phi_reg_pp1_iter3_P0Buf_1_V_3_reg_504 <= ap_phi_reg_pp1_iter2_P0Buf_1_V_3_reg_504;
                ap_phi_reg_pp1_iter3_P0Buf_V_0_1_reg_493 <= ap_phi_reg_pp1_iter2_P0Buf_V_0_1_reg_493;
                ap_phi_reg_pp1_iter3_P0Buf_V_1_1_reg_482 <= ap_phi_reg_pp1_iter2_P0Buf_V_1_1_reg_482;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter4_P0Buf_0_V_3_reg_471 <= ap_phi_reg_pp1_iter3_P0Buf_0_V_3_reg_471;
                ap_phi_reg_pp1_iter4_P0Buf_1_V_3_reg_504 <= ap_phi_reg_pp1_iter3_P0Buf_1_V_3_reg_504;
                ap_phi_reg_pp1_iter4_P0Buf_V_0_1_reg_493 <= ap_phi_reg_pp1_iter3_P0Buf_V_0_1_reg_493;
                ap_phi_reg_pp1_iter4_P0Buf_V_1_1_reg_482 <= ap_phi_reg_pp1_iter3_P0Buf_V_1_1_reg_482;
                ap_phi_reg_pp1_iter4_flag_write_2_reg_455 <= ap_phi_reg_pp1_iter3_flag_write_2_reg_455;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter5_P0Buf_0_V_3_reg_471 <= ap_phi_reg_pp1_iter4_P0Buf_0_V_3_reg_471;
                ap_phi_reg_pp1_iter5_P0Buf_1_V_3_reg_504 <= ap_phi_reg_pp1_iter4_P0Buf_1_V_3_reg_504;
                ap_phi_reg_pp1_iter5_P0Buf_V_0_1_reg_493 <= ap_phi_reg_pp1_iter4_P0Buf_V_0_1_reg_493;
                ap_phi_reg_pp1_iter5_P0Buf_V_1_1_reg_482 <= ap_phi_reg_pp1_iter4_P0Buf_V_1_1_reg_482;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter6_P0Buf_0_V_3_reg_471 <= ap_phi_reg_pp1_iter5_P0Buf_0_V_3_reg_471;
                ap_phi_reg_pp1_iter6_P0Buf_1_V_3_reg_504 <= ap_phi_reg_pp1_iter5_P0Buf_1_V_3_reg_504;
                ap_phi_reg_pp1_iter6_P0Buf_V_0_1_reg_493 <= ap_phi_reg_pp1_iter5_P0Buf_V_0_1_reg_493;
                ap_phi_reg_pp1_iter6_P0Buf_V_1_1_reg_482 <= ap_phi_reg_pp1_iter5_P0Buf_V_1_1_reg_482;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_xfUDivResize_fu_515_ap_done = ap_const_logic_1))) then
                    bound_reg_2114(32 downto 1) <= bound_fu_659_p1(32 downto 1);
                    scalex_V_reg_2104(31 downto 1) <= scalex_V_fu_640_p2(31 downto 1);
                    scaley_V_reg_2109(31 downto 1) <= scaley_V_fu_646_p2(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_672_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                cond_mid2_reg_2128 <= cond_mid2_fu_709_p3;
                line_buffer_0_0_V_s_reg_2137 <= tmp_11_fu_725_p1(10 - 1 downto 0);
                line_buffer_1_0_V_s_reg_2142 <= tmp_11_fu_725_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_reg_2119 <= exitcond_flatten_fu_672_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                i_1_reg_2216 <= i_1_fu_851_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                    indexx_pre_V_1_i_reg_2208(41 downto 22) <= indexx_pre_V_1_i_fu_828_p3(41 downto 22);
                loop_col_count_reg_2177 <= loop_col_count_fu_751_p3;
                loop_row_count_reg_2172 <= loop_row_count_fu_741_p3;
                tmp_1_reg_2182 <= tmp_1_fu_757_p2;
                    tmp_51_i_reg_2187(24 downto 0) <= tmp_51_i_fu_772_p1(24 downto 0);
                    tmp_56_i_reg_2193(53 downto 22) <= tmp_56_i_fu_784_p3(53 downto 22);
                    tmp_59_i_reg_2198(41 downto 22) <= tmp_59_i_fu_798_p3(41 downto 22);
                    tmp_65_i_reg_2203(53 downto 22) <= tmp_65_i_fu_814_p3(53 downto 22);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                j3_reg_443_pp1_iter1_reg <= j3_reg_443;
                tmp_12_reg_2296 <= tmp_12_fu_944_p2;
                tmp_12_reg_2296_pp1_iter1_reg <= tmp_12_reg_2296;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond4_reg_2335_pp1_iter6_reg = ap_const_lv1_1) and (tmp_10_reg_2230 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                    lhs_V_6_1_reg_2470(7 downto 0) <= lhs_V_6_1_fu_1441_p1(7 downto 0);
                    lhs_V_6_2_reg_2500(7 downto 0) <= lhs_V_6_2_fu_1509_p1(7 downto 0);
                    lhs_V_6_reg_2440(7 downto 0) <= lhs_V_6_fu_1370_p1(7 downto 0);
                p_Result_i_i_i_i17_2_reg_2465 <= P1Buf_V_0_1_P0Buf_V_s_fu_1341_p3(15 downto 8);
                p_Result_i_i_i_i17_4_reg_2495 <= P1Buf_V_0_1_P0Buf_V_s_fu_1341_p3(23 downto 16);
                p_Val2_8_reg_2435 <= p_Val2_8_fu_1963_p2;
                r_V_3_1_reg_2475 <= r_V_3_1_fu_1449_p2;
                r_V_3_2_reg_2505 <= r_V_3_2_fu_1517_p2;
                r_V_3_reg_2445 <= r_V_3_fu_1378_p2;
                r_V_4_1_reg_2485 <= r_V_4_1_fu_1463_p2;
                r_V_4_2_reg_2515 <= r_V_4_2_fu_1531_p2;
                r_V_4_reg_2455 <= r_V_4_fu_1392_p2;
                    rhs_V_4_1_reg_2480(7 downto 0) <= rhs_V_4_1_fu_1459_p1(7 downto 0);
                    rhs_V_4_2_reg_2510(7 downto 0) <= rhs_V_4_2_fu_1527_p1(7 downto 0);
                    rhs_V_4_reg_2450(7 downto 0) <= rhs_V_4_fu_1388_p1(7 downto 0);
                tmp_81_reg_2430 <= tmp_81_fu_1348_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                op2_assign_1_reg_2258 <= op2_assign_1_fu_888_p2;
                op2_assign_reg_2250 <= op2_assign_fu_882_p2;
                p_Val2_1_reg_2284 <= p_Val2_1_fu_933_p3;
                r_V_9_reg_2278 <= r_V_9_fu_911_p2;
                tmp_2_reg_2264 <= tmp_2_fu_894_p2;
                tmp_52_reg_2268 <= tmp_52_fu_904_p1;
                tmp_53_reg_2273 <= tmp_53_fu_908_p1;
                tmp_58_reg_2291 <= tmp_58_fu_940_p1;
                tmp_7_reg_2246 <= tmp_7_fu_876_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_10_reg_2230 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                or_cond4_reg_2335 <= or_cond4_fu_1108_p2;
                tmp_42_reg_2329 <= tmp_42_fu_1087_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_reg_2296 = ap_const_lv1_1) and (tmp_4_reg_2221 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                or_cond_26_reg_2325 <= or_cond_26_fu_1078_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond4_reg_2335_pp1_iter7_reg = ap_const_lv1_1) and (tmp_10_reg_2230 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                p_Val2_2_1_reg_2530 <= grp_fu_2012_p4;
                p_Val2_2_2_reg_2535 <= grp_fu_2031_p4;
                p_Val2_2_reg_2525 <= grp_fu_1993_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond4_reg_2335_pp1_iter6_reg = ap_const_lv1_1) and (tmp_10_reg_2230 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                r_V_12_1_reg_2490 <= grp_fu_1977_p3;
                r_V_12_2_reg_2520 <= grp_fu_1985_p3;
                r_V_2_reg_2460 <= grp_fu_1969_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_op198_read_state16 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                read_pixel_V_1_fu_174 <= imgInput_data_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_xfUDivResize_fu_515_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_xfUDivResize_fu_515_ap_done = ap_const_logic_1)))) then
                reg_568 <= grp_xfUDivResize_fu_515_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((tmp_12_reg_2296_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then
                reg_572 <= grp_scaleCompute_fu_532_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_8_fu_846_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                tmp_10_reg_2230 <= tmp_10_fu_862_p2;
                tmp_4_reg_2221 <= tmp_4_fu_857_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_xfUDivResize_fu_515_ap_done = ap_const_logic_1))) then
                tmp_15_reg_2099 <= tmp_15_fu_635_p1;
                    ynew_reg_2094(59 downto 28) <= ynew_fu_626_p3(59 downto 28);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_fu_944_p2 = ap_const_lv1_1) and (tmp_4_reg_2221 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_20_reg_2310 <= tmp_20_fu_965_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_fu_944_p2 = ap_const_lv1_1) and (tmp_10_reg_2230 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_44_reg_2315 <= tmp_44_fu_970_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_fu_944_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_52_i_reg_2305 <= tmp_52_i_fu_959_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                tmp_57_i_reg_2241 <= tmp_57_i_fu_871_p2;
                tmp_57_reg_2235 <= grp_fu_554_p1(41 downto 41);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond4_reg_2335_pp1_iter8_reg = ap_const_lv1_1) and (tmp_10_reg_2230 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_60_reg_2540 <= tmp_60_fu_1661_p3;
                tmp_66_reg_2545 <= tmp_66_fu_1741_p3;
                tmp_72_reg_2550 <= tmp_72_fu_1821_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_reg_2296_pp1_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_66_i_reg_2345 <= tmp_66_i_fu_1127_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_reg_2296 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_71_reg_2320 <= tmp_71_fu_1059_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_reg_2296_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_76_reg_2339 <= grp_fu_554_p1(41 downto 41);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                tmp_reg_2073 <= tmp_fu_621_p1;
                    xnew_reg_2068(59 downto 28) <= xnew_fu_612_p3(59 downto 28);
            end if;
        end if;
    end process;
    xnew_reg_2068(27 downto 0) <= "0000000000000000000000000000";
    ynew_reg_2094(27 downto 0) <= "0000000000000000000000000000";
    scalex_V_reg_2104(0) <= '0';
    scaley_V_reg_2109(0) <= '0';
    bound_reg_2114(0) <= '0';
    bound_reg_2114(33) <= '0';
    tmp_51_i_reg_2187(42 downto 25) <= "000000000000000000";
    tmp_56_i_reg_2193(21 downto 0) <= "0000000000000000000000";
    tmp_59_i_reg_2198(21 downto 0) <= "0000000000000000000000";
    tmp_65_i_reg_2203(21 downto 0) <= "0000000000000000000000";
    indexx_pre_V_1_i_reg_2208(21 downto 0) <= "0000000000000000000000";
    lhs_V_6_reg_2440(8) <= '0';
    rhs_V_4_reg_2450(8) <= '0';
    lhs_V_6_1_reg_2470(8) <= '0';
    rhs_V_4_1_reg_2480(8) <= '0';
    lhs_V_6_2_reg_2500(8) <= '0';
    rhs_V_4_2_reg_2510(8) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp1_iter10, ap_CS_fsm_state2, grp_xfUDivResize_fu_515_ap_done, ap_CS_fsm_state3, exitcond_flatten_fu_672_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, tmp_8_fu_846_p2, tmp_12_fu_944_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_xfUDivResize_fu_515_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_xfUDivResize_fu_515_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((exitcond_flatten_fu_672_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((exitcond_flatten_fu_672_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((tmp_8_fu_846_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((tmp_12_fu_944_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter9 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter9 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1)) or ((tmp_12_fu_944_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    OP2_V_2_cast_fu_1552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wxy_V_fu_1537_p4),22));
    OP2_V_3_cast_fu_1398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(WeightY_V_reg_2424),21));
    OP2_V_4_cast_fu_1556_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(WeightX_0_V_reg_2358_pp1_iter7_reg),21));
    P1Buf_V_0_1_P0Buf_V_s_fu_1341_p3 <= 
        ap_phi_reg_pp1_iter7_P0Buf_0_V_3_reg_471 when (tmp_42_reg_2329_pp1_iter6_reg(0) = '1') else 
        ap_phi_reg_pp1_iter7_P0Buf_V_0_1_reg_493;
    P1Buf_V_1_1_P0Buf_V_s_fu_1334_p3 <= 
        ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_504 when (tmp_42_reg_2329_pp1_iter6_reg(0) = '1') else 
        ap_phi_reg_pp1_iter7_P0Buf_V_1_1_reg_482;
    Wxy_V_fu_1537_p4 <= p_Val2_8_reg_2435(21 downto 10);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(8);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state23 <= ap_CS_fsm(11);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(imgInput_data_V_empty_n, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_2119)
    begin
                ap_block_pp0_stage0_11001 <= ((exitcond_flatten_reg_2119 = ap_const_lv1_0) and (imgInput_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(imgInput_data_V_empty_n, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_2119)
    begin
                ap_block_pp0_stage0_subdone <= ((exitcond_flatten_reg_2119 = ap_const_lv1_0) and (imgInput_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(imgInput_data_V_empty_n, imgOutput_data_V_full_n, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter10, ap_predicate_op198_read_state16, ap_predicate_op408_write_state22)
    begin
                ap_block_pp1_stage0_01001 <= (((imgOutput_data_V_full_n = ap_const_logic_0) and (ap_predicate_op408_write_state22 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1)) or ((imgInput_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op198_read_state16 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(imgInput_data_V_empty_n, imgOutput_data_V_full_n, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter10, ap_predicate_op198_read_state16, ap_predicate_op408_write_state22)
    begin
                ap_block_pp1_stage0_11001 <= (((imgOutput_data_V_full_n = ap_const_logic_0) and (ap_predicate_op408_write_state22 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1)) or ((imgInput_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op198_read_state16 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(imgInput_data_V_empty_n, imgOutput_data_V_full_n, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter10, ap_predicate_op198_read_state16, ap_predicate_op408_write_state22)
    begin
                ap_block_pp1_stage0_subdone <= (((imgOutput_data_V_full_n = ap_const_logic_0) and (ap_predicate_op408_write_state22 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1)) or ((imgInput_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op198_read_state16 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1)));
    end process;

        ap_block_state12_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state16_pp1_stage0_iter4_assign_proc : process(imgInput_data_V_empty_n, ap_predicate_op198_read_state16)
    begin
                ap_block_state16_pp1_stage0_iter4 <= ((imgInput_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op198_read_state16 = ap_const_boolean_1));
    end process;

        ap_block_state17_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state22_pp1_stage0_iter10_assign_proc : process(imgOutput_data_V_full_n, ap_predicate_op408_write_state22)
    begin
                ap_block_state22_pp1_stage0_iter10 <= ((imgOutput_data_V_full_n = ap_const_logic_0) and (ap_predicate_op408_write_state22 = ap_const_boolean_1));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter1_assign_proc : process(imgInput_data_V_empty_n, exitcond_flatten_reg_2119)
    begin
                ap_block_state5_pp0_stage0_iter1 <= ((exitcond_flatten_reg_2119 = ap_const_lv1_0) and (imgInput_data_V_empty_n = ap_const_logic_0));
    end process;


    ap_condition_1789_assign_proc : process(ap_block_pp1_stage0, tmp_12_reg_2296_pp1_iter4_reg, ap_enable_reg_pp1_iter5)
    begin
                ap_condition_1789 <= ((tmp_12_reg_2296_pp1_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1));
    end process;


    ap_condition_1793_assign_proc : process(tmp_7_reg_2246, tmp_2_reg_2264, tmp_42_reg_2329_pp1_iter4_reg)
    begin
                ap_condition_1793 <= ((tmp_2_reg_2264 = ap_const_lv1_1) and (tmp_42_reg_2329_pp1_iter4_reg = ap_const_lv1_0) and (tmp_7_reg_2246 = ap_const_lv1_0));
    end process;


    ap_condition_1802_assign_proc : process(ap_block_pp1_stage0, tmp_7_reg_2246, tmp_12_reg_2296_pp1_iter4_reg, ap_enable_reg_pp1_iter5)
    begin
                ap_condition_1802 <= ((tmp_12_reg_2296_pp1_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_7_reg_2246 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1));
    end process;


    ap_condition_191_assign_proc : process(tmp_12_reg_2296_pp1_iter5_reg, tmp_7_reg_2246, tmp_2_reg_2264)
    begin
                ap_condition_191 <= ((tmp_12_reg_2296_pp1_iter5_reg = ap_const_lv1_1) and (tmp_2_reg_2264 = ap_const_lv1_0) and (tmp_7_reg_2246 = ap_const_lv1_0));
    end process;


    ap_condition_198_assign_proc : process(tmp_12_reg_2296_pp1_iter5_reg, tmp_7_reg_2246, tmp_2_reg_2264)
    begin
                ap_condition_198 <= ((tmp_2_reg_2264 = ap_const_lv1_1) and (tmp_12_reg_2296_pp1_iter5_reg = ap_const_lv1_1) and (tmp_7_reg_2246 = ap_const_lv1_0));
    end process;


    ap_condition_412_assign_proc : process(tmp_7_reg_2246, tmp_2_reg_2264, tmp_12_reg_2296_pp1_iter4_reg, tmp_42_reg_2329_pp1_iter4_reg)
    begin
                ap_condition_412 <= ((tmp_12_reg_2296_pp1_iter4_reg = ap_const_lv1_1) and (tmp_42_reg_2329_pp1_iter4_reg = ap_const_lv1_0) and (tmp_2_reg_2264 = ap_const_lv1_0) and (tmp_7_reg_2246 = ap_const_lv1_0));
    end process;


    ap_condition_423_assign_proc : process(tmp_7_reg_2246, tmp_2_reg_2264, tmp_12_reg_2296_pp1_iter4_reg)
    begin
                ap_condition_423 <= ((tmp_12_reg_2296_pp1_iter4_reg = ap_const_lv1_1) and (tmp_2_reg_2264 = ap_const_lv1_1) and (tmp_7_reg_2246 = ap_const_lv1_0));
    end process;


    ap_condition_631_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
                ap_condition_631 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001));
    end process;


    ap_condition_653_assign_proc : process(tmp_4_reg_2221, or_cond_26_reg_2325, tmp_12_reg_2296_pp1_iter1_reg)
    begin
                ap_condition_653 <= ((tmp_12_reg_2296_pp1_iter1_reg = ap_const_lv1_1) and (or_cond_26_reg_2325 = ap_const_lv1_0) and (tmp_4_reg_2221 = ap_const_lv1_0));
    end process;


    ap_condition_78_assign_proc : process(tmp_12_reg_2296_pp1_iter3_reg, tmp_4_reg_2221, or_cond_26_reg_2325_pp1_iter3_reg)
    begin
                ap_condition_78 <= ((or_cond_26_reg_2325_pp1_iter3_reg = ap_const_lv1_1) and (tmp_12_reg_2296_pp1_iter3_reg = ap_const_lv1_1) and (tmp_4_reg_2221 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state4_assign_proc : process(exitcond_flatten_fu_672_p2)
    begin
        if ((exitcond_flatten_fu_672_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state12_assign_proc : process(tmp_12_fu_944_p2)
    begin
        if ((tmp_12_fu_944_p2 = ap_const_lv1_0)) then 
            ap_condition_pp1_exit_iter0_state12 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state7, tmp_8_fu_846_p2)
    begin
        if ((((tmp_8_fu_846_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter10, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter9)
    begin
        if (((ap_enable_reg_pp1_iter10 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_flag_write_2_phi_fu_460_p6 <= ap_phi_reg_pp1_iter5_flag_write_2_reg_455;

    ap_phi_mux_j3_phi_fu_447_p4_assign_proc : process(ap_block_pp1_stage0, tmp_12_reg_2296, j3_reg_443, ap_CS_fsm_pp1_stage0, j_2_reg_2300, ap_enable_reg_pp1_iter1)
    begin
        if (((tmp_12_reg_2296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_j3_phi_fu_447_p4 <= j_2_reg_2300;
        else 
            ap_phi_mux_j3_phi_fu_447_p4 <= j3_reg_443;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_P0Buf_0_V_3_reg_471 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_P0Buf_1_V_3_reg_504 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_P0Buf_V_0_1_reg_493 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_P0Buf_V_1_1_reg_482 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_flag_write_2_reg_455 <= "X";

    ap_predicate_op198_read_state16_assign_proc : process(tmp_12_reg_2296_pp1_iter3_reg, tmp_4_reg_2221, or_cond_26_reg_2325_pp1_iter3_reg)
    begin
                ap_predicate_op198_read_state16 <= ((or_cond_26_reg_2325_pp1_iter3_reg = ap_const_lv1_1) and (tmp_12_reg_2296_pp1_iter3_reg = ap_const_lv1_1) and (tmp_4_reg_2221 = ap_const_lv1_0));
    end process;


    ap_predicate_op408_write_state22_assign_proc : process(tmp_10_reg_2230, or_cond4_reg_2335_pp1_iter9_reg)
    begin
                ap_predicate_op408_write_state22 <= ((or_cond4_reg_2335_pp1_iter9_reg = ap_const_lv1_1) and (tmp_10_reg_2230 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state7, tmp_8_fu_846_p2)
    begin
        if (((tmp_8_fu_846_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bound_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_652_p3),34));
    brmerge_demorgan_fu_1092_p2 <= (tmp_4_reg_2221 and tmp_42_fu_1087_p2);
    cond_fu_703_p2 <= "1" when (read_rows_count_reg_374 = ap_const_lv2_0) else "0";
    cond_mid1_fu_697_p2 <= "1" when (i_fu_691_p2 = ap_const_lv2_0) else "0";
    cond_mid2_fu_709_p3 <= 
        cond_fu_703_p2 when (tmp_9_fu_667_p2(0) = '1') else 
        cond_mid1_fu_697_p2;
    exitcond_flatten_fu_672_p2 <= "1" when (indvar_flatten_reg_363 = bound_reg_2114) else "0";
    first_row_index_1_fu_1955_p3 <= 
        indexstores_reg_420 when (or_cond_fu_1942_p2(0) = '1') else 
        newSel_fu_1947_p3;
    first_row_index_fu_1898_p2 <= std_logic_vector(unsigned(indexstores_reg_420) + unsigned(ap_const_lv32_1));
    grp_fu_1969_p0 <= lhs_V_3_fu_1384_p1(8 - 1 downto 0);
    grp_fu_1969_p1 <= lhs_V_6_fu_1370_p1(8 - 1 downto 0);
    grp_fu_1969_p2 <= OP2_V_3_cast_fu_1398_p1(12 - 1 downto 0);
    grp_fu_1977_p0 <= lhs_V_3_1_fu_1455_p1(8 - 1 downto 0);
    grp_fu_1977_p1 <= lhs_V_6_1_fu_1441_p1(8 - 1 downto 0);
    grp_fu_1977_p2 <= OP2_V_3_cast_fu_1398_p1(12 - 1 downto 0);
    grp_fu_1985_p0 <= lhs_V_3_2_fu_1523_p1(8 - 1 downto 0);
    grp_fu_1985_p1 <= lhs_V_6_2_fu_1509_p1(8 - 1 downto 0);
    grp_fu_1985_p2 <= OP2_V_3_cast_fu_1398_p1(12 - 1 downto 0);
    grp_fu_1993_p0 <= grp_fu_1993_p00(9 - 1 downto 0);
    grp_fu_1993_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_3_reg_2445),10));
    grp_fu_1993_p1 <= grp_fu_1993_p10(9 - 1 downto 0);
    grp_fu_1993_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_4_reg_2455),10));
    grp_fu_1993_p2 <= OP2_V_2_cast_fu_1552_p1(12 - 1 downto 0);
    grp_fu_2003_p0 <= rhs_V_4_reg_2450(8 - 1 downto 0);
    grp_fu_2003_p1 <= lhs_V_6_reg_2440(8 - 1 downto 0);
    grp_fu_2003_p2 <= OP2_V_4_cast_fu_1556_p1(12 - 1 downto 0);
    grp_fu_2012_p0 <= grp_fu_2012_p00(9 - 1 downto 0);
    grp_fu_2012_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_3_1_reg_2475),10));
    grp_fu_2012_p1 <= grp_fu_2012_p10(9 - 1 downto 0);
    grp_fu_2012_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_4_1_reg_2485),10));
    grp_fu_2012_p2 <= OP2_V_2_cast_fu_1552_p1(12 - 1 downto 0);
    grp_fu_2022_p0 <= rhs_V_4_1_reg_2480(8 - 1 downto 0);
    grp_fu_2022_p1 <= lhs_V_6_1_reg_2470(8 - 1 downto 0);
    grp_fu_2022_p2 <= OP2_V_4_cast_fu_1556_p1(12 - 1 downto 0);
    grp_fu_2031_p0 <= grp_fu_2031_p00(9 - 1 downto 0);
    grp_fu_2031_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_3_2_reg_2505),10));
    grp_fu_2031_p1 <= grp_fu_2031_p10(9 - 1 downto 0);
    grp_fu_2031_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_4_2_reg_2515),10));
    grp_fu_2031_p2 <= OP2_V_2_cast_fu_1552_p1(12 - 1 downto 0);
    grp_fu_2041_p0 <= rhs_V_4_2_reg_2510(8 - 1 downto 0);
    grp_fu_2041_p1 <= lhs_V_6_2_reg_2500(8 - 1 downto 0);
    grp_fu_2041_p2 <= OP2_V_4_cast_fu_1556_p1(12 - 1 downto 0);
    grp_fu_554_p1 <= grp_scaleCompute_fu_532_ap_return;

    grp_scaleCompute_fu_532_ap_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_state10, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            grp_scaleCompute_fu_532_ap_ce <= ap_const_logic_1;
        else 
            grp_scaleCompute_fu_532_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_scaleCompute_fu_532_currindex_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_CS_fsm_state7, tmp_8_fu_846_p2, tmp_12_fu_944_p2, ap_enable_reg_pp1_iter0, output_rows_count_reg_408, ap_phi_mux_j3_phi_fu_447_p4)
    begin
        if (((tmp_12_fu_944_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_scaleCompute_fu_532_currindex <= ap_phi_mux_j3_phi_fu_447_p4;
        elsif (((tmp_8_fu_846_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            grp_scaleCompute_fu_532_currindex <= output_rows_count_reg_408;
        else 
            grp_scaleCompute_fu_532_currindex <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_scaleCompute_fu_532_inscale_V_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, scalex_V_reg_2104, scaley_V_reg_2109, ap_CS_fsm_state7, tmp_8_fu_846_p2, tmp_12_fu_944_p2, ap_enable_reg_pp1_iter0)
    begin
        if (((tmp_12_fu_944_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_scaleCompute_fu_532_inscale_V <= scalex_V_reg_2104;
        elsif (((tmp_8_fu_846_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            grp_scaleCompute_fu_532_inscale_V <= scaley_V_reg_2109;
        else 
            grp_scaleCompute_fu_532_inscale_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_xfUDivResize_fu_515_ap_start <= grp_xfUDivResize_fu_515_ap_start_reg;

    grp_xfUDivResize_fu_515_in_d_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, tmp_reg_2073, tmp_15_reg_2099)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_xfUDivResize_fu_515_in_d <= tmp_15_reg_2099;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_xfUDivResize_fu_515_in_d <= tmp_reg_2073;
        else 
            grp_xfUDivResize_fu_515_in_d <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_xfUDivResize_fu_515_in_n_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, xnew_reg_2068, ynew_reg_2094)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_xfUDivResize_fu_515_in_n <= ynew_reg_2094;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_xfUDivResize_fu_515_in_n <= xnew_reg_2068;
        else 
            grp_xfUDivResize_fu_515_in_n <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_1_fu_851_p2 <= std_logic_vector(unsigned(i3_reg_432) + unsigned(ap_const_lv32_1));
    i_fu_691_p2 <= std_logic_vector(unsigned(read_rows_count_reg_374) + unsigned(ap_const_lv2_1));

    imgInput_data_V_blk_n_assign_proc : process(imgInput_data_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_2119, ap_enable_reg_pp1_iter4, ap_block_pp1_stage0, tmp_12_reg_2296_pp1_iter3_reg, tmp_4_reg_2221, or_cond_26_reg_2325_pp1_iter3_reg)
    begin
        if ((((or_cond_26_reg_2325_pp1_iter3_reg = ap_const_lv1_1) and (tmp_12_reg_2296_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_4_reg_2221 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1)) or ((exitcond_flatten_reg_2119 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            imgInput_data_V_blk_n <= imgInput_data_V_empty_n;
        else 
            imgInput_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    imgInput_data_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_2119, ap_enable_reg_pp1_iter4, ap_predicate_op198_read_state16, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op198_read_state16 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((exitcond_flatten_reg_2119 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            imgInput_data_V_read <= ap_const_logic_1;
        else 
            imgInput_data_V_read <= ap_const_logic_0;
        end if; 
    end process;


    imgOutput_data_V_blk_n_assign_proc : process(imgOutput_data_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter10, tmp_10_reg_2230, or_cond4_reg_2335_pp1_iter9_reg)
    begin
        if (((or_cond4_reg_2335_pp1_iter9_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_10_reg_2230 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1))) then 
            imgOutput_data_V_blk_n <= imgOutput_data_V_full_n;
        else 
            imgOutput_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    imgOutput_data_V_din <= ((tmp_72_reg_2550 & tmp_66_reg_2545) & tmp_60_reg_2540);

    imgOutput_data_V_write_assign_proc : process(ap_enable_reg_pp1_iter10, ap_predicate_op408_write_state22, ap_block_pp1_stage0_11001)
    begin
        if (((ap_predicate_op408_write_state22 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            imgOutput_data_V_write <= ap_const_logic_1;
        else 
            imgOutput_data_V_write <= ap_const_logic_0;
        end if; 
    end process;

    indexx_pre_V_1_i_fu_828_p3 <= (tmp_48_fu_822_p2 & ap_const_lv22_0);
    indvar_flatten_next_fu_677_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_363) + unsigned(ap_const_lv34_1));
    j_1_fu_731_p2 <= std_logic_vector(unsigned(j_mid2_fu_683_p3) + unsigned(ap_const_lv31_1));
    j_2_fu_949_p2 <= std_logic_vector(unsigned(ap_phi_mux_j3_phi_fu_447_p4) + unsigned(ap_const_lv32_1));
    j_cast_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_385),32));
    j_mid2_fu_683_p3 <= 
        j_reg_385 when (tmp_9_fu_667_p2(0) = '1') else 
        ap_const_lv31_0;
    lhs_V_3_1_fu_1455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i_0_2_fu_1411_p4),9));
    lhs_V_3_2_fu_1523_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i_0_4_fu_1479_p4),9));
    lhs_V_3_fu_1384_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_82_fu_1352_p1),9));
    lhs_V_6_1_fu_1441_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i17_2_fu_1401_p4),9));
    lhs_V_6_2_fu_1509_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i17_4_fu_1469_p4),9));
    lhs_V_6_fu_1370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_81_fu_1348_p1),9));
    line_buffer_0_0_V_1_gep_fu_328_p3 <= tmp_26_fu_1243_p1(10 - 1 downto 0);

    line_buffer_0_0_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, tmp_7_reg_2246, tmp_2_reg_2264, line_buffer_0_0_V_s_reg_2137, tmp_12_reg_2296_pp1_iter4_reg, tmp_42_reg_2329_pp1_iter4_reg, line_buffer_0_0_V_1_gep_fu_328_p3, ap_enable_reg_pp1_iter5, ap_phi_mux_flag_write_2_phi_fu_460_p6, tmp_26_fu_1243_p1, tmp_39_fu_1287_p1)
    begin
        if (((tmp_12_reg_2296_pp1_iter4_reg = ap_const_lv1_1) and (tmp_7_reg_2246 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_42_reg_2329_pp1_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            line_buffer_0_0_V_address0 <= line_buffer_0_0_V_1_gep_fu_328_p3;
        elsif (((ap_phi_mux_flag_write_2_phi_fu_460_p6 = ap_const_lv1_1) and (tmp_2_reg_2264 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_7_reg_2246 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            line_buffer_0_0_V_address0 <= tmp_39_fu_1287_p1(10 - 1 downto 0);
        elsif (((tmp_12_reg_2296_pp1_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_2_reg_2264 = ap_const_lv1_0) and (tmp_7_reg_2246 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            line_buffer_0_0_V_address0 <= tmp_26_fu_1243_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_0_0_V_address0 <= line_buffer_0_0_V_s_reg_2137;
        else 
            line_buffer_0_0_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    line_buffer_0_0_V_address1_assign_proc : process(tmp_7_reg_2246, tmp_2_reg_2264, tmp_42_reg_2329_pp1_iter4_reg, tmp_37_fu_1261_p1, tmp_28_fu_1301_p1, ap_condition_1789)
    begin
        if ((ap_const_boolean_1 = ap_condition_1789)) then
            if (((tmp_7_reg_2246 = ap_const_lv1_1) and (tmp_42_reg_2329_pp1_iter4_reg = ap_const_lv1_0))) then 
                line_buffer_0_0_V_address1 <= tmp_28_fu_1301_p1(10 - 1 downto 0);
            elsif (((tmp_2_reg_2264 = ap_const_lv1_0) and (tmp_7_reg_2246 = ap_const_lv1_0))) then 
                line_buffer_0_0_V_address1 <= tmp_37_fu_1261_p1(10 - 1 downto 0);
            else 
                line_buffer_0_0_V_address1 <= "XXXXXXXXXX";
            end if;
        else 
            line_buffer_0_0_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    line_buffer_0_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp1_stage0_11001, tmp_7_reg_2246, tmp_2_reg_2264, ap_block_pp0_stage0_11001, tmp_12_reg_2296_pp1_iter4_reg, tmp_42_reg_2329_pp1_iter4_reg, ap_enable_reg_pp1_iter5, ap_phi_mux_flag_write_2_phi_fu_460_p6)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_12_reg_2296_pp1_iter4_reg = ap_const_lv1_1) and (tmp_7_reg_2246 = ap_const_lv1_1) and (tmp_42_reg_2329_pp1_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_phi_mux_flag_write_2_phi_fu_460_p6 = ap_const_lv1_1) and (tmp_2_reg_2264 = ap_const_lv1_1) and (tmp_7_reg_2246 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((tmp_12_reg_2296_pp1_iter4_reg = ap_const_lv1_1) and (tmp_2_reg_2264 = ap_const_lv1_0) and (tmp_7_reg_2246 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_0_0_V_ce0 <= ap_const_logic_1;
        else 
            line_buffer_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_0_0_V_ce1_assign_proc : process(ap_block_pp1_stage0_11001, tmp_7_reg_2246, tmp_2_reg_2264, tmp_12_reg_2296_pp1_iter4_reg, tmp_42_reg_2329_pp1_iter4_reg, ap_enable_reg_pp1_iter5)
    begin
        if ((((tmp_12_reg_2296_pp1_iter4_reg = ap_const_lv1_1) and (tmp_7_reg_2246 = ap_const_lv1_1) and (tmp_42_reg_2329_pp1_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((tmp_12_reg_2296_pp1_iter4_reg = ap_const_lv1_1) and (tmp_2_reg_2264 = ap_const_lv1_0) and (tmp_7_reg_2246 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_0_0_V_ce1 <= ap_const_logic_1;
        else 
            line_buffer_0_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_0_0_V_d0_assign_proc : process(imgInput_data_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, tmp_7_reg_2246, tmp_2_reg_2264, ap_enable_reg_pp1_iter5, ap_phi_mux_flag_write_2_phi_fu_460_p6, read_pixel_V_1_fu_174)
    begin
        if (((ap_phi_mux_flag_write_2_phi_fu_460_p6 = ap_const_lv1_1) and (tmp_2_reg_2264 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_7_reg_2246 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            line_buffer_0_0_V_d0 <= read_pixel_V_1_fu_174;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_0_0_V_d0 <= imgInput_data_V_dout;
        else 
            line_buffer_0_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_0_0_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp1_stage0_11001, tmp_7_reg_2246, tmp_2_reg_2264, ap_block_pp0_stage0_11001, cond_mid2_reg_2128, ap_enable_reg_pp1_iter5, ap_phi_mux_flag_write_2_phi_fu_460_p6)
    begin
        if ((((cond_mid2_reg_2128 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_phi_mux_flag_write_2_phi_fu_460_p6 = ap_const_lv1_1) and (tmp_2_reg_2264 = ap_const_lv1_1) and (tmp_7_reg_2246 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_0_0_V_we0 <= ap_const_logic_1;
        else 
            line_buffer_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_1_0_V_1_gep_fu_342_p3 <= tmp_26_fu_1243_p1(10 - 1 downto 0);

    line_buffer_1_0_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, tmp_7_reg_2246, tmp_2_reg_2264, line_buffer_1_0_V_s_reg_2142, tmp_12_reg_2296_pp1_iter4_reg, tmp_42_reg_2329_pp1_iter4_reg, line_buffer_1_0_V_1_gep_fu_342_p3, ap_enable_reg_pp1_iter5, ap_phi_mux_flag_write_2_phi_fu_460_p6, tmp_26_fu_1243_p1, tmp_40_fu_1267_p1)
    begin
        if (((tmp_12_reg_2296_pp1_iter4_reg = ap_const_lv1_1) and (tmp_7_reg_2246 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            line_buffer_1_0_V_address0 <= line_buffer_1_0_V_1_gep_fu_342_p3;
        elsif (((tmp_12_reg_2296_pp1_iter4_reg = ap_const_lv1_1) and (tmp_2_reg_2264 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_42_reg_2329_pp1_iter4_reg = ap_const_lv1_0) and (tmp_7_reg_2246 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            line_buffer_1_0_V_address0 <= tmp_26_fu_1243_p1(10 - 1 downto 0);
        elsif (((ap_phi_mux_flag_write_2_phi_fu_460_p6 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_2_reg_2264 = ap_const_lv1_0) and (tmp_7_reg_2246 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            line_buffer_1_0_V_address0 <= tmp_40_fu_1267_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_1_0_V_address0 <= line_buffer_1_0_V_s_reg_2142;
        else 
            line_buffer_1_0_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    line_buffer_1_0_V_address1_assign_proc : process(tmp_7_reg_2246, tmp_34_fu_1281_p1, tmp_28_fu_1301_p1, ap_condition_1789, ap_condition_1793)
    begin
        if ((ap_const_boolean_1 = ap_condition_1789)) then
            if ((tmp_7_reg_2246 = ap_const_lv1_1)) then 
                line_buffer_1_0_V_address1 <= tmp_28_fu_1301_p1(10 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1793)) then 
                line_buffer_1_0_V_address1 <= tmp_34_fu_1281_p1(10 - 1 downto 0);
            else 
                line_buffer_1_0_V_address1 <= "XXXXXXXXXX";
            end if;
        else 
            line_buffer_1_0_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    line_buffer_1_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp1_stage0_11001, tmp_7_reg_2246, tmp_2_reg_2264, ap_block_pp0_stage0_11001, tmp_12_reg_2296_pp1_iter4_reg, tmp_42_reg_2329_pp1_iter4_reg, ap_enable_reg_pp1_iter5, ap_phi_mux_flag_write_2_phi_fu_460_p6)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_12_reg_2296_pp1_iter4_reg = ap_const_lv1_1) and (tmp_7_reg_2246 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((tmp_12_reg_2296_pp1_iter4_reg = ap_const_lv1_1) and (tmp_2_reg_2264 = ap_const_lv1_1) and (tmp_42_reg_2329_pp1_iter4_reg = ap_const_lv1_0) and (tmp_7_reg_2246 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_phi_mux_flag_write_2_phi_fu_460_p6 = ap_const_lv1_1) and (tmp_2_reg_2264 = ap_const_lv1_0) and (tmp_7_reg_2246 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_1_0_V_ce0 <= ap_const_logic_1;
        else 
            line_buffer_1_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_0_V_ce1_assign_proc : process(ap_block_pp1_stage0_11001, tmp_7_reg_2246, tmp_2_reg_2264, tmp_12_reg_2296_pp1_iter4_reg, tmp_42_reg_2329_pp1_iter4_reg, ap_enable_reg_pp1_iter5)
    begin
        if ((((tmp_12_reg_2296_pp1_iter4_reg = ap_const_lv1_1) and (tmp_7_reg_2246 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((tmp_12_reg_2296_pp1_iter4_reg = ap_const_lv1_1) and (tmp_2_reg_2264 = ap_const_lv1_1) and (tmp_42_reg_2329_pp1_iter4_reg = ap_const_lv1_0) and (tmp_7_reg_2246 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_1_0_V_ce1 <= ap_const_logic_1;
        else 
            line_buffer_1_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_0_V_d0_assign_proc : process(imgInput_data_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, tmp_7_reg_2246, tmp_2_reg_2264, ap_enable_reg_pp1_iter5, ap_phi_mux_flag_write_2_phi_fu_460_p6, read_pixel_V_1_fu_174)
    begin
        if (((ap_phi_mux_flag_write_2_phi_fu_460_p6 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_2_reg_2264 = ap_const_lv1_0) and (tmp_7_reg_2246 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            line_buffer_1_0_V_d0 <= read_pixel_V_1_fu_174;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_1_0_V_d0 <= imgInput_data_V_dout;
        else 
            line_buffer_1_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_1_0_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp1_stage0_11001, tmp_7_reg_2246, tmp_2_reg_2264, ap_block_pp0_stage0_11001, cond_mid2_reg_2128, ap_enable_reg_pp1_iter5, ap_phi_mux_flag_write_2_phi_fu_460_p6)
    begin
        if ((((cond_mid2_reg_2128 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_phi_mux_flag_write_2_phi_fu_460_p6 = ap_const_lv1_1) and (tmp_2_reg_2264 = ap_const_lv1_0) and (tmp_7_reg_2246 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_1_0_V_we0 <= ap_const_logic_1;
        else 
            line_buffer_1_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_2_0_V_1_gep_fu_307_p3 <= tmp_26_fu_1243_p1(10 - 1 downto 0);

    line_buffer_2_0_V_address0_assign_proc : process(ap_block_pp1_stage0, tmp_7_reg_2246, line_buffer_2_0_V_1_gep_fu_307_p3, ap_enable_reg_pp1_iter5, ap_phi_mux_flag_write_2_phi_fu_460_p6, tmp_26_fu_1243_p1, tmp_31_fu_1307_p1, ap_condition_412, ap_condition_423)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then
            if (((ap_phi_mux_flag_write_2_phi_fu_460_p6 = ap_const_lv1_1) and (tmp_7_reg_2246 = ap_const_lv1_1))) then 
                line_buffer_2_0_V_address0 <= tmp_31_fu_1307_p1(10 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_423)) then 
                line_buffer_2_0_V_address0 <= line_buffer_2_0_V_1_gep_fu_307_p3;
            elsif ((ap_const_boolean_1 = ap_condition_412)) then 
                line_buffer_2_0_V_address0 <= tmp_26_fu_1243_p1(10 - 1 downto 0);
            else 
                line_buffer_2_0_V_address0 <= "XXXXXXXXXX";
            end if;
        else 
            line_buffer_2_0_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    line_buffer_2_0_V_address1_assign_proc : process(tmp_2_reg_2264, tmp_42_reg_2329_pp1_iter4_reg, tmp_37_fu_1261_p1, tmp_34_fu_1281_p1, ap_condition_1802)
    begin
        if ((ap_const_boolean_1 = ap_condition_1802)) then
            if ((tmp_2_reg_2264 = ap_const_lv1_1)) then 
                line_buffer_2_0_V_address1 <= tmp_34_fu_1281_p1(10 - 1 downto 0);
            elsif (((tmp_42_reg_2329_pp1_iter4_reg = ap_const_lv1_0) and (tmp_2_reg_2264 = ap_const_lv1_0))) then 
                line_buffer_2_0_V_address1 <= tmp_37_fu_1261_p1(10 - 1 downto 0);
            else 
                line_buffer_2_0_V_address1 <= "XXXXXXXXXX";
            end if;
        else 
            line_buffer_2_0_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    line_buffer_2_0_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, tmp_7_reg_2246, tmp_2_reg_2264, tmp_12_reg_2296_pp1_iter4_reg, tmp_42_reg_2329_pp1_iter4_reg, ap_enable_reg_pp1_iter5, ap_phi_mux_flag_write_2_phi_fu_460_p6)
    begin
        if ((((ap_phi_mux_flag_write_2_phi_fu_460_p6 = ap_const_lv1_1) and (tmp_7_reg_2246 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((tmp_12_reg_2296_pp1_iter4_reg = ap_const_lv1_1) and (tmp_2_reg_2264 = ap_const_lv1_1) and (tmp_7_reg_2246 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((tmp_12_reg_2296_pp1_iter4_reg = ap_const_lv1_1) and (tmp_42_reg_2329_pp1_iter4_reg = ap_const_lv1_0) and (tmp_2_reg_2264 = ap_const_lv1_0) and (tmp_7_reg_2246 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_2_0_V_ce0 <= ap_const_logic_1;
        else 
            line_buffer_2_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_2_0_V_ce1_assign_proc : process(ap_block_pp1_stage0_11001, tmp_7_reg_2246, tmp_2_reg_2264, tmp_12_reg_2296_pp1_iter4_reg, tmp_42_reg_2329_pp1_iter4_reg, ap_enable_reg_pp1_iter5)
    begin
        if ((((tmp_12_reg_2296_pp1_iter4_reg = ap_const_lv1_1) and (tmp_2_reg_2264 = ap_const_lv1_1) and (tmp_7_reg_2246 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((tmp_12_reg_2296_pp1_iter4_reg = ap_const_lv1_1) and (tmp_42_reg_2329_pp1_iter4_reg = ap_const_lv1_0) and (tmp_2_reg_2264 = ap_const_lv1_0) and (tmp_7_reg_2246 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_2_0_V_ce1 <= ap_const_logic_1;
        else 
            line_buffer_2_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_2_0_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, tmp_7_reg_2246, ap_enable_reg_pp1_iter5, ap_phi_mux_flag_write_2_phi_fu_460_p6)
    begin
        if (((ap_phi_mux_flag_write_2_phi_fu_460_p6 = ap_const_lv1_1) and (tmp_7_reg_2246 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            line_buffer_2_0_V_we0 <= ap_const_logic_1;
        else 
            line_buffer_2_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    loop_col_count_fu_751_p3 <= 
        imgOutput_cols_read when (tmp_6_fu_747_p2(0) = '1') else 
        imgInput_cols_read;
    loop_row_count_fu_741_p3 <= 
        imgOutput_rows_read when (tmp_5_fu_737_p2(0) = '1') else 
        imgInput_rows_read;
    newSel_fu_1947_p3 <= 
        ap_const_lv32_0 when (tmp_38_fu_1904_p2(0) = '1') else 
        first_row_index_fu_1898_p2;
    nextYScale_V_1_fu_1004_p3 <= 
        tmp_17_fu_997_p3 when (tmp_59_fu_975_p3(0) = '1') else 
        tmp_14_fu_982_p4;
    op2_assign_1_fu_888_p2 <= std_logic_vector(unsigned(read_rows_count_1_reg_396) + unsigned(ap_const_lv32_FFFFFFFE));
    op2_assign_fu_882_p2 <= std_logic_vector(unsigned(read_rows_count_1_reg_396) + unsigned(ap_const_lv32_FFFFFFFF));
    or_cond1_fu_1852_p2 <= (tmp_4_reg_2221 and tmp_22_fu_1847_p2);
    or_cond2_fu_1862_p2 <= (tmp_24_fu_1857_p2 or or_cond1_fu_1852_p2);
    or_cond3_fu_1102_p2 <= (tmp_43_fu_1097_p2 or brmerge_demorgan_fu_1092_p2);
    or_cond4_fu_1108_p2 <= (tmp_44_reg_2315 and or_cond3_fu_1102_p2);
    or_cond_26_fu_1078_p2 <= (tmp_20_reg_2310 and rev_fu_1072_p2);
    or_cond_fu_1942_p2 <= (tmp_4_reg_2221 or sel_tmp2_fu_1928_p2);
    output_rows_count_1_fu_1882_p3 <= 
        output_rows_count_reg_408 when (tmp_10_reg_2230(0) = '1') else 
        output_rows_count_2_s_fu_1874_p3;
    output_rows_count_2_fu_1868_p2 <= std_logic_vector(unsigned(output_rows_count_reg_408) + unsigned(ap_const_lv32_1));
    output_rows_count_2_s_fu_1874_p3 <= 
        output_rows_count_2_fu_1868_p2 when (or_cond2_fu_1862_p2(0) = '1') else 
        output_rows_count_reg_408;
    p_Result_i_i_i_i17_2_fu_1401_p4 <= P1Buf_V_0_1_P0Buf_V_s_fu_1341_p3(15 downto 8);
    p_Result_i_i_i_i17_3_fu_1421_p4 <= P1Buf_V_1_1_P0Buf_V_s_fu_1334_p3(15 downto 8);
    p_Result_i_i_i_i17_4_fu_1469_p4 <= P1Buf_V_0_1_P0Buf_V_s_fu_1341_p3(23 downto 16);
    p_Result_i_i_i_i17_5_fu_1489_p4 <= P1Buf_V_1_1_P0Buf_V_s_fu_1334_p3(23 downto 16);
    p_Result_i_i_i_i_0_2_fu_1411_p4 <= ap_phi_reg_pp1_iter7_P0Buf_0_V_3_reg_471(15 downto 8);
    p_Result_i_i_i_i_0_3_fu_1431_p4 <= ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_504(15 downto 8);
    p_Result_i_i_i_i_0_4_fu_1479_p4 <= ap_phi_reg_pp1_iter7_P0Buf_0_V_3_reg_471(23 downto 16);
    p_Result_i_i_i_i_0_5_fu_1499_p4 <= ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_504(23 downto 16);
    p_Val2_10_fu_1319_p2 <= std_logic_vector(unsigned(tmp_58_reg_2291) - unsigned(p_Val2_9_i_fu_1312_p3));
    p_Val2_13_1_fu_1669_p3 <= (p_Result_i_i_i_i17_2_reg_2465_pp1_iter8_reg & ap_const_lv10_0);
    p_Val2_13_2_fu_1749_p3 <= (p_Result_i_i_i_i17_4_reg_2495_pp1_iter8_reg & ap_const_lv10_0);
    p_Val2_14_1_fu_1691_p2 <= std_logic_vector(signed(tmp_90_1_cast_fu_1676_p1) + signed(tmp_91_1_cast_fu_1679_p1));
    p_Val2_14_2_fu_1771_p2 <= std_logic_vector(signed(tmp_90_2_cast_fu_1756_p1) + signed(tmp_91_2_cast_fu_1759_p1));
    p_Val2_1_fu_933_p3 <= 
        ap_const_lv42_0 when (tmp_57_reg_2235(0) = '1') else 
        sel_tmp2_i_fu_926_p3;
    p_Val2_3_fu_1611_p2 <= std_logic_vector(signed(tmp_90_cast_fu_1596_p1) + signed(tmp_91_cast_fu_1599_p1));
    p_Val2_4_i_fu_1210_p3 <= (tmp_79_fu_1206_p1 & ap_const_lv22_0);
    p_Val2_5_fu_809_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(imgInput_cols_read));
    p_Val2_8_fu_1963_p0 <= p_Val2_8_fu_1963_p00(12 - 1 downto 0);
    p_Val2_8_fu_1963_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(WeightY_V_reg_2424),22));
    p_Val2_8_fu_1963_p1 <= p_Val2_8_fu_1963_p10(12 - 1 downto 0);
    p_Val2_8_fu_1963_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(WeightX_0_V_reg_2358_pp1_iter6_reg),22));
    p_Val2_8_i_fu_1222_p2 <= std_logic_vector(unsigned(tmp_80_fu_1218_p1) - unsigned(p_Val2_4_i_fu_1210_p3));
    p_Val2_9_fu_779_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(imgInput_rows_read));
    p_Val2_9_i_fu_1312_p3 <= (tmp_71_reg_2320_pp1_iter5_reg & ap_const_lv22_0);
    p_Val2_i_fu_1149_p3 <= 
        ap_const_lv42_0 when (tmp_76_reg_2339(0) = '1') else 
        sel_tmp7_i_fu_1142_p3;
    p_Val2_s_27_fu_1589_p3 <= (tmp_81_reg_2430_pp1_iter8_reg & ap_const_lv10_0);
    p_Val2_s_fu_1051_p3 <= 
        tmp_25_fu_1043_p3 when (tmp_65_fu_1012_p3(0) = '1') else 
        tmp_19_fu_1028_p4;
    p_cast_fu_762_p4 <= reg_568(30 downto 6);
    r_V_3_1_fu_1449_p2 <= std_logic_vector(unsigned(lhs_V_6_1_fu_1441_p1) + unsigned(rhs_V_1_fu_1445_p1));
    r_V_3_2_fu_1517_p2 <= std_logic_vector(unsigned(lhs_V_6_2_fu_1509_p1) + unsigned(rhs_V_s_fu_1513_p1));
    r_V_3_fu_1378_p2 <= std_logic_vector(unsigned(lhs_V_6_fu_1370_p1) + unsigned(rhs_V_fu_1374_p1));
    r_V_4_1_fu_1463_p2 <= std_logic_vector(unsigned(lhs_V_3_1_fu_1455_p1) + unsigned(rhs_V_4_1_fu_1459_p1));
    r_V_4_2_fu_1531_p2 <= std_logic_vector(unsigned(lhs_V_3_2_fu_1523_p1) + unsigned(rhs_V_4_2_fu_1527_p1));
    r_V_4_fu_1392_p2 <= std_logic_vector(unsigned(lhs_V_3_fu_1384_p1) + unsigned(rhs_V_4_fu_1388_p1));
    r_V_9_fu_911_p2 <= std_logic_vector(signed(tmp_i_fu_900_p1) + signed(tmp_51_i_reg_2187));
    r_V_fu_1198_p3 <= 
        tmp_51_fu_1190_p3 when (tmp_77_fu_1156_p3(0) = '1') else 
        tmp_49_fu_1174_p4;
    read_rows_count_2_fu_1910_p2 <= std_logic_vector(unsigned(read_rows_count_1_reg_396) + unsigned(ap_const_lv32_1));
    read_rows_count_3_fu_1934_p3 <= 
        read_rows_count_1_reg_396 when (sel_tmp2_fu_1928_p2(0) = '1') else 
        read_rows_count_4_fu_1916_p3;
    read_rows_count_4_fu_1916_p3 <= 
        read_rows_count_1_reg_396 when (tmp_4_reg_2221(0) = '1') else 
        read_rows_count_2_fu_1910_p2;
    read_rows_count_mid2_fu_717_p3 <= 
        read_rows_count_reg_374 when (tmp_9_fu_667_p2(0) = '1') else 
        i_fu_691_p2;
    rev_fu_1072_p2 <= (slt_fu_1067_p2 xor ap_const_lv1_1);
    rhs_V_1_fu_1445_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i_0_3_fu_1431_p4),9));
    rhs_V_4_1_fu_1459_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i17_3_fu_1421_p4),9));
    rhs_V_4_2_fu_1527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i17_5_fu_1489_p4),9));
    rhs_V_4_fu_1388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_83_fu_1356_p1),9));
    rhs_V_fu_1374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_84_fu_1360_p1),9));
    rhs_V_s_fu_1513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i_0_5_fu_1499_p4),9));
    scalex_V_fu_640_p2 <= std_logic_vector(shift_left(unsigned(reg_568),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    scaley_V_fu_646_p2 <= std_logic_vector(shift_left(unsigned(grp_xfUDivResize_fu_515_ap_return),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    sel_tmp1_fu_1923_p2 <= (tmp_4_reg_2221 xor ap_const_lv1_1);
    sel_tmp1_i_fu_921_p2 <= (tmp_57_i_reg_2241 and sel_tmp_i_fu_916_p2);
    sel_tmp2_fu_1928_p2 <= (tmp_30_fu_1893_p2 and sel_tmp1_fu_1923_p2);
    sel_tmp2_i_fu_926_p3 <= 
        tmp_59_i_reg_2198 when (sel_tmp1_i_fu_921_p2(0) = '1') else 
        reg_572;
    sel_tmp5_i_fu_1132_p2 <= (tmp_76_reg_2339 xor ap_const_lv1_1);
    sel_tmp6_i_fu_1137_p2 <= (tmp_66_i_reg_2345 and sel_tmp5_i_fu_1132_p2);
    sel_tmp7_i_fu_1142_p3 <= 
        indexx_pre_V_1_i_reg_2208 when (sel_tmp6_i_fu_1137_p2(0) = '1') else 
        reg_572;
    sel_tmp_i_fu_916_p2 <= (tmp_57_reg_2235 xor ap_const_lv1_1);
    slt_fu_1067_p2 <= "1" when (signed(tmp_18_fu_1063_p1) < signed(op2_assign_reg_2250)) else "0";
    tmp_10_fu_862_p2 <= "1" when (signed(output_rows_count_reg_408) > signed(tmp_1_reg_2182)) else "0";
    tmp_11_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_mid2_fu_683_p3),64));
    tmp_12_fu_944_p2 <= "1" when (signed(ap_phi_mux_j3_phi_fu_447_p4) < signed(loop_col_count_reg_2177)) else "0";
    tmp_14_fu_982_p4 <= r_V_9_reg_2278(38 downto 22);
    tmp_15_fu_635_p1 <= imgOutput_rows_read(16 - 1 downto 0);
    tmp_16_fu_991_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(tmp_14_fu_982_p4));
    tmp_17_fu_997_p3 <= 
        tmp_14_fu_982_p4 when (tmp_52_i_reg_2305(0) = '1') else 
        tmp_16_fu_991_p2;
    tmp_18_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nextYScale_V_1_fu_1004_p3),32));
    tmp_19_fu_1028_p4 <= p_Val2_1_reg_2284(38 downto 22);
    tmp_1_fu_757_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(imgOutput_rows_read));
    tmp_20_fu_965_p2 <= "1" when (signed(ap_phi_mux_j3_phi_fu_447_p4) < signed(imgInput_cols_read)) else "0";
    tmp_21_fu_1843_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indexy_V_fu_178),32));
    tmp_22_fu_1847_p2 <= "1" when (tmp_21_fu_1843_p1 = op2_assign_reg_2250) else "0";
    tmp_23_fu_1037_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(tmp_19_fu_1028_p4));
    tmp_24_fu_1857_p2 <= "1" when (tmp_21_fu_1843_p1 = op2_assign_1_reg_2258) else "0";
    tmp_25_fu_1043_p3 <= 
        tmp_19_fu_1028_p4 when (tmp_60_i_fu_1022_p2(0) = '1') else 
        tmp_23_fu_1037_p2;
    tmp_26_fu_1243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_reg_2350),64));
    tmp_27_fu_1295_p2 <= std_logic_vector(unsigned(tmp_31_cast_fu_1292_p1) + unsigned(ap_const_lv18_1));
    tmp_28_fu_1301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_1295_p2),64));
    tmp_29_fu_1889_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nextYScale_V_fu_182),32));
    tmp_2_fu_894_p2 <= "1" when (indexstores_reg_420 = ap_const_lv32_1) else "0";
    tmp_30_fu_1893_p2 <= "1" when (signed(tmp_29_fu_1889_p1) < signed(op2_assign_reg_2250)) else "0";
    tmp_31_cast_fu_1292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_reg_2350),18));
    tmp_31_fu_1307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j3_reg_443_pp1_iter4_reg),64));
    tmp_32_fu_652_p3 <= (imgInput_cols_read & ap_const_lv1_0);
    tmp_33_fu_1275_p2 <= std_logic_vector(unsigned(tmp_38_cast_fu_1272_p1) + unsigned(ap_const_lv18_1));
    tmp_34_fu_1281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_1275_p2),64));
    tmp_35_fu_776_p1 <= imgInput_rows_read(20 - 1 downto 0);
    tmp_36_fu_1255_p2 <= std_logic_vector(unsigned(tmp_42_cast_fu_1252_p1) + unsigned(ap_const_lv18_1));
    tmp_37_fu_1261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_fu_1255_p2),64));
    tmp_38_cast_fu_1272_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_reg_2350),18));
    tmp_38_fu_1904_p2 <= "1" when (first_row_index_fu_1898_p2 = ap_const_lv32_3) else "0";
    tmp_39_fu_1287_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j3_reg_443_pp1_iter4_reg),64));
    tmp_40_fu_1267_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j3_reg_443_pp1_iter4_reg),64));
    tmp_41_fu_1083_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_s_fu_1051_p3),32));
    tmp_42_cast_fu_1252_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_reg_2350),18));
    tmp_42_fu_1087_p2 <= "1" when (tmp_41_fu_1083_p1 = op2_assign_reg_2250) else "0";
    tmp_43_fu_1097_p2 <= "1" when (tmp_41_fu_1083_p1 = op2_assign_1_reg_2258) else "0";
    tmp_44_fu_970_p2 <= "1" when (signed(ap_phi_mux_j3_phi_fu_447_p4) < signed(imgOutput_cols_read)) else "0";
    tmp_45_fu_792_p2 <= std_logic_vector(unsigned(tmp_35_fu_776_p1) + unsigned(ap_const_lv20_FFFFF));
    tmp_46_fu_806_p1 <= imgInput_cols_read(20 - 1 downto 0);
    tmp_47_fu_1631_p2 <= "1" when (tmp_88_fu_1625_p2 = ap_const_lv10_0) else "0";
    tmp_48_fu_822_p2 <= std_logic_vector(unsigned(tmp_46_fu_806_p1) + unsigned(ap_const_lv20_FFFFF));
    tmp_49_fu_1174_p4 <= p_Val2_i_fu_1149_p3(38 downto 22);
    tmp_4_fu_857_p2 <= "1" when (read_rows_count_1_reg_396 = imgInput_rows_read) else "0";
    tmp_50_fu_1184_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(tmp_49_fu_1174_p4));
    tmp_51_fu_1190_p3 <= 
        tmp_49_fu_1174_p4 when (tmp_68_i_fu_1168_p2(0) = '1') else 
        tmp_50_fu_1184_p2;
    tmp_51_i_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast_fu_762_p4),43));
    tmp_52_fu_904_p1 <= tmp_i_fu_900_p1(22 - 1 downto 0);
    tmp_52_i_fu_959_p2 <= "1" when (tmp_63_fu_955_p2 = ap_const_lv22_0) else "0";
    tmp_53_fu_908_p1 <= tmp_51_i_reg_2187(22 - 1 downto 0);
    tmp_53_i_fu_867_p0 <= grp_scaleCompute_fu_532_ap_return;
        tmp_53_i_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_53_i_fu_867_p0),54));

    tmp_54_fu_1637_p4 <= p_Val2_3_fu_1611_p2(17 downto 10);
    tmp_55_fu_1647_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(tmp_54_fu_1637_p4));
    tmp_56_fu_1653_p3 <= 
        tmp_54_fu_1637_p4 when (tmp_47_fu_1631_p2(0) = '1') else 
        tmp_55_fu_1647_p2;
    tmp_56_i_fu_784_p3 <= (p_Val2_9_fu_779_p2 & ap_const_lv22_0);
    tmp_57_i_fu_871_p2 <= "1" when (signed(tmp_53_i_fu_867_p1) > signed(tmp_56_i_reg_2193)) else "0";
    tmp_58_fu_940_p1 <= p_Val2_1_fu_933_p3(24 - 1 downto 0);
    tmp_59_fu_975_p3 <= r_V_9_reg_2278(42 downto 42);
    tmp_59_i_fu_798_p3 <= (tmp_45_fu_792_p2 & ap_const_lv22_0);
    tmp_5_fu_737_p2 <= "1" when (signed(imgOutput_rows_read) > signed(imgInput_rows_read)) else "0";
    tmp_60_fu_1661_p3 <= 
        tmp_56_fu_1653_p3 when (tmp_87_fu_1617_p3(0) = '1') else 
        tmp_54_fu_1637_p4;
    tmp_60_i_fu_1022_p2 <= "1" when (tmp_69_fu_1019_p1 = ap_const_lv22_0) else "0";
    tmp_61_fu_1717_p4 <= p_Val2_14_1_fu_1691_p2(17 downto 10);
    tmp_62_fu_1727_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(tmp_61_fu_1717_p4));
    tmp_62_i_fu_1123_p0 <= grp_scaleCompute_fu_532_ap_return;
        tmp_62_i_fu_1123_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_62_i_fu_1123_p0),54));

    tmp_63_fu_955_p2 <= std_logic_vector(unsigned(tmp_53_reg_2273) + unsigned(tmp_52_reg_2268));
    tmp_64_fu_1733_p3 <= 
        tmp_61_fu_1717_p4 when (tmp_96_1_fu_1711_p2(0) = '1') else 
        tmp_62_fu_1727_p2;
    tmp_65_fu_1012_p3 <= p_Val2_1_reg_2284(41 downto 41);
    tmp_65_i_fu_814_p3 <= (p_Val2_5_fu_809_p2 & ap_const_lv22_0);
    tmp_66_fu_1741_p3 <= 
        tmp_64_fu_1733_p3 when (tmp_91_fu_1697_p3(0) = '1') else 
        tmp_61_fu_1717_p4;
    tmp_66_i_fu_1127_p2 <= "1" when (signed(tmp_62_i_fu_1123_p1) > signed(tmp_65_i_reg_2203)) else "0";
    tmp_67_fu_1797_p4 <= p_Val2_14_2_fu_1771_p2(17 downto 10);
    tmp_68_fu_1807_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(tmp_67_fu_1797_p4));
    tmp_68_i_fu_1168_p2 <= "1" when (tmp_78_fu_1164_p1 = ap_const_lv22_0) else "0";
    tmp_69_fu_1019_p1 <= p_Val2_1_reg_2284(22 - 1 downto 0);
    tmp_6_fu_747_p2 <= "1" when (signed(imgOutput_cols_read) > signed(imgInput_cols_read)) else "0";
    tmp_70_fu_1813_p3 <= 
        tmp_67_fu_1797_p4 when (tmp_96_2_fu_1791_p2(0) = '1') else 
        tmp_68_fu_1807_p2;
    tmp_71_fu_1059_p1 <= p_Val2_s_fu_1051_p3(2 - 1 downto 0);
    tmp_72_fu_1821_p3 <= 
        tmp_70_fu_1813_p3 when (tmp_95_fu_1777_p3(0) = '1') else 
        tmp_67_fu_1797_p4;
    tmp_77_fu_1156_p3 <= p_Val2_i_fu_1149_p3(41 downto 41);
    tmp_78_fu_1164_p1 <= p_Val2_i_fu_1149_p3(22 - 1 downto 0);
    tmp_79_fu_1206_p1 <= r_V_fu_1198_p3(2 - 1 downto 0);
    tmp_7_fu_876_p2 <= "1" when (indexstores_reg_420 = ap_const_lv32_0) else "0";
    tmp_80_fu_1218_p1 <= p_Val2_i_fu_1149_p3(24 - 1 downto 0);
    tmp_81_fu_1348_p1 <= P1Buf_V_0_1_P0Buf_V_s_fu_1341_p3(8 - 1 downto 0);
    tmp_82_fu_1352_p1 <= ap_phi_reg_pp1_iter7_P0Buf_0_V_3_reg_471(8 - 1 downto 0);
    tmp_83_fu_1356_p1 <= P1Buf_V_1_1_P0Buf_V_s_fu_1334_p3(8 - 1 downto 0);
    tmp_84_fu_1360_p1 <= ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_504(8 - 1 downto 0);
    tmp_85_fu_1603_p1 <= tmp_90_cast_fu_1596_p1(10 - 1 downto 0);
    tmp_86_fu_1607_p1 <= tmp_91_cast_fu_1599_p1(10 - 1 downto 0);
    tmp_87_fu_1617_p3 <= p_Val2_3_fu_1611_p2(23 downto 23);
    tmp_88_fu_1625_p2 <= std_logic_vector(unsigned(tmp_86_fu_1607_p1) + unsigned(tmp_85_fu_1603_p1));
    tmp_89_fu_1683_p1 <= tmp_90_1_cast_fu_1676_p1(10 - 1 downto 0);
    tmp_8_fu_846_p2 <= "1" when (signed(i3_reg_432) < signed(loop_row_count_reg_2172)) else "0";
        tmp_90_1_cast_fu_1676_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_1_reg_2530),24));

        tmp_90_2_cast_fu_1756_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_2_reg_2535),24));

        tmp_90_cast_fu_1596_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_2525),24));

    tmp_90_fu_1687_p1 <= tmp_91_1_cast_fu_1679_p1(10 - 1 downto 0);
    tmp_91_1_cast_fu_1679_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_13_1_fu_1669_p3),24));
    tmp_91_2_cast_fu_1759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_13_2_fu_1749_p3),24));
    tmp_91_cast_fu_1599_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_s_27_fu_1589_p3),24));
    tmp_91_fu_1697_p3 <= p_Val2_14_1_fu_1691_p2(23 downto 23);
    tmp_92_fu_1705_p2 <= std_logic_vector(unsigned(tmp_90_fu_1687_p1) + unsigned(tmp_89_fu_1683_p1));
    tmp_93_fu_1763_p1 <= tmp_90_2_cast_fu_1756_p1(10 - 1 downto 0);
    tmp_94_fu_1767_p1 <= tmp_91_2_cast_fu_1759_p1(10 - 1 downto 0);
    tmp_95_fu_1777_p3 <= p_Val2_14_2_fu_1771_p2(23 downto 23);
    tmp_96_1_fu_1711_p2 <= "1" when (tmp_92_fu_1705_p2 = ap_const_lv10_0) else "0";
    tmp_96_2_fu_1791_p2 <= "1" when (tmp_96_fu_1785_p2 = ap_const_lv10_0) else "0";
    tmp_96_fu_1785_p2 <= std_logic_vector(unsigned(tmp_94_fu_1767_p1) + unsigned(tmp_93_fu_1763_p1));
    tmp_9_fu_667_p2 <= "1" when (signed(j_cast_fu_663_p1) < signed(imgInput_cols_read)) else "0";
    tmp_fu_621_p1 <= imgOutput_cols_read(16 - 1 downto 0);
        tmp_i_fu_900_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_572),43));

    xnew_fu_612_p3 <= (imgInput_cols_read & ap_const_lv28_0);
    ynew_fu_626_p3 <= (imgInput_rows_read & ap_const_lv28_0);
end behav;
