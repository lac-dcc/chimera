 package  automatic  continuous  ;  endpackage  package  automatic  continuous  ;  endpackage  :  id_1  bind  this  [  ]  .  id_1  [  :  ]  .  id_1  #  1  [  :  ]  .  id_1  #  1  .  id_1  #  (  ,  )  .  access  #  1  .  access  #  (  )  id_1  #  (  .  product  (  )  )  id_1  [  ]  =  ;  macromodule  static  module_0 import  id_1  ::  *  ,  flow  ::  *  ,  access  ::  *  ;  (  id_2  .  min  continuous  =  ,  enum  {  id_3  =  ,  id_4  =  }  id_5  =  ,  id_6  ,  inout type_9 id_7  #  (  )  =  )  ;  timeunit 1ps / 1ps ;  endmodule  :  id_8 