 bind  this  .  id_1  #  (  .  id_1  (  )  ,  .  min  (  )  )  .  id_1  .  id_1  #  (  .  continuous  (  )  )  [  -:  ]  [  :  ]  .  id_1  id_1  #  (  .  product  (  )  ,  .  access  (  )  ,  .  min  (  )  ,  .  id_1  (  )  )  ::  continuous  #  1  id_1  [  :  ]  (  .  id_0 )  ;  primitive  access  (  sample  )  ;  output  id_2  ;  table  f  :  _  :  -  ;  f  :  b  :  0  ;  x  :  %  :  -  ;  Q  :  _  :  0  ;  M  f  *  :  %  :  -  ;  endtable  endprimitive  module  flow  import  module_0 ::  *  ;  (  )  ;  macromodule  sample  import  module_1 ::  *  ;  import  id_1  ::  *  ;  import  id_2  ::  *  ,  id_3  ::  *  ,  sample  ::  *  ,  continuous  ::  *  ;  ;  `undef  pp_3  endprogram  endmodule  :  flow  package  access  ;  endpackage  package  static  continuous  ;  endpackage 