// Seed: 3538821247
module module_0 (
    input wor id_0,
    input uwire id_1,
    input tri id_2,
    output tri1 id_3,
    input wand id_4,
    input uwire id_5,
    output wor id_6,
    output supply0 id_7,
    input supply0 id_8,
    input supply1 id_9,
    input supply1 id_10,
    input tri1 id_11,
    input wor id_12,
    input tri0 id_13,
    input tri1 id_14,
    input uwire id_15
    , id_45,
    input wand id_16,
    input supply0 id_17,
    input supply1 id_18,
    input tri sample,
    input supply1 module_0,
    input wire id_21,
    input tri0 id_22,
    input wand id_23,
    input wor id_24,
    output wand id_25,
    input uwire id_26,
    input tri1 id_27,
    input supply0 id_28,
    input tri id_29,
    input wand id_30,
    input wire id_31,
    output uwire id_32,
    input wire id_33,
    input tri1 id_34,
    input supply1 id_35,
    output tri id_36,
    input wire id_37,
    input wor id_38,
    input uwire id_39,
    output tri0 id_40,
    input wand id_41,
    input uwire id_42,
    output wire id_43
);
  always force id_32 = id_17 == 1;
endmodule
module module_1 #(
    parameter id_4 = 32'd33
) (
    input supply0 id_0,
    input wire id_1,
    output wire id_2,
    output wand id_3,
    input supply0 _id_4
);
  wire [1 : id_4] id_6;
  module_0 modCall_1 (
      id_0,
      id_0,
      id_0,
      id_3,
      id_0,
      id_1,
      id_2,
      id_2,
      id_1,
      id_0,
      id_1,
      id_1,
      id_0,
      id_0,
      id_0,
      id_0,
      id_1,
      id_1,
      id_0,
      id_0,
      id_1,
      id_0,
      id_1,
      id_0,
      id_1,
      id_2,
      id_0,
      id_1,
      id_0,
      id_0,
      id_1,
      id_0,
      id_2,
      id_0,
      id_1,
      id_0,
      id_2,
      id_0,
      id_1,
      id_1,
      id_3,
      id_0,
      id_0,
      id_3
  );
  assign modCall_1.id_18 = 0;
  assign id_2 = id_1;
endmodule
