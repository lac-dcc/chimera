// Seed: 843299395
module module_0 (
    output supply1 id_0,
    input wire id_1,
    input wor id_2,
    input wire id_3,
    input wire id_4,
    output tri id_5,
    output wire id_6,
    output wand id_7,
    input supply1 id_8,
    output tri1 id_9,
    input tri1 id_10,
    input uwire id_11,
    input tri1 id_12,
    input tri id_13,
    input uwire id_14,
    output supply0 id_15,
    input tri id_16,
    input tri id_17,
    input supply1 id_18,
    output tri0 id_19,
    input wor id_20,
    input supply1 id_21,
    input supply0 id_22,
    input supply0 id_23,
    input uwire id_24,
    input tri id_25,
    input wand id_26,
    output wire id_27,
    input uwire id_28,
    input tri1 id_29,
    output tri id_30,
    input wand id_31,
    output tri0 id_32,
    input supply1 id_33,
    output supply0 id_34,
    input tri id_35,
    input uwire id_36,
    input supply0 id_37,
    input supply1 id_38,
    output tri id_39,
    input uwire id_40,
    input tri0 id_41,
    input supply1 id_42,
    input wor id_43,
    output tri id_44
);
endmodule
module module_1 (
    output wor id_0,
    input tri0 id_1,
    input uwire id_2,
    output tri id_3,
    output supply0 id_4
);
  wire id_6;
  or primCall (id_4, id_2, id_1, id_6);
  module_0 modCall_1 (
      id_3,
      id_2,
      id_2,
      id_1,
      id_2,
      id_3,
      id_4,
      id_4,
      id_2,
      id_3,
      id_1,
      id_1,
      id_1,
      id_1,
      id_1,
      id_4,
      id_1,
      id_2,
      id_2,
      id_3,
      id_2,
      id_2,
      id_1,
      id_1,
      id_1,
      id_2,
      id_1,
      id_4,
      id_1,
      id_2,
      id_0,
      id_2,
      id_4,
      id_1,
      id_4,
      id_1,
      id_1,
      id_2,
      id_1,
      id_4,
      id_1,
      id_2,
      id_2,
      id_1,
      id_4
  );
  assign modCall_1.id_0 = 0;
  initial
  fork : SymbolIdentifier
  join_any : SymbolIdentifier
endmodule
