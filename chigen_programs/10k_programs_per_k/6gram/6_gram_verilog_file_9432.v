// Seed: 4248731436
module module_0 (
    input uwire id_0,
    output wire id_1,
    input uwire id_2,
    output tri1 id_3,
    input wire id_4,
    output tri0 id_5,
    input tri0 id_6,
    input supply0 id_7,
    input wor id_8,
    output tri0 id_9,
    input wire id_10,
    input uwire id_11,
    output supply0 id_12,
    input wand id_13,
    input wor id_14,
    output tri1 id_15,
    input supply0 id_16,
    input supply0 id_17,
    output uwire id_18,
    input wand id_19,
    input tri id_20,
    input supply1 id_21,
    input supply0 id_22,
    input supply1 id_23,
    input supply0 id_24,
    output tri1 id_25,
    input wire id_26,
    output wire id_27,
    output tri0 id_28,
    input wire id_29,
    input wire id_30,
    input wand id_31,
    output tri0 id_32,
    input tri id_33,
    output supply0 id_34,
    input wire id_35,
    output tri1 id_36,
    input tri0 id_37,
    input wire id_38,
    input supply1 id_39,
    input wire id_40,
    input wire id_41,
    input tri id_42,
    output wor id_43,
    input supply0 id_44,
    output wand id_45
);
  wire id_47;
  wire [1 : 1] id_48;
  always @(-1 or id_33) #1;
endmodule
module module_1 (
    input  wire id_0,
    output wire id_1,
    input  wand id_2,
    output tri0 id_3
);
  logic id_5;
  ;
  module_0 modCall_1 (
      id_0,
      id_3,
      id_2,
      id_3,
      id_0,
      id_1,
      id_0,
      id_0,
      id_0,
      id_1,
      id_2,
      id_2,
      id_3,
      id_0,
      id_0,
      id_1,
      id_0,
      id_2,
      id_3,
      id_0,
      id_0,
      id_0,
      id_2,
      id_0,
      id_2,
      id_1,
      id_0,
      id_1,
      id_1,
      id_2,
      id_0,
      id_0,
      id_1,
      id_2,
      id_1,
      id_0,
      id_3,
      id_0,
      id_2,
      id_2,
      id_0,
      id_0,
      id_0,
      id_3,
      id_2,
      id_1
  );
  assign modCall_1.id_26 = 0;
endmodule
