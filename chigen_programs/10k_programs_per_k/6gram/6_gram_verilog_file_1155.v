// Seed: 2412342078
module module_0 (
    input supply0 id_0,
    input supply0 id_1,
    input wor id_2,
    output supply1 id_3,
    input wire id_4,
    output uwire id_5,
    input uwire id_6,
    input tri id_7,
    input supply1 id_8,
    output wire id_9,
    input supply1 id_10,
    output wor id_11,
    input tri0 id_12,
    input uwire id_13,
    output wand id_14
    , id_40,
    input tri1 id_15,
    input supply0 id_16,
    input tri0 id_17,
    input tri id_18,
    input tri0 id_19,
    input tri1 id_20,
    input tri0 id_21,
    output tri0 id_22,
    output supply1 id_23,
    output supply0 id_24,
    output supply1 id_25,
    input tri0 id_26,
    input wire id_27,
    input wire id_28,
    input wor module_0,
    output wand id_30,
    output supply0 id_31,
    input wand id_32,
    input tri id_33,
    input tri1 id_34,
    output supply1 id_35,
    output tri1 id_36,
    input wire id_37,
    output logic id_38
);
  always @(*) begin : LABEL_0
    id_38 <= id_20;
  end
endmodule
module module_1 (
    input supply1 id_0,
    output wand id_1,
    input tri1 id_2,
    input uwire id_3,
    input wand id_4,
    input tri1 id_5,
    input wor id_6,
    input uwire id_7,
    output wor id_8,
    input supply0 id_9,
    output wand id_10,
    output logic id_11,
    input wor id_12,
    input tri id_13,
    input uwire id_14,
    output supply0 id_15
);
  module_0 modCall_1 (
      id_6,
      id_5,
      id_14,
      id_10,
      id_5,
      id_1,
      id_14,
      id_4,
      id_14,
      id_15,
      id_12,
      id_8,
      id_6,
      id_13,
      id_1,
      id_14,
      id_0,
      id_3,
      id_13,
      id_7,
      id_3,
      id_13,
      id_8,
      id_8,
      id_10,
      id_8,
      id_14,
      id_5,
      id_0,
      id_12,
      id_15,
      id_15,
      id_3,
      id_5,
      id_4,
      id_10,
      id_8,
      id_7,
      id_11
  );
  assign modCall_1.id_1 = 0;
  always @(posedge 1) id_11 <= -1;
endmodule
