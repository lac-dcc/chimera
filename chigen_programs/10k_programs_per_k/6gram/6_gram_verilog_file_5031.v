// Seed: 607332623
module module_0 (
    output supply0 id_0,
    input wand id_1,
    output wand id_2,
    input wand id_3,
    input tri id_4,
    input tri id_5,
    input supply0 id_6,
    input wor id_7,
    output wand id_8,
    output wand id_9,
    output wire id_10,
    input wire id_11,
    output tri id_12,
    input tri id_13,
    output tri0 id_14,
    output tri1 id_15,
    input tri1 id_16,
    input tri0 id_17,
    output supply1 id_18,
    input tri id_19,
    input wor id_20,
    output uwire id_21,
    output uwire id_22,
    output wand id_23,
    input tri0 id_24,
    input wor id_25,
    input supply1 id_26,
    output tri0 id_27,
    output wand id_28,
    input uwire id_29,
    output wand id_30,
    input wand id_31,
    output wire id_32,
    input tri id_33,
    output uwire id_34,
    input uwire id_35,
    output wire id_36,
    input uwire id_37,
    input uwire id_38,
    input uwire id_39
    , id_42,
    output supply0 id_40
);
  logic id_43;
  ;
  assign module_1.id_3 = 0;
endmodule
module module_1 #(
    parameter id_4 = 32'd61,
    parameter id_5 = 32'd6
) (
    input  wire id_0,
    input  tri0 id_1,
    output wire id_2,
    input  wire id_3,
    output wire _id_4,
    output tri1 _id_5
);
  assign id_5 = id_1;
  logic [id_4 : id_5] id_7 = 1 == id_1;
  module_0 modCall_1 (
      id_2,
      id_0,
      id_2,
      id_1,
      id_0,
      id_3,
      id_3,
      id_3,
      id_2,
      id_2,
      id_2,
      id_1,
      id_2,
      id_3,
      id_2,
      id_2,
      id_0,
      id_3,
      id_2,
      id_3,
      id_3,
      id_2,
      id_2,
      id_2,
      id_1,
      id_0,
      id_1,
      id_2,
      id_2,
      id_0,
      id_2,
      id_3,
      id_2,
      id_1,
      id_2,
      id_3,
      id_2,
      id_3,
      id_0,
      id_1,
      id_2
  );
endmodule
