// Seed: 1258789835
module module_0 (
    output tri id_0,
    output wire id_1,
    output wire id_2,
    input uwire id_3,
    input tri id_4,
    input wor id_5,
    output tri1 id_6,
    output supply0 id_7,
    input supply0 id_8,
    input tri id_9,
    input supply1 id_10,
    input tri1 id_11,
    input tri0 id_12,
    input wire id_13,
    input wor id_14,
    input supply1 id_15,
    output supply0 id_16,
    input tri1 id_17,
    input supply1 id_18,
    input tri id_19,
    input wand id_20,
    output tri id_21,
    output wor id_22,
    input wire id_23,
    input tri0 id_24,
    output wor id_25,
    input tri1 id_26,
    output tri id_27,
    output tri0 id_28,
    output wand id_29,
    input wor id_30,
    output wor id_31,
    output wor id_32,
    output supply1 id_33
);
  assign id_0 = -1'b0;
  assign module_1.id_5 = 0;
endmodule
module module_1 (
    input tri id_0,
    input tri id_1,
    output tri0 id_2,
    input supply0 id_3,
    output logic id_4,
    input supply1 id_5,
    input tri0 id_6,
    input wire id_7
);
  always @(posedge 1) id_4 <= -1;
  module_0 modCall_1 (
      id_2,
      id_2,
      id_2,
      id_0,
      id_6,
      id_6,
      id_2,
      id_2,
      id_3,
      id_3,
      id_0,
      id_7,
      id_5,
      id_3,
      id_3,
      id_5,
      id_2,
      id_7,
      id_3,
      id_6,
      id_0,
      id_2,
      id_2,
      id_7,
      id_7,
      id_2,
      id_5,
      id_2,
      id_2,
      id_2,
      id_5,
      id_2,
      id_2,
      id_2
  );
endmodule
