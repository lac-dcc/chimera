// Seed: 974594521
module module_1 (
    output uwire id_0,
    output uwire id_1,
    input wire id_2,
    output tri id_3,
    input uwire id_4,
    output uwire id_5,
    input tri1 id_6,
    input wor id_7,
    input wand id_8,
    input supply1 id_9,
    input supply1 id_10,
    output tri id_11,
    input uwire id_12,
    input tri0 id_13,
    input wire id_14,
    input tri1 id_15,
    input uwire id_16,
    output tri1 id_17,
    output tri0 id_18,
    output uwire id_19,
    output uwire id_20,
    input wire id_21
    , id_41,
    input wand id_22,
    input supply1 id_23,
    input supply1 id_24,
    input supply1 id_25,
    input wand id_26,
    input tri0 id_27,
    input tri1 id_28,
    input wire id_29,
    input tri1 module_0,
    input tri0 id_31,
    input supply0 id_32,
    output tri1 id_33,
    input tri0 id_34,
    input tri id_35,
    input tri0 id_36,
    output wand id_37,
    input wand id_38,
    input wor id_39
);
  assign module_1.id_3 = 0;
  wire id_42;
  logic id_43, id_44;
endmodule
module module_1 (
    input wire id_0,
    input supply0 id_1,
    output logic id_2,
    input wor id_3,
    output tri0 id_4,
    output wand id_5
);
  always @(posedge 1) id_2 <= id_0;
  module_0 modCall_1 (
      id_4,
      id_5,
      id_0,
      id_5,
      id_0,
      id_5,
      id_3,
      id_3,
      id_3,
      id_1,
      id_3,
      id_5,
      id_1,
      id_3,
      id_3,
      id_0,
      id_0,
      id_4,
      id_5,
      id_4,
      id_4,
      id_3,
      id_0,
      id_1,
      id_1,
      id_0,
      id_1,
      id_1,
      id_0,
      id_0,
      id_0,
      id_3,
      id_1,
      id_4,
      id_1,
      id_3,
      id_3,
      id_5,
      id_0,
      id_1
  );
  assign id_5 = id_1;
endmodule
