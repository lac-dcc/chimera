// Seed: 1964134567
module module_0 (
    input wire id_0,
    output wire id_1,
    output tri0 id_2,
    input supply0 id_3,
    input wand module_0,
    output tri id_5,
    input tri1 id_6,
    output supply1 id_7,
    input wand id_8,
    input supply1 id_9,
    output supply0 id_10,
    output supply1 id_11,
    output tri0 id_12,
    input tri0 id_13,
    output tri1 id_14,
    output tri0 id_15,
    input tri id_16,
    output tri id_17,
    input wor id_18,
    input tri1 id_19,
    output wire id_20
    , id_38,
    output wire id_21,
    input supply1 id_22,
    input tri id_23,
    output tri id_24,
    input supply0 id_25,
    input uwire id_26,
    input uwire id_27,
    input uwire id_28,
    input wor id_29,
    input wor id_30,
    output uwire id_31,
    input uwire id_32,
    input tri id_33,
    input wand id_34,
    input wire id_35,
    output wor id_36
);
  wire id_39;
endmodule
module module_1 (
    input wor id_0,
    output uwire id_1,
    input wor id_2,
    output logic id_3,
    input wand id_4,
    output supply1 id_5,
    input wor id_6,
    output supply1 id_7,
    output tri1 id_8,
    input wor id_9,
    input tri0 id_10,
    input uwire id_11,
    input tri id_12,
    input wor id_13,
    input wor id_14,
    output uwire id_15,
    input wire id_16,
    output supply1 id_17,
    input tri0 id_18
);
  assign id_15 = 1;
  generate
    assign id_3 = id_18;
  endgenerate
  module_0 modCall_1 (
      id_4,
      id_7,
      id_1,
      id_9,
      id_0,
      id_8,
      id_4,
      id_15,
      id_2,
      id_2,
      id_8,
      id_17,
      id_15,
      id_6,
      id_5,
      id_1,
      id_16,
      id_7,
      id_11,
      id_14,
      id_8,
      id_5,
      id_10,
      id_12,
      id_8,
      id_9,
      id_13,
      id_0,
      id_0,
      id_16,
      id_16,
      id_17,
      id_14,
      id_14,
      id_12,
      id_2,
      id_8
  );
  always @(posedge 'b0) id_3 <= id_10;
  assign id_5 = 1;
endmodule
