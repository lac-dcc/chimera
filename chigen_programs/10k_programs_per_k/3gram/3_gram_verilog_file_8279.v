// Seed: 1435141424
macromodule module_0 (
    input tri id_0,
    input supply1 id_1,
    input wire id_2,
    input tri0 id_3,
    input tri1 id_4,
    input supply1 id_5,
    input wire id_6,
    input wand id_7,
    output tri1 id_8,
    input uwire id_9,
    input wand id_10,
    input supply0 id_11,
    input tri0 id_12,
    input tri id_13,
    output tri1 id_14,
    output supply0 id_15
    , id_35,
    input tri1 id_16,
    input tri id_17,
    input wire id_18,
    output wor id_19,
    output tri1 id_20,
    input supply1 id_21,
    input wor id_22,
    input wire id_23,
    output supply0 id_24,
    output uwire id_25,
    input tri id_26,
    input tri1 id_27,
    input wor id_28,
    input uwire id_29,
    output tri0 id_30,
    output tri id_31,
    output wand id_32,
    output supply1 id_33
);
  assign id_14 = id_26;
  assign module_1.id_7 = 0;
endmodule
module module_1 (
    input tri1 id_0,
    output uwire id_1,
    output wire id_2,
    input tri id_3,
    input tri1 id_4,
    input tri id_5,
    output supply1 id_6,
    input tri id_7,
    input tri0 id_8,
    output tri1 id_9,
    input tri0 id_10,
    input tri0 id_11
);
  always_latch @(posedge 1);
  module_0 modCall_1 (
      id_10,
      id_4,
      id_8,
      id_5,
      id_0,
      id_5,
      id_5,
      id_7,
      id_1,
      id_0,
      id_0,
      id_10,
      id_5,
      id_7,
      id_1,
      id_9,
      id_5,
      id_8,
      id_8,
      id_6,
      id_2,
      id_0,
      id_4,
      id_10,
      id_2,
      id_1,
      id_11,
      id_7,
      id_3,
      id_0,
      id_9,
      id_6,
      id_6,
      id_1
  );
endmodule
