// Seed: 1678912419
module module_0 (
    input uwire id_0,
    output wand id_1,
    output wor id_2,
    input wand id_3,
    input wire id_4,
    input supply0 id_5,
    input tri1 id_6,
    input uwire id_7,
    output supply0 id_8,
    input tri0 id_9,
    output wand id_10,
    output wire id_11,
    output uwire id_12,
    input uwire id_13,
    output supply0 id_14,
    input wire id_15,
    input tri0 id_16,
    output wand id_17,
    input supply1 id_18,
    output tri0 id_19,
    input wor id_20,
    input tri0 id_21,
    output uwire id_22,
    input tri0 id_23,
    output wand id_24,
    output tri id_25,
    input tri0 id_26,
    input wire id_27,
    input supply0 id_28,
    output uwire id_29,
    input wand id_30,
    input supply0 id_31,
    input tri1 id_32,
    output tri id_33
);
  logic id_35;
endmodule
module module_1 (
    input tri id_0,
    input wand id_1,
    input supply0 id_2,
    output wand id_3,
    input wor id_4,
    input wire id_5,
    output wire id_6
    , id_9,
    output tri1 id_7
);
  module_0 modCall_1 (
      id_0,
      id_3,
      id_7,
      id_0,
      id_5,
      id_5,
      id_5,
      id_1,
      id_3,
      id_2,
      id_6,
      id_7,
      id_7,
      id_1,
      id_3,
      id_0,
      id_2,
      id_6,
      id_1,
      id_6,
      id_2,
      id_2,
      id_3,
      id_5,
      id_6,
      id_7,
      id_1,
      id_1,
      id_5,
      id_7,
      id_5,
      id_2,
      id_0,
      id_6
  );
  assign modCall_1.id_31 = 0;
  always_comb @(id_9) id_10({id_1, 1, -1'b0 - -1});
endmodule
