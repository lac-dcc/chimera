// Seed: 2306033873
module module_0 (
    input uwire id_0,
    output uwire id_1,
    output tri0 id_2,
    input tri0 id_3,
    output supply0 id_4,
    output tri1 id_5,
    input uwire id_6,
    output wand id_7,
    input wire id_8,
    input wor id_9,
    output tri0 id_10,
    input wire id_11,
    output uwire id_12
    , id_60,
    input supply0 id_13
    , id_61,
    input wire id_14,
    input wand id_15,
    input wor id_16,
    input tri id_17,
    output supply1 id_18,
    output supply0 id_19,
    input supply1 id_20,
    input supply0 id_21
    , id_62,
    output tri1 id_22,
    output wire id_23,
    output wire id_24,
    input tri0 id_25,
    output wire id_26,
    input wire id_27,
    output wand id_28,
    output tri0 id_29,
    output tri id_30,
    output supply0 id_31,
    output wire id_32,
    input tri1 id_33,
    output tri0 id_34,
    input wire id_35,
    output supply1 id_36
    , id_63,
    input uwire id_37,
    input wand id_38,
    input tri1 id_39,
    input supply0 id_40,
    output supply0 id_41,
    input wire id_42,
    input wire id_43,
    output tri id_44,
    input wor id_45,
    input supply0 id_46,
    input wand id_47,
    input tri id_48,
    output supply1 id_49,
    output uwire id_50,
    input wor id_51,
    output wor id_52,
    output wand id_53,
    output supply1 id_54,
    input wor id_55,
    output tri id_56,
    input supply1 id_57,
    input tri id_58
);
  parameter id_64 = -1;
  wire id_65;
  parameter id_66 = "";
  wire id_67;
endmodule
module module_1 (
    input uwire id_0,
    input uwire id_1,
    input tri0 id_2,
    output tri id_3,
    output supply0 id_4,
    input tri id_5,
    output wand id_6,
    input tri0 id_7,
    output tri0 id_8,
    input wor id_9,
    input tri1 id_10
);
  reg id_12;
  final $unsigned(75);
  ;
  module_0 modCall_1 (
      id_10,
      id_4,
      id_8,
      id_5,
      id_6,
      id_4,
      id_5,
      id_3,
      id_1,
      id_0,
      id_3,
      id_1,
      id_3,
      id_7,
      id_10,
      id_0,
      id_5,
      id_5,
      id_8,
      id_3,
      id_2,
      id_0,
      id_4,
      id_8,
      id_8,
      id_5,
      id_8,
      id_7,
      id_3,
      id_3,
      id_8,
      id_6,
      id_6,
      id_1,
      id_6,
      id_2,
      id_6,
      id_1,
      id_1,
      id_7,
      id_7,
      id_3,
      id_0,
      id_7,
      id_4,
      id_1,
      id_5,
      id_9,
      id_10,
      id_6,
      id_4,
      id_1,
      id_3,
      id_4,
      id_6,
      id_1,
      id_6,
      id_2,
      id_9
  );
  always @(1 or posedge 1) begin : LABEL_0
    if (1) begin : LABEL_1
      id_12 <= -1;
    end else disable id_13;
  end
  xnor primCall (id_4, id_0, id_7, id_5, id_12, id_1, id_2);
  wire id_14, id_15, id_16, id_17, id_18, id_19, id_20, id_21, id_22;
endmodule
