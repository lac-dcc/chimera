// Seed: 255019479
module module_0 (
    input tri id_0,
    input tri0 id_1,
    input wor id_2,
    input tri0 id_3,
    output wor id_4,
    output tri1 id_5,
    output supply0 id_6,
    output supply1 id_7,
    input supply0 id_8,
    input tri0 id_9,
    input tri0 id_10,
    input wand id_11,
    output uwire id_12,
    input supply1 id_13,
    output tri id_14,
    input supply1 id_15,
    input tri id_16,
    input tri0 id_17,
    output wand id_18,
    output wire id_19,
    output wire id_20,
    input tri0 id_21,
    input tri1 id_22,
    input uwire id_23,
    output tri0 id_24,
    output tri1 id_25,
    input tri id_26,
    input tri0 id_27
    , id_36,
    input supply1 id_28,
    input tri0 id_29,
    output supply0 id_30,
    input supply1 id_31,
    output wor id_32,
    output tri1 id_33,
    input supply1 id_34
);
  assign {id_28, id_2 & id_34, -1 == -1, id_29, -1, id_34, ~id_9, 1'd0} = -1;
  assign module_1.id_3 = 0;
  logic id_37;
endmodule
module module_1 #(
    parameter id_1 = 32'd98
) (
    input wor id_0,
    input tri0 _id_1,
    output uwire id_2,
    output wor id_3,
    output uwire id_4,
    input wor id_5,
    input supply1 id_6,
    output wand id_7,
    input wand id_8,
    input supply0 id_9,
    input tri1 id_10,
    output wor id_11,
    input supply0 id_12,
    input supply1 id_13,
    output wire id_14,
    input supply1 id_15,
    input supply0 id_16,
    input wor id_17,
    output wor id_18,
    input wire id_19
);
  logic [1 : id_1] id_21 = 1;
  module_0 modCall_1 (
      id_16,
      id_10,
      id_6,
      id_0,
      id_4,
      id_2,
      id_14,
      id_7,
      id_16,
      id_9,
      id_6,
      id_5,
      id_11,
      id_19,
      id_2,
      id_0,
      id_9,
      id_6,
      id_11,
      id_7,
      id_11,
      id_5,
      id_6,
      id_13,
      id_3,
      id_4,
      id_0,
      id_0,
      id_6,
      id_13,
      id_2,
      id_9,
      id_7,
      id_7,
      id_19
  );
endmodule
