// Seed: 3070574812
program module_0 (
    input uwire id_0,
    output uwire id_1,
    input uwire id_2,
    input tri id_3,
    input tri id_4,
    input supply0 id_5,
    output uwire id_6,
    output tri id_7,
    input supply1 id_8,
    input tri id_9,
    input tri1 id_10,
    input tri id_11,
    output wire id_12,
    output wor id_13,
    input tri1 id_14,
    output uwire id_15,
    input wand id_16,
    input supply0 id_17
    , id_55,
    output supply0 id_18,
    output wor id_19,
    input supply1 id_20,
    output supply0 id_21,
    output tri0 id_22,
    output tri id_23,
    input supply0 id_24,
    output tri0 id_25,
    output logic id_26,
    input wor id_27,
    input wor id_28,
    input supply0 id_29,
    output wand id_30,
    input wand id_31,
    output tri0 id_32,
    input tri0 id_33,
    output wand id_34,
    output tri1 id_35,
    input tri1 id_36,
    output tri0 id_37,
    input tri1 id_38,
    input tri0 id_39,
    input tri0 id_40,
    input supply1 id_41,
    input tri0 id_42,
    output tri0 id_43,
    output wand id_44,
    input wand id_45,
    input tri0 id_46,
    input wire id_47,
    input supply0 id_48,
    input uwire id_49,
    input uwire id_50,
    output wire id_51,
    output wand id_52,
    input tri0 id_53
    , id_56
);
  assign id_13 = -1;
  assign id_35 = id_28;
  wire id_57;
  if (1) begin : LABEL_0
    wire id_58;
    assign id_15 = -1'h0;
  end else begin : LABEL_1
    wire  id_59  ,  id_60  ,  id_61  ,  id_62  ,  id_63  ,  id_64  ,  id_65  ,  id_66  ,  id_67  ,  id_68  ,  id_69  ,  id_70  ,  id_71  ,  id_72  ,  id_73  ,  id_74  ,  id_75  ,  id_76  ,  id_77  ,  id_78  ,  id_79  ,  id_80  ,  id_81  ,  id_82  ,  id_83  ;
  end
  always begin : LABEL_2
    id_26 = -1;
  end
endprogram
module module_1 (
    input wor id_0,
    input tri1 id_1,
    output tri0 id_2,
    input tri1 id_3,
    input tri0 id_4,
    input wor id_5,
    output wor id_6,
    output supply1 id_7,
    input tri id_8,
    input uwire id_9,
    input tri1 id_10,
    input wand id_11,
    input supply1 id_12,
    output logic id_13,
    input tri1 id_14,
    output uwire id_15,
    input supply1 id_16
);
  initial id_13 <= id_14;
  module_0 modCall_1 (
      id_0,
      id_2,
      id_3,
      id_5,
      id_1,
      id_5,
      id_15,
      id_2,
      id_16,
      id_16,
      id_9,
      id_9,
      id_2,
      id_2,
      id_1,
      id_2,
      id_3,
      id_9,
      id_15,
      id_6,
      id_12,
      id_7,
      id_15,
      id_6,
      id_0,
      id_15,
      id_13,
      id_1,
      id_0,
      id_1,
      id_2,
      id_16,
      id_15,
      id_11,
      id_6,
      id_7,
      id_0,
      id_7,
      id_9,
      id_5,
      id_0,
      id_0,
      id_1,
      id_7,
      id_7,
      id_3,
      id_11,
      id_12,
      id_4,
      id_11,
      id_12,
      id_6,
      id_15,
      id_1
  );
  assign modCall_1.id_36 = 0;
endmodule
